%% coding: utf-8
{script,
    {"dynamic","0.1.0"},
    [{preLoaded,
         [atomics,counters,erl_init,erl_prim_loader,erl_tracer,erlang,
          erts_code_purger,erts_dirty_process_signal_handler,erts_internal,
          erts_literal_area_collector,init,persistent_term,prim_buffer,
          prim_eval,prim_file,prim_inet,prim_net,prim_socket,prim_zip,
          socket_registry,zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-8.5.3/ebin","$ROOT/lib/stdlib-4.2/ebin"]},
     {primLoad,
         [error_handler,application,application_controller,application_master,
          code,code_server,erl_eval,erl_lint,erl_parse,error_logger,ets,file,
          filename,file_server,file_io_server,gen,gen_event,gen_server,heart,
          kernel,logger,logger_filters,logger_server,logger_backend,
          logger_config,logger_simple_h,lists,proc_lib,supervisor]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-8.5.3/ebin"]},
     {primLoad,
         [application_starter,auth,disk_log,disk_log_1,disk_log_server,
          disk_log_sup,dist_ac,dist_util,erl_boot_server,erl_compile_server,
          erl_ddll,erl_distribution,erl_epmd,erl_erts_errors,
          erl_kernel_errors,erl_reply,erl_signal_handler,erpc,erts_debug,
          gen_sctp,gen_tcp,gen_tcp_socket,gen_udp,gen_udp_socket,global,
          global_group,global_search,group,group_history,inet,inet6_sctp,
          inet6_tcp,inet6_tcp_dist,inet6_udp,inet_config,inet_db,inet_dns,
          inet_gethost_native,inet_hosts,inet_parse,inet_res,inet_sctp,
          inet_tcp,inet_tcp_dist,inet_udp,kernel_config,kernel_refc,local_tcp,
          local_udp,logger_disk_log_h,logger_formatter,logger_h_common,
          logger_handler_watcher,logger_olp,logger_proxy,logger_std_h,
          logger_sup,net,net_adm,net_kernel,os,pg,pg2,ram_file,raw_file_io,
          raw_file_io_compressed,raw_file_io_deflate,raw_file_io_delayed,
          raw_file_io_inflate,raw_file_io_list,rpc,seq_trace,socket,
          standard_error,user,user_drv,user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-4.2/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v9,dict,digraph,digraph_utils,edlin,edlin_expand,
          epp,erl_abstract_code,erl_anno,erl_bits,erl_compile,erl_error,
          erl_expand_records,erl_features,erl_internal,erl_posix_msg,erl_pp,
          erl_scan,erl_stdlib_errors,erl_tar,error_logger_file_h,
          error_logger_tty_h,escript,eval_bits,file_sorter,filelib,gb_sets,
          gb_trees,gen_fsm,gen_statem,io,io_lib,io_lib_format,io_lib_fread,
          io_lib_pretty,log_mf_h,maps,math,ms_transform,orddict,ordsets,
          otp_internal,peer,pool,proplists,qlc,qlc_pt,queue,rand,random,re,
          sets,shell,shell_default,shell_docs,slave,sofs,string,
          supervisor_bridge,sys,timer,unicode,unicode_util,uri_string,
          win32reg,zip]},
     {path,["$ROOT/lib/compiler-8.2.3/ebin"]},
     {primLoad,
         [beam_a,beam_asm,beam_block,beam_bounds,beam_call_types,beam_clean,
          beam_dict,beam_digraph,beam_disasm,beam_flatten,beam_jump,
          beam_kernel_to_ssa,beam_listing,beam_opcodes,beam_ssa,
          beam_ssa_bc_size,beam_ssa_bool,beam_ssa_bsm,beam_ssa_codegen,
          beam_ssa_dead,beam_ssa_lint,beam_ssa_opt,beam_ssa_pp,
          beam_ssa_pre_codegen,beam_ssa_recv,beam_ssa_share,beam_ssa_throw,
          beam_ssa_type,beam_trim,beam_types,beam_utils,beam_validator,beam_z,
          cerl,cerl_clauses,cerl_inline,cerl_trees,compile,core_lib,core_lint,
          core_parse,core_pp,core_scan,erl_bifs,rec_env,sys_core_alias,
          sys_core_bsm,sys_core_fold,sys_core_fold_lists,sys_core_inline,
          sys_core_prepare,sys_messages,sys_pre_attributes,v3_core,v3_kernel,
          v3_kernel_pp]},
     {path,["$RELEASE_LIB/elixir-1.14.3/ebin"]},
     {primLoad,
         ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
          'Elixir.Application','Elixir.ArgumentError',
          'Elixir.ArithmeticError','Elixir.Atom','Elixir.BadArityError',
          'Elixir.BadBooleanError','Elixir.BadFunctionError',
          'Elixir.BadMapError','Elixir.BadStructError','Elixir.Base',
          'Elixir.Behaviour','Elixir.Bitwise','Elixir.Calendar',
          'Elixir.Calendar.ISO','Elixir.Calendar.TimeZoneDatabase',
          'Elixir.Calendar.UTCOnlyTimeZoneDatabase','Elixir.CaseClauseError',
          'Elixir.Code','Elixir.Code.Formatter','Elixir.Code.Fragment',
          'Elixir.Code.Identifier','Elixir.Code.LoadError',
          'Elixir.Code.Normalizer','Elixir.Code.Typespec',
          'Elixir.Collectable','Elixir.Collectable.BitString',
          'Elixir.Collectable.File.Stream','Elixir.Collectable.HashDict',
          'Elixir.Collectable.HashSet','Elixir.Collectable.IO.Stream',
          'Elixir.Collectable.List','Elixir.Collectable.Map',
          'Elixir.Collectable.MapSet','Elixir.CompileError',
          'Elixir.CondClauseError','Elixir.Config','Elixir.Config.Provider',
          'Elixir.Config.Reader','Elixir.Date','Elixir.Date.Range',
          'Elixir.DateTime','Elixir.Dict','Elixir.DynamicSupervisor',
          'Elixir.Enum','Elixir.Enum.EmptyError',
          'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
          'Elixir.Enumerable.Date.Range','Elixir.Enumerable.File.Stream',
          'Elixir.Enumerable.Function','Elixir.Enumerable.GenEvent.Stream',
          'Elixir.Enumerable.HashDict','Elixir.Enumerable.HashSet',
          'Elixir.Enumerable.IO.Stream','Elixir.Enumerable.List',
          'Elixir.Enumerable.Map','Elixir.Enumerable.MapSet',
          'Elixir.Enumerable.Range','Elixir.Enumerable.Stream',
          'Elixir.ErlangError','Elixir.Exception','Elixir.File',
          'Elixir.File.CopyError','Elixir.File.Error','Elixir.File.LinkError',
          'Elixir.File.RenameError','Elixir.File.Stat','Elixir.File.Stream',
          'Elixir.Float','Elixir.Function','Elixir.FunctionClauseError',
          'Elixir.GenEvent','Elixir.GenEvent.Stream','Elixir.GenServer',
          'Elixir.HashDict','Elixir.HashSet','Elixir.IO','Elixir.IO.ANSI',
          'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
          'Elixir.IO.StreamError','Elixir.Inspect','Elixir.Inspect.Algebra',
          'Elixir.Inspect.Any','Elixir.Inspect.Atom',
          'Elixir.Inspect.BitString','Elixir.Inspect.Date',
          'Elixir.Inspect.Date.Range','Elixir.Inspect.DateTime',
          'Elixir.Inspect.Error','Elixir.Inspect.Float',
          'Elixir.Inspect.Function','Elixir.Inspect.HashDict',
          'Elixir.Inspect.HashSet','Elixir.Inspect.Inspect.Error',
          'Elixir.Inspect.Integer','Elixir.Inspect.List',
          'Elixir.Inspect.Macro.Env','Elixir.Inspect.Map',
          'Elixir.Inspect.MapSet','Elixir.Inspect.NaiveDateTime',
          'Elixir.Inspect.Opts','Elixir.Inspect.PID','Elixir.Inspect.Port',
          'Elixir.Inspect.Range','Elixir.Inspect.Reference',
          'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
          'Elixir.Inspect.Time','Elixir.Inspect.Tuple','Elixir.Inspect.URI',
          'Elixir.Inspect.Version','Elixir.Inspect.Version.Requirement',
          'Elixir.Integer','Elixir.Kernel','Elixir.Kernel.CLI',
          'Elixir.Kernel.ErrorHandler','Elixir.Kernel.LexicalTracker',
          'Elixir.Kernel.ParallelCompiler','Elixir.Kernel.ParallelRequire',
          'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
          'Elixir.Kernel.Utils','Elixir.KeyError','Elixir.Keyword',
          'Elixir.List','Elixir.List.Chars','Elixir.List.Chars.Atom',
          'Elixir.List.Chars.BitString','Elixir.List.Chars.Float',
          'Elixir.List.Chars.Integer','Elixir.List.Chars.List','Elixir.Macro',
          'Elixir.Macro.Env','Elixir.Map','Elixir.MapSet','Elixir.MatchError',
          'Elixir.Module','Elixir.Module.LocalsTracker',
          'Elixir.Module.ParallelChecker','Elixir.Module.Types',
          'Elixir.Module.Types.Error','Elixir.Module.Types.Expr',
          'Elixir.Module.Types.Helpers','Elixir.Module.Types.Of',
          'Elixir.Module.Types.Pattern','Elixir.Module.Types.Unify',
          'Elixir.NaiveDateTime','Elixir.Node','Elixir.OptionParser',
          'Elixir.OptionParser.ParseError','Elixir.PartitionSupervisor',
          'Elixir.Path','Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
          'Elixir.Protocol','Elixir.Protocol.UndefinedError','Elixir.Range',
          'Elixir.Record','Elixir.Record.Extractor','Elixir.Regex',
          'Elixir.Regex.CompileError','Elixir.Registry',
          'Elixir.Registry.Partition','Elixir.Registry.Supervisor',
          'Elixir.RuntimeError','Elixir.Set','Elixir.Stream',
          'Elixir.Stream.Reducers','Elixir.String','Elixir.String.Break',
          'Elixir.String.Chars','Elixir.String.Chars.Atom',
          'Elixir.String.Chars.BitString','Elixir.String.Chars.Date',
          'Elixir.String.Chars.DateTime','Elixir.String.Chars.Float',
          'Elixir.String.Chars.Integer','Elixir.String.Chars.List',
          'Elixir.String.Chars.NaiveDateTime','Elixir.String.Chars.Time',
          'Elixir.String.Chars.URI','Elixir.String.Chars.Version',
          'Elixir.String.Chars.Version.Requirement','Elixir.String.Tokenizer',
          'Elixir.String.Tokenizer.ScriptSet',
          'Elixir.String.Tokenizer.Security','Elixir.String.Unicode',
          'Elixir.StringIO','Elixir.Supervisor','Elixir.Supervisor.Default',
          'Elixir.Supervisor.Spec','Elixir.SyntaxError','Elixir.System',
          'Elixir.System.EnvError','Elixir.System.SignalHandler',
          'Elixir.SystemLimitError','Elixir.Task','Elixir.Task.Supervised',
          'Elixir.Task.Supervisor','Elixir.Time','Elixir.TokenMissingError',
          'Elixir.TryClauseError','Elixir.Tuple','Elixir.URI',
          'Elixir.URI.Error','Elixir.UndefinedFunctionError',
          'Elixir.UnicodeConversionError','Elixir.Version',
          'Elixir.Version.InvalidRequirementError',
          'Elixir.Version.InvalidVersionError','Elixir.Version.Parser',
          'Elixir.Version.Requirement','Elixir.WithClauseError',elixir,
          elixir_aliases,elixir_bitstring,elixir_bootstrap,elixir_clauses,
          elixir_code_server,elixir_compiler,elixir_config,elixir_def,
          elixir_dispatch,elixir_env,elixir_erl,elixir_erl_clauses,
          elixir_erl_compiler,elixir_erl_for,elixir_erl_pass,elixir_erl_try,
          elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,elixir_import,
          elixir_interpolation,elixir_lexical,elixir_locals,elixir_map,
          elixir_module,elixir_overridable,elixir_parser,elixir_quote,
          elixir_rewrite,elixir_sup,elixir_tokenizer,elixir_utils]},
     {path,["$ROOT/lib/sasl-4.2/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,rb,rb_format_supp,
          release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,systools,systools_lib,
          systools_make,systools_rc,systools_relup]},
     {path,["$ROOT/lib/runtime_tools-1.19/ebin"]},
     {primLoad,
         [appmon_info,dbg,dyntrace,erts_alloc_config,msacc,observer_backend,
          runtime_tools,runtime_tools_sup,scheduler,system_information,
          ttb_autostart]},
     {path,["$RELEASE_LIB/logger-1.14.3/ebin"]},
     {primLoad,
         ['Elixir.Logger','Elixir.Logger.App',
          'Elixir.Logger.BackendSupervisor','Elixir.Logger.Backends.Console',
          'Elixir.Logger.Config','Elixir.Logger.Filter',
          'Elixir.Logger.Formatter','Elixir.Logger.Handler',
          'Elixir.Logger.Translator','Elixir.Logger.Utils',
          'Elixir.Logger.Watcher']},
     {path,["$RELEASE_LIB/eex-1.14.3/ebin"]},
     {primLoad,
         ['Elixir.EEx','Elixir.EEx.Compiler','Elixir.EEx.Engine',
          'Elixir.EEx.SmartEngine','Elixir.EEx.SyntaxError']},
     {path,["$ROOT/lib/asn1-5.0.21/ebin"]},
     {primLoad,[asn1rt_nif]},
     {path,["$RELEASE_LIB/certifi-2.12.0/ebin"]},
     {primLoad,[certifi,certifi_pt]},
     {path,["$ROOT/lib/crypto-5.1.2/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,["$RELEASE_LIB/unicode_util_compat-0.7.0/ebin"]},
     {primLoad,[string_compat,unicode_util_compat]},
     {path,["$RELEASE_LIB/idna-6.1.1/ebin"]},
     {primLoad,
         [idna,idna_bidi,idna_context,idna_data,idna_mapping,idna_table,
          idna_ucs,punycode]},
     {path,["$RELEASE_LIB/metrics-1.0.1/ebin"]},
     {primLoad,[metrics,metrics_dummy,metrics_exometer,metrics_folsom]},
     {path,["$RELEASE_LIB/mimerl-1.3.0/ebin"]},
     {primLoad,[mimerl]},
     {path,["$ROOT/lib/syntax_tools-3.0/ebin"]},
     {primLoad,
         [epp_dodger,erl_comment_scan,erl_prettypr,erl_recomment,erl_syntax,
          erl_syntax_lib,merl,merl_transform,prettypr]},
     {path,["$RELEASE_LIB/parse_trans-3.4.1/ebin"]},
     {primLoad,
         [ct_expand,exprecs,parse_trans,parse_trans_codegen,parse_trans_mod,
          parse_trans_pp]},
     {path,["$ROOT/lib/public_key-1.13.2/ebin"]},
     {primLoad,
         ['OTP-PUB-KEY','PKCS-FRAME',pubkey_cert,pubkey_cert_records,
          pubkey_crl,pubkey_ocsp,pubkey_os_cacerts,pubkey_pbe,pubkey_pem,
          pubkey_ssh,public_key]},
     {path,["$ROOT/lib/ssl-10.8.7/ebin"]},
     {primLoad,
         [dtls_connection,dtls_connection_sup,dtls_gen_connection,
          dtls_handshake,dtls_listener_sup,dtls_packet_demux,dtls_record,
          dtls_server_session_cache_sup,dtls_server_sup,dtls_socket,dtls_sup,
          dtls_v1,inet6_tls_dist,inet_tls_dist,ssl,ssl_admin_sup,ssl_alert,
          ssl_app,ssl_certificate,ssl_cipher,ssl_cipher_format,
          ssl_client_session_cache_db,ssl_config,ssl_connection_sup,ssl_crl,
          ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,ssl_dh_groups,
          ssl_dist_admin_sup,ssl_dist_connection_sup,ssl_dist_sup,
          ssl_gen_statem,ssl_handshake,ssl_listen_tracker_sup,ssl_logger,
          ssl_manager,ssl_pem_cache,ssl_pkix_db,ssl_record,
          ssl_server_session_cache,ssl_server_session_cache_db,
          ssl_server_session_cache_sup,ssl_session,ssl_session_cache_api,
          ssl_srp_primes,ssl_sup,ssl_upgrade_server_session_cache_sup,
          tls_bloom_filter,tls_client_ticket_store,tls_connection,
          tls_connection_1_3,tls_connection_sup,tls_dist_server_sup,
          tls_dist_sup,tls_dtls_connection,tls_dyn_connection_sup,
          tls_gen_connection,tls_handshake,tls_handshake_1_3,tls_record,
          tls_record_1_3,tls_sender,tls_server_session_ticket,
          tls_server_session_ticket_sup,tls_server_sup,tls_socket,tls_sup,
          tls_v1]},
     {path,["$RELEASE_LIB/ssl_verify_fun-1.1.7/ebin"]},
     {primLoad,
         [ssl_verify_fingerprint,ssl_verify_fun_cert_helpers,
          ssl_verify_fun_encodings,ssl_verify_hostname,ssl_verify_pk,
          ssl_verify_string,ssl_verify_util]},
     {path,["$RELEASE_LIB/hackney-1.20.1/ebin"]},
     {primLoad,
         [hackney,hackney_app,hackney_bstr,hackney_connect,hackney_connection,
          hackney_connections,hackney_cookie,hackney_date,hackney_headers,
          hackney_headers_new,hackney_http,hackney_http_connect,
          hackney_local_tcp,hackney_manager,hackney_metrics,hackney_multipart,
          hackney_pool,hackney_pool_handler,hackney_request,hackney_response,
          hackney_socks5,hackney_ssl,hackney_ssl_certificate,hackney_stream,
          hackney_sup,hackney_tcp,hackney_trace,hackney_url,hackney_util]},
     {path,["$RELEASE_LIB/mime-1.6.0/ebin"]},
     {primLoad,['Elixir.MIME','Elixir.MIME.Application']},
     {path,["$RELEASE_LIB/plug_crypto-2.1.0/ebin"]},
     {primLoad,
         ['Elixir.Plug.Crypto','Elixir.Plug.Crypto.Application',
          'Elixir.Plug.Crypto.KeyGenerator',
          'Elixir.Plug.Crypto.MessageEncryptor',
          'Elixir.Plug.Crypto.MessageVerifier']},
     {path,["$RELEASE_LIB/telemetry-1.3.0/ebin"]},
     {primLoad,
         [telemetry,telemetry_app,telemetry_handler_table,telemetry_sup,
          telemetry_test]},
     {path,["$RELEASE_LIB/plug-1.16.1/ebin"]},
     {primLoad,
         ['Elixir.Inspect.Plug.Conn','Elixir.Plug',
          'Elixir.Plug.Adapters.Cowboy','Elixir.Plug.Adapters.Test.Conn',
          'Elixir.Plug.Application','Elixir.Plug.BadRequestError',
          'Elixir.Plug.BasicAuth','Elixir.Plug.Builder',
          'Elixir.Plug.CSRFProtection',
          'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
          'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
          'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
          'Elixir.Plug.Conn.AlreadySentError',
          'Elixir.Plug.Conn.CookieOverflowError','Elixir.Plug.Conn.Cookies',
          'Elixir.Plug.Conn.InvalidHeaderError',
          'Elixir.Plug.Conn.InvalidQueryError',
          'Elixir.Plug.Conn.NotSentError','Elixir.Plug.Conn.Query',
          'Elixir.Plug.Conn.Status','Elixir.Plug.Conn.Unfetched',
          'Elixir.Plug.Conn.Utils','Elixir.Plug.Conn.WrapperError',
          'Elixir.Plug.Debugger','Elixir.Plug.ErrorHandler',
          'Elixir.Plug.Exception','Elixir.Plug.Exception.Any',
          'Elixir.Plug.HTML','Elixir.Plug.Head','Elixir.Plug.Logger',
          'Elixir.Plug.MIME','Elixir.Plug.MethodOverride',
          'Elixir.Plug.Parsers','Elixir.Plug.Parsers.BadEncodingError',
          'Elixir.Plug.Parsers.JSON','Elixir.Plug.Parsers.MULTIPART',
          'Elixir.Plug.Parsers.ParseError',
          'Elixir.Plug.Parsers.RequestTooLargeError',
          'Elixir.Plug.Parsers.URLENCODED',
          'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
          'Elixir.Plug.RequestId','Elixir.Plug.RewriteOn',
          'Elixir.Plug.Router','Elixir.Plug.Router.InvalidSpecError',
          'Elixir.Plug.Router.MalformedURIError','Elixir.Plug.Router.Utils',
          'Elixir.Plug.SSL','Elixir.Plug.Session',
          'Elixir.Plug.Session.COOKIE','Elixir.Plug.Session.ETS',
          'Elixir.Plug.Session.Store','Elixir.Plug.Static',
          'Elixir.Plug.Static.InvalidPathError','Elixir.Plug.Telemetry',
          'Elixir.Plug.Test','Elixir.Plug.TimeoutError','Elixir.Plug.Upload',
          'Elixir.Plug.UploadError',plug_multipart]},
     {path,["$RELEASE_LIB/bamboo-2.3.1/ebin"]},
     {primLoad,
         ['Elixir.Bamboo','Elixir.Bamboo.Adapter',
          'Elixir.Bamboo.AdapterHelper','Elixir.Bamboo.ApiError',
          'Elixir.Bamboo.Attachment','Elixir.Bamboo.DeliverLaterStrategy',
          'Elixir.Bamboo.Email','Elixir.Bamboo.EmptyFromAddressError',
          'Elixir.Bamboo.Formatter','Elixir.Bamboo.Formatter.BitString',
          'Elixir.Bamboo.Formatter.List','Elixir.Bamboo.Formatter.Map',
          'Elixir.Bamboo.Formatter.Tuple',
          'Elixir.Bamboo.ImmediateDeliveryStrategy',
          'Elixir.Bamboo.Interceptor','Elixir.Bamboo.LocalAdapter',
          'Elixir.Bamboo.Mailer','Elixir.Bamboo.MailgunAdapter',
          'Elixir.Bamboo.MailgunHelper','Elixir.Bamboo.MandrillAdapter',
          'Elixir.Bamboo.MandrillHelper','Elixir.Bamboo.NilRecipientsError',
          'Elixir.Bamboo.SendGridAdapter','Elixir.Bamboo.SendGridHelper',
          'Elixir.Bamboo.SentEmail','Elixir.Bamboo.SentEmail.DeliveriesError',
          'Elixir.Bamboo.SentEmail.NoDeliveriesError',
          'Elixir.Bamboo.SentEmailApiPlug',
          'Elixir.Bamboo.SentEmailViewerPlug',
          'Elixir.Bamboo.SentEmailViewerPlug.Helper',
          'Elixir.Bamboo.TaskSupervisorStrategy','Elixir.Bamboo.Template',
          'Elixir.Bamboo.Test','Elixir.Bamboo.TestAdapter',
          'Elixir.Bamboo.View','Elixir.Bamboo.View.UndefinedTemplateError',
          'Elixir.Mix.Tasks.Bamboo.StartSentEmailViewer']},
     {path,["$RELEASE_LIB/comeonin-5.4.0/ebin"]},
     {primLoad,
         ['Elixir.Comeonin','Elixir.Comeonin.BehaviourTestHelper',
          'Elixir.Comeonin.PasswordHash']},
     {path,["$RELEASE_LIB/bcrypt_elixir-3.1.0/ebin"]},
     {primLoad,['Elixir.Bcrypt','Elixir.Bcrypt.Base','Elixir.Bcrypt.Stats']},
     {path,["$RELEASE_LIB/corsica-1.3.0/ebin"]},
     {primLoad,
         ['Elixir.Corsica','Elixir.Corsica.Options','Elixir.Corsica.Router']},
     {path,["$RELEASE_LIB/artificery-0.4.3/ebin"]},
     {primLoad,
         ['Elixir.Artificery','Elixir.Artificery.Command',
          'Elixir.Artificery.Console','Elixir.Artificery.Console.Color',
          'Elixir.Artificery.Console.Color.ANSI',
          'Elixir.Artificery.Console.Events',
          'Elixir.Artificery.Console.Prompt',
          'Elixir.Artificery.Console.Spinner',
          'Elixir.Artificery.Console.Table','Elixir.Artificery.Entry',
          'Elixir.Artificery.Option']},
     {path,["$RELEASE_LIB/distillery-2.1.1/ebin"]},
     {primLoad,
         ['Elixir.Distillery.Cookies','Elixir.Distillery.Releases.App',
          'Elixir.Distillery.Releases.Appup',
          'Elixir.Distillery.Releases.Appup.Transform',
          'Elixir.Distillery.Releases.Appup.TransformError',
          'Elixir.Distillery.Releases.Appup.Utils',
          'Elixir.Distillery.Releases.Archiver',
          'Elixir.Distillery.Releases.Archiver.Archive',
          'Elixir.Distillery.Releases.Assembler',
          'Elixir.Distillery.Releases.BootScript',
          'Elixir.Distillery.Releases.Checks',
          'Elixir.Distillery.Releases.Checks.Cookie',
          'Elixir.Distillery.Releases.Checks.Erts',
          'Elixir.Distillery.Releases.Checks.LoadedOrphanedApps',
          'Elixir.Distillery.Releases.Config',
          'Elixir.Distillery.Releases.Config.LoadError',
          'Elixir.Distillery.Releases.Config.Provider',
          'Elixir.Distillery.Releases.Config.Providers.Elixir',
          'Elixir.Distillery.Releases.Environment',
          'Elixir.Distillery.Releases.Errors',
          'Elixir.Distillery.Releases.Overlays',
          'Elixir.Distillery.Releases.Plugin',
          'Elixir.Distillery.Releases.Profile',
          'Elixir.Distillery.Releases.Release',
          'Elixir.Distillery.Releases.Runtime.Control',
          'Elixir.Distillery.Releases.Runtime.Pidfile',
          'Elixir.Distillery.Releases.Shell',
          'Elixir.Distillery.Releases.Shell.Macros',
          'Elixir.Distillery.Releases.Utils',
          'Elixir.Mix.Tasks.Distillery.Gen.Appup',
          'Elixir.Mix.Tasks.Distillery.Init',
          'Elixir.Mix.Tasks.Distillery.Init.MixMock',
          'Elixir.Mix.Tasks.Distillery.Init.MixMock.Project',
          'Elixir.Mix.Tasks.Distillery.Release',
          'Elixir.Mix.Tasks.Distillery.Release.Clean']},
     {path,["$RELEASE_LIB/decimal-2.1.1/ebin"]},
     {primLoad,
         ['Elixir.Decimal','Elixir.Decimal.Context','Elixir.Decimal.Error',
          'Elixir.Decimal.Macros','Elixir.Inspect.Decimal',
          'Elixir.String.Chars.Decimal']},
     {path,["$RELEASE_LIB/ecto-3.10.3/ebin"]},
     {primLoad,
         ['Elixir.Ecto','Elixir.Ecto.Adapter','Elixir.Ecto.Adapter.Queryable',
          'Elixir.Ecto.Adapter.Schema','Elixir.Ecto.Adapter.Storage',
          'Elixir.Ecto.Adapter.Transaction','Elixir.Ecto.Application',
          'Elixir.Ecto.Association','Elixir.Ecto.Association.BelongsTo',
          'Elixir.Ecto.Association.Has','Elixir.Ecto.Association.HasThrough',
          'Elixir.Ecto.Association.ManyToMany',
          'Elixir.Ecto.Association.NotLoaded','Elixir.Ecto.CastError',
          'Elixir.Ecto.ChangeError','Elixir.Ecto.Changeset',
          'Elixir.Ecto.Changeset.Relation','Elixir.Ecto.ConstraintError',
          'Elixir.Ecto.Embedded','Elixir.Ecto.Enum',
          'Elixir.Ecto.InvalidChangesetError','Elixir.Ecto.InvalidURLError',
          'Elixir.Ecto.MigrationError','Elixir.Ecto.Multi',
          'Elixir.Ecto.MultiplePrimaryKeyError',
          'Elixir.Ecto.MultipleResultsError',
          'Elixir.Ecto.NoPrimaryKeyFieldError',
          'Elixir.Ecto.NoPrimaryKeyValueError','Elixir.Ecto.NoResultsError',
          'Elixir.Ecto.ParameterizedType','Elixir.Ecto.Query',
          'Elixir.Ecto.Query.API','Elixir.Ecto.Query.BooleanExpr',
          'Elixir.Ecto.Query.Builder','Elixir.Ecto.Query.Builder.CTE',
          'Elixir.Ecto.Query.Builder.Combination',
          'Elixir.Ecto.Query.Builder.Distinct',
          'Elixir.Ecto.Query.Builder.Dynamic',
          'Elixir.Ecto.Query.Builder.Filter','Elixir.Ecto.Query.Builder.From',
          'Elixir.Ecto.Query.Builder.GroupBy',
          'Elixir.Ecto.Query.Builder.Join',
          'Elixir.Ecto.Query.Builder.LimitOffset',
          'Elixir.Ecto.Query.Builder.Lock',
          'Elixir.Ecto.Query.Builder.OrderBy',
          'Elixir.Ecto.Query.Builder.Preload',
          'Elixir.Ecto.Query.Builder.Select',
          'Elixir.Ecto.Query.Builder.Update',
          'Elixir.Ecto.Query.Builder.Windows','Elixir.Ecto.Query.CastError',
          'Elixir.Ecto.Query.CompileError','Elixir.Ecto.Query.DynamicExpr',
          'Elixir.Ecto.Query.FromExpr','Elixir.Ecto.Query.JoinExpr',
          'Elixir.Ecto.Query.LimitExpr','Elixir.Ecto.Query.Planner',
          'Elixir.Ecto.Query.QueryExpr','Elixir.Ecto.Query.SelectExpr',
          'Elixir.Ecto.Query.Tagged','Elixir.Ecto.Query.WindowAPI',
          'Elixir.Ecto.Query.WithExpr','Elixir.Ecto.QueryError',
          'Elixir.Ecto.Queryable','Elixir.Ecto.Queryable.Atom',
          'Elixir.Ecto.Queryable.BitString',
          'Elixir.Ecto.Queryable.Ecto.Query',
          'Elixir.Ecto.Queryable.Ecto.SubQuery','Elixir.Ecto.Queryable.Tuple',
          'Elixir.Ecto.Repo','Elixir.Ecto.Repo.Assoc',
          'Elixir.Ecto.Repo.Preloader','Elixir.Ecto.Repo.Queryable',
          'Elixir.Ecto.Repo.Registry','Elixir.Ecto.Repo.Schema',
          'Elixir.Ecto.Repo.Supervisor','Elixir.Ecto.Repo.Transaction',
          'Elixir.Ecto.Schema','Elixir.Ecto.Schema.Loader',
          'Elixir.Ecto.Schema.Metadata','Elixir.Ecto.StaleEntryError',
          'Elixir.Ecto.SubQuery','Elixir.Ecto.SubQueryError',
          'Elixir.Ecto.Type','Elixir.Ecto.UUID',
          'Elixir.Inspect.Ecto.Association.NotLoaded',
          'Elixir.Inspect.Ecto.Changeset','Elixir.Inspect.Ecto.Query',
          'Elixir.Inspect.Ecto.Query.DynamicExpr',
          'Elixir.Inspect.Ecto.Schema.Metadata',
          'Elixir.Jason.Encoder.Ecto.Association.NotLoaded',
          'Elixir.Jason.Encoder.Ecto.Schema.Metadata','Elixir.Mix.Ecto',
          'Elixir.Mix.Tasks.Ecto','Elixir.Mix.Tasks.Ecto.Create',
          'Elixir.Mix.Tasks.Ecto.Drop','Elixir.Mix.Tasks.Ecto.Gen.Repo']},
     {path,["$RELEASE_LIB/db_connection-2.7.0/ebin"]},
     {primLoad,
         ['Elixir.DBConnection','Elixir.DBConnection.App',
          'Elixir.DBConnection.Backoff','Elixir.DBConnection.Connection',
          'Elixir.DBConnection.ConnectionError',
          'Elixir.DBConnection.ConnectionPool',
          'Elixir.DBConnection.ConnectionPool.Pool',
          'Elixir.DBConnection.EncodeError','Elixir.DBConnection.Holder',
          'Elixir.DBConnection.LogEntry','Elixir.DBConnection.Ownership',
          'Elixir.DBConnection.Ownership.Manager',
          'Elixir.DBConnection.Ownership.Proxy',
          'Elixir.DBConnection.OwnershipError','Elixir.DBConnection.Pool',
          'Elixir.DBConnection.PrepareStream','Elixir.DBConnection.Query',
          'Elixir.DBConnection.Stream','Elixir.DBConnection.Task',
          'Elixir.DBConnection.TelemetryListener',
          'Elixir.DBConnection.TransactionError',
          'Elixir.DBConnection.Watcher',
          'Elixir.Enumerable.DBConnection.PrepareStream',
          'Elixir.Enumerable.DBConnection.Stream']},
     {path,["$RELEASE_LIB/ecto_sql-3.10.2/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Ecto.Adapters.SQL.Stream',
          'Elixir.Ecto.Adapter.Migration','Elixir.Ecto.Adapter.Structure',
          'Elixir.Ecto.Adapters.MyXQL','Elixir.Ecto.Adapters.Postgres',
          'Elixir.Ecto.Adapters.Postgres.Connection',
          'Elixir.Ecto.Adapters.SQL','Elixir.Ecto.Adapters.SQL.Application',
          'Elixir.Ecto.Adapters.SQL.Connection',
          'Elixir.Ecto.Adapters.SQL.Sandbox',
          'Elixir.Ecto.Adapters.SQL.Sandbox.Connection',
          'Elixir.Ecto.Adapters.SQL.Stream','Elixir.Ecto.Adapters.Tds',
          'Elixir.Ecto.Migration','Elixir.Ecto.Migration.Command',
          'Elixir.Ecto.Migration.Constraint','Elixir.Ecto.Migration.Index',
          'Elixir.Ecto.Migration.Reference','Elixir.Ecto.Migration.Runner',
          'Elixir.Ecto.Migration.SchemaMigration',
          'Elixir.Ecto.Migration.Table','Elixir.Ecto.Migrator',
          'Elixir.Enumerable.Ecto.Adapters.SQL.Stream','Elixir.Mix.EctoSQL',
          'Elixir.Mix.Tasks.Ecto.Dump','Elixir.Mix.Tasks.Ecto.Gen.Migration',
          'Elixir.Mix.Tasks.Ecto.Load','Elixir.Mix.Tasks.Ecto.Migrate',
          'Elixir.Mix.Tasks.Ecto.Migrations',
          'Elixir.Mix.Tasks.Ecto.Rollback']},
     {path,["$RELEASE_LIB/httpoison-2.2.1/ebin"]},
     {primLoad,
         ['Elixir.HTTPoison','Elixir.HTTPoison.AsyncChunk',
          'Elixir.HTTPoison.AsyncEnd','Elixir.HTTPoison.AsyncHeaders',
          'Elixir.HTTPoison.AsyncRedirect','Elixir.HTTPoison.AsyncResponse',
          'Elixir.HTTPoison.AsyncStatus','Elixir.HTTPoison.Base',
          'Elixir.HTTPoison.Error','Elixir.HTTPoison.Handlers.Multipart',
          'Elixir.HTTPoison.MaybeRedirect','Elixir.HTTPoison.Request',
          'Elixir.HTTPoison.Response']},
     {path,["$RELEASE_LIB/vex-0.9.2/ebin"]},
     {primLoad,
         ['Elixir.Vex','Elixir.Vex.Blank','Elixir.Vex.Blank.Any',
          'Elixir.Vex.Blank.Atom','Elixir.Vex.Blank.BitString',
          'Elixir.Vex.Blank.Date','Elixir.Vex.Blank.DateTime',
          'Elixir.Vex.Blank.Float','Elixir.Vex.Blank.Integer',
          'Elixir.Vex.Blank.List','Elixir.Vex.Blank.Map',
          'Elixir.Vex.Blank.NaiveDateTime','Elixir.Vex.Blank.Time',
          'Elixir.Vex.Blank.Tuple','Elixir.Vex.ErrorRenderer',
          'Elixir.Vex.ErrorRenderers.EEx',
          'Elixir.Vex.ErrorRenderers.Parameterized','Elixir.Vex.Extract',
          'Elixir.Vex.Extract.List','Elixir.Vex.Extract.Map',
          'Elixir.Vex.Extract.Struct','Elixir.Vex.Extract.Tuple',
          'Elixir.Vex.InvalidValidatorError','Elixir.Vex.Struct',
          'Elixir.Vex.Validator','Elixir.Vex.Validator.Behaviour',
          'Elixir.Vex.Validator.ErrorMessage','Elixir.Vex.Validator.Skipping',
          'Elixir.Vex.Validator.Source','Elixir.Vex.Validator.Source.Atom',
          'Elixir.Vex.Validator.Source.List','Elixir.Vex.Validators',
          'Elixir.Vex.Validators.Absence','Elixir.Vex.Validators.Acceptance',
          'Elixir.Vex.Validators.By','Elixir.Vex.Validators.Confirmation',
          'Elixir.Vex.Validators.Exclusion','Elixir.Vex.Validators.Format',
          'Elixir.Vex.Validators.Inclusion','Elixir.Vex.Validators.Length',
          'Elixir.Vex.Validators.Number','Elixir.Vex.Validators.Presence',
          'Elixir.Vex.Validators.Uuid']},
     {path,["$RELEASE_LIB/elasticsearch-1.0.1/ebin"]},
     {primLoad,
         ['Elixir.Elasticsearch','Elixir.Elasticsearch.API',
          'Elixir.Elasticsearch.API.HTTP','Elixir.Elasticsearch.Application',
          'Elixir.Elasticsearch.Cluster',
          'Elixir.Elasticsearch.Cluster.Config',
          'Elixir.Elasticsearch.Document','Elixir.Elasticsearch.Exception',
          'Elixir.Elasticsearch.Executable','Elixir.Elasticsearch.Index',
          'Elixir.Elasticsearch.Index.Bulk','Elixir.Elasticsearch.Store',
          'Elixir.Mix.Tasks.Elasticsearch.Build',
          'Elixir.Mix.Tasks.Elasticsearch.Install']},
     {path,["$RELEASE_LIB/ex_json_schema-0.9.3/ebin"]},
     {primLoad,
         ['Elixir.ExJsonSchema','Elixir.ExJsonSchema.Schema',
          'Elixir.ExJsonSchema.Schema.Draft4',
          'Elixir.ExJsonSchema.Schema.Draft6',
          'Elixir.ExJsonSchema.Schema.Draft7',
          'Elixir.ExJsonSchema.Schema.InvalidReferenceError',
          'Elixir.ExJsonSchema.Schema.InvalidSchemaError',
          'Elixir.ExJsonSchema.Schema.MissingJsonDecoderError',
          'Elixir.ExJsonSchema.Schema.Root',
          'Elixir.ExJsonSchema.Schema.UndefinedRemoteSchemaResolverError',
          'Elixir.ExJsonSchema.Schema.UnsupportedSchemaVersionError',
          'Elixir.ExJsonSchema.Validator',
          'Elixir.ExJsonSchema.Validator.AllOf',
          'Elixir.ExJsonSchema.Validator.AnyOf',
          'Elixir.ExJsonSchema.Validator.Const',
          'Elixir.ExJsonSchema.Validator.Contains',
          'Elixir.ExJsonSchema.Validator.ContentEncodingContentMediaType',
          'Elixir.ExJsonSchema.Validator.Dependencies',
          'Elixir.ExJsonSchema.Validator.Enum',
          'Elixir.ExJsonSchema.Validator.Error',
          'Elixir.ExJsonSchema.Validator.Error.AdditionalItems',
          'Elixir.ExJsonSchema.Validator.Error.AdditionalProperties',
          'Elixir.ExJsonSchema.Validator.Error.AllOf',
          'Elixir.ExJsonSchema.Validator.Error.AnyOf',
          'Elixir.ExJsonSchema.Validator.Error.Const',
          'Elixir.ExJsonSchema.Validator.Error.Contains',
          'Elixir.ExJsonSchema.Validator.Error.ContentEncoding',
          'Elixir.ExJsonSchema.Validator.Error.ContentMediaType',
          'Elixir.ExJsonSchema.Validator.Error.Dependencies',
          'Elixir.ExJsonSchema.Validator.Error.Enum',
          'Elixir.ExJsonSchema.Validator.Error.False',
          'Elixir.ExJsonSchema.Validator.Error.Format',
          'Elixir.ExJsonSchema.Validator.Error.IfThenElse',
          'Elixir.ExJsonSchema.Validator.Error.InvalidAtIndex',
          'Elixir.ExJsonSchema.Validator.Error.ItemsNotAllowed',
          'Elixir.ExJsonSchema.Validator.Error.MaxItems',
          'Elixir.ExJsonSchema.Validator.Error.MaxLength',
          'Elixir.ExJsonSchema.Validator.Error.MaxProperties',
          'Elixir.ExJsonSchema.Validator.Error.Maximum',
          'Elixir.ExJsonSchema.Validator.Error.MinItems',
          'Elixir.ExJsonSchema.Validator.Error.MinLength',
          'Elixir.ExJsonSchema.Validator.Error.MinProperties',
          'Elixir.ExJsonSchema.Validator.Error.Minimum',
          'Elixir.ExJsonSchema.Validator.Error.MultipleOf',
          'Elixir.ExJsonSchema.Validator.Error.Not',
          'Elixir.ExJsonSchema.Validator.Error.OneOf',
          'Elixir.ExJsonSchema.Validator.Error.Pattern',
          'Elixir.ExJsonSchema.Validator.Error.PropertyNames',
          'Elixir.ExJsonSchema.Validator.Error.Required',
          'Elixir.ExJsonSchema.Validator.Error.StringFormatter',
          'Elixir.ExJsonSchema.Validator.Error.Type',
          'Elixir.ExJsonSchema.Validator.Error.UniqueItems',
          'Elixir.ExJsonSchema.Validator.ExclusiveMaximum',
          'Elixir.ExJsonSchema.Validator.ExclusiveMinimum',
          'Elixir.ExJsonSchema.Validator.Format',
          'Elixir.ExJsonSchema.Validator.IfThenElse',
          'Elixir.ExJsonSchema.Validator.Items',
          'Elixir.ExJsonSchema.Validator.MaxItems',
          'Elixir.ExJsonSchema.Validator.MaxLength',
          'Elixir.ExJsonSchema.Validator.MaxProperties',
          'Elixir.ExJsonSchema.Validator.Maximum',
          'Elixir.ExJsonSchema.Validator.MinItems',
          'Elixir.ExJsonSchema.Validator.MinLength',
          'Elixir.ExJsonSchema.Validator.MinProperties',
          'Elixir.ExJsonSchema.Validator.Minimum',
          'Elixir.ExJsonSchema.Validator.MultipleOf',
          'Elixir.ExJsonSchema.Validator.Not',
          'Elixir.ExJsonSchema.Validator.OneOf',
          'Elixir.ExJsonSchema.Validator.Pattern',
          'Elixir.ExJsonSchema.Validator.Properties',
          'Elixir.ExJsonSchema.Validator.PropertyNames',
          'Elixir.ExJsonSchema.Validator.Ref',
          'Elixir.ExJsonSchema.Validator.Required',
          'Elixir.ExJsonSchema.Validator.Type',
          'Elixir.ExJsonSchema.Validator.UniqueItems',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.AdditionalItems',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.AdditionalProperties',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.AllOf',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.AnyOf',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.Const',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.Contains',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.ContentEncoding',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.ContentMediaType',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.Dependencies',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.Enum',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.False',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.Format',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.IfThenElse',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.ItemsNotAllowed',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.MaxItems',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.MaxLength',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.MaxProperties',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.Maximum',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.MinItems',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.MinLength',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.MinProperties',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.Minimum',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.MultipleOf',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.Not',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.OneOf',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.Pattern',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.PropertyNames',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.Required',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.Type',
          'Elixir.String.Chars.ExJsonSchema.Validator.Error.UniqueItems']},
     {path,["$RELEASE_LIB/ex_machina-2.7.0/ebin"]},
     {primLoad,
         ['Elixir.ExMachina','Elixir.ExMachina.Ecto',
          'Elixir.ExMachina.EctoStrategy','Elixir.ExMachina.Sequence',
          'Elixir.ExMachina.Strategy',
          'Elixir.ExMachina.UndefinedFactoryError']},
     {path,["$RELEASE_LIB/poison-4.0.1/ebin"]},
     {primLoad,
         ['Elixir.Poison','Elixir.Poison.Decode','Elixir.Poison.DecodeError',
          'Elixir.Poison.Decoder','Elixir.Poison.Decoder.Any',
          'Elixir.Poison.Encode','Elixir.Poison.EncodeError',
          'Elixir.Poison.Encoder','Elixir.Poison.Encoder.Any',
          'Elixir.Poison.Encoder.Atom','Elixir.Poison.Encoder.BitString',
          'Elixir.Poison.Encoder.Date','Elixir.Poison.Encoder.DateTime',
          'Elixir.Poison.Encoder.Float','Elixir.Poison.Encoder.HashSet',
          'Elixir.Poison.Encoder.Integer','Elixir.Poison.Encoder.List',
          'Elixir.Poison.Encoder.Map','Elixir.Poison.Encoder.MapSet',
          'Elixir.Poison.Encoder.NaiveDateTime','Elixir.Poison.Encoder.Range',
          'Elixir.Poison.Encoder.Stream','Elixir.Poison.Encoder.Time',
          'Elixir.Poison.ParseError','Elixir.Poison.Parser',
          'Elixir.Poison.Pretty']},
     {path,["$RELEASE_LIB/execjs-2.0.0/ebin"]},
     {primLoad,
         ['Elixir.Execjs','Elixir.Execjs.Escape','Elixir.Execjs.ExecError',
          'Elixir.Execjs.Runtime','Elixir.Execjs.RuntimeError',
          'Elixir.Execjs.Runtimes','Elixir.Execjs.Runtimes.JavaScriptCore',
          'Elixir.Execjs.Runtimes.Node','Elixir.Execjs.Runtimes.Rhino',
          'Elixir.Execjs.Runtimes.SpiderMonkey',
          'Elixir.Execjs.Runtimes.UnavailableError',
          'Elixir.Execjs.Runtimes.V8']},
     {path,["$RELEASE_LIB/hpax-1.0.0/ebin"]},
     {primLoad,
         ['Elixir.HPAX','Elixir.HPAX.Huffman','Elixir.HPAX.Table',
          'Elixir.HPAX.Types']},
     {path,["$RELEASE_LIB/mint-1.6.2/ebin"]},
     {primLoad,
         ['Elixir.Mint.Application','Elixir.Mint.Core.Conn',
          'Elixir.Mint.Core.Headers','Elixir.Mint.Core.Transport',
          'Elixir.Mint.Core.Transport.SSL','Elixir.Mint.Core.Transport.TCP',
          'Elixir.Mint.Core.Util','Elixir.Mint.HTTP','Elixir.Mint.HTTP1',
          'Elixir.Mint.HTTP1.Parse','Elixir.Mint.HTTP1.Request',
          'Elixir.Mint.HTTP1.Response','Elixir.Mint.HTTP2',
          'Elixir.Mint.HTTP2.Frame','Elixir.Mint.HTTPError',
          'Elixir.Mint.Negotiate','Elixir.Mint.TransportError',
          'Elixir.Mint.TunnelProxy','Elixir.Mint.Types',
          'Elixir.Mint.UnsafeProxy',mint_shims]},
     {path,["$RELEASE_LIB/nimble_options-1.1.1/ebin"]},
     {primLoad,
         ['Elixir.NimbleOptions','Elixir.NimbleOptions.Docs',
          'Elixir.NimbleOptions.ValidationError']},
     {path,["$RELEASE_LIB/nimble_pool-1.1.0/ebin"]},
     {primLoad,['Elixir.NimblePool','Elixir.NimblePool.Application']},
     {path,["$RELEASE_LIB/finch-0.19.0/ebin"]},
     {primLoad,
         ['Elixir.Finch','Elixir.Finch.Error','Elixir.Finch.HTTP1.Conn',
          'Elixir.Finch.HTTP1.Pool','Elixir.Finch.HTTP1.PoolMetrics',
          'Elixir.Finch.HTTP2.Pool','Elixir.Finch.HTTP2.PoolMetrics',
          'Elixir.Finch.HTTP2.RequestStream','Elixir.Finch.Pool',
          'Elixir.Finch.PoolManager','Elixir.Finch.Request',
          'Elixir.Finch.Response','Elixir.Finch.SSL',
          'Elixir.Finch.Telemetry']},
     {path,["$ROOT/lib/inets-8.2.2/ebin"]},
     {primLoad,
         [http_chunk,http_request,http_response,http_transport,http_uri,
          http_util,httpc,httpc_cookie,httpc_handler,httpc_handler_sup,
          httpc_manager,httpc_profile_sup,httpc_request,httpc_response,
          httpc_sup,httpd,httpd_acceptor,httpd_acceptor_sup,httpd_cgi,
          httpd_conf,httpd_connection_sup,httpd_custom,httpd_custom_api,
          httpd_esi,httpd_example,httpd_file,httpd_instance_sup,httpd_log,
          httpd_logger,httpd_manager,httpd_misc_sup,httpd_request,
          httpd_request_handler,httpd_response,httpd_script_env,httpd_socket,
          httpd_sup,httpd_util,inets,inets_app,inets_lib,inets_service,
          inets_sup,inets_trace,mod_actions,mod_alias,mod_auth,mod_auth_dets,
          mod_auth_mnesia,mod_auth_plain,mod_auth_server,mod_cgi,mod_dir,
          mod_disk_log,mod_esi,mod_get,mod_head,mod_log,mod_range,
          mod_responsecontrol,mod_security,mod_security_server,mod_trace]},
     {path,["$RELEASE_LIB/tesla-1.12.1/ebin"]},
     {primLoad,
         ['Elixir.Tesla','Elixir.Tesla.Adapter','Elixir.Tesla.Adapter.Finch',
          'Elixir.Tesla.Adapter.Hackney','Elixir.Tesla.Adapter.Httpc',
          'Elixir.Tesla.Adapter.Mint','Elixir.Tesla.Adapter.Shared',
          'Elixir.Tesla.Builder','Elixir.Tesla.Client','Elixir.Tesla.Env',
          'Elixir.Tesla.Error','Elixir.Tesla.Middleware',
          'Elixir.Tesla.Middleware.BaseUrl',
          'Elixir.Tesla.Middleware.BasicAuth',
          'Elixir.Tesla.Middleware.BearerAuth',
          'Elixir.Tesla.Middleware.CompressRequest',
          'Elixir.Tesla.Middleware.Compression',
          'Elixir.Tesla.Middleware.DecodeFormUrlencoded',
          'Elixir.Tesla.Middleware.DecodeJson',
          'Elixir.Tesla.Middleware.DecodeRels',
          'Elixir.Tesla.Middleware.DecompressResponse',
          'Elixir.Tesla.Middleware.DigestAuth',
          'Elixir.Tesla.Middleware.EncodeFormUrlencoded',
          'Elixir.Tesla.Middleware.EncodeJson',
          'Elixir.Tesla.Middleware.FollowRedirects',
          'Elixir.Tesla.Middleware.FormUrlencoded',
          'Elixir.Tesla.Middleware.Headers','Elixir.Tesla.Middleware.JSON',
          'Elixir.Tesla.Middleware.KeepRequest',
          'Elixir.Tesla.Middleware.Logger',
          'Elixir.Tesla.Middleware.Logger.Formatter',
          'Elixir.Tesla.Middleware.MethodOverride',
          'Elixir.Tesla.Middleware.Opts','Elixir.Tesla.Middleware.PathParams',
          'Elixir.Tesla.Middleware.Query','Elixir.Tesla.Middleware.Retry',
          'Elixir.Tesla.Middleware.SSE','Elixir.Tesla.Middleware.Telemetry',
          'Elixir.Tesla.Middleware.Timeout','Elixir.Tesla.Mock',
          'Elixir.Tesla.Mock.Error','Elixir.Tesla.Multipart',
          'Elixir.Tesla.Multipart.Part']},
     {path,["$RELEASE_LIB/google_gax-0.4.1/ebin"]},
     {primLoad,
         ['Elixir.GoogleApi.Gax.Connection',
          'Elixir.GoogleApi.Gax.DataWrapper','Elixir.GoogleApi.Gax.ModelBase',
          'Elixir.GoogleApi.Gax.Request','Elixir.GoogleApi.Gax.Response',
          'Elixir.Poison.Decoder.GoogleApi.Gax.DataWrapper']},
     {path,["$RELEASE_LIB/google_api_storage-0.19.0/ebin"]},
     {primLoad,
         ['Elixir.GoogleApi.Storage.V1.Api.BucketAccessControls',
          'Elixir.GoogleApi.Storage.V1.Api.Buckets',
          'Elixir.GoogleApi.Storage.V1.Api.Channels',
          'Elixir.GoogleApi.Storage.V1.Api.DefaultObjectAccessControls',
          'Elixir.GoogleApi.Storage.V1.Api.Notifications',
          'Elixir.GoogleApi.Storage.V1.Api.ObjectAccessControls',
          'Elixir.GoogleApi.Storage.V1.Api.Objects',
          'Elixir.GoogleApi.Storage.V1.Api.Projects',
          'Elixir.GoogleApi.Storage.V1.Connection',
          'Elixir.GoogleApi.Storage.V1.Model.Bucket',
          'Elixir.GoogleApi.Storage.V1.Model.BucketAccessControl',
          'Elixir.GoogleApi.Storage.V1.Model.BucketAccessControlProjectTeam',
          'Elixir.GoogleApi.Storage.V1.Model.BucketAccessControls',
          'Elixir.GoogleApi.Storage.V1.Model.BucketBilling',
          'Elixir.GoogleApi.Storage.V1.Model.BucketCors',
          'Elixir.GoogleApi.Storage.V1.Model.BucketEncryption',
          'Elixir.GoogleApi.Storage.V1.Model.BucketIamConfiguration',
          'Elixir.GoogleApi.Storage.V1.Model.BucketIamConfigurationBucketPolicyOnly',
          'Elixir.GoogleApi.Storage.V1.Model.BucketIamConfigurationUniformBucketLevelAccess',
          'Elixir.GoogleApi.Storage.V1.Model.BucketLifecycle',
          'Elixir.GoogleApi.Storage.V1.Model.BucketLifecycleRule',
          'Elixir.GoogleApi.Storage.V1.Model.BucketLifecycleRuleAction',
          'Elixir.GoogleApi.Storage.V1.Model.BucketLifecycleRuleCondition',
          'Elixir.GoogleApi.Storage.V1.Model.BucketLogging',
          'Elixir.GoogleApi.Storage.V1.Model.BucketOwner',
          'Elixir.GoogleApi.Storage.V1.Model.BucketRetentionPolicy',
          'Elixir.GoogleApi.Storage.V1.Model.BucketVersioning',
          'Elixir.GoogleApi.Storage.V1.Model.BucketWebsite',
          'Elixir.GoogleApi.Storage.V1.Model.Buckets',
          'Elixir.GoogleApi.Storage.V1.Model.Channel',
          'Elixir.GoogleApi.Storage.V1.Model.ComposeRequest',
          'Elixir.GoogleApi.Storage.V1.Model.ComposeRequestSourceObjects',
          'Elixir.GoogleApi.Storage.V1.Model.ComposeRequestSourceObjectsObjectPreconditions',
          'Elixir.GoogleApi.Storage.V1.Model.Expr',
          'Elixir.GoogleApi.Storage.V1.Model.HmacKey',
          'Elixir.GoogleApi.Storage.V1.Model.HmacKeyMetadata',
          'Elixir.GoogleApi.Storage.V1.Model.HmacKeysMetadata',
          'Elixir.GoogleApi.Storage.V1.Model.Notification',
          'Elixir.GoogleApi.Storage.V1.Model.Notifications',
          'Elixir.GoogleApi.Storage.V1.Model.Object',
          'Elixir.GoogleApi.Storage.V1.Model.ObjectAccessControl',
          'Elixir.GoogleApi.Storage.V1.Model.ObjectAccessControlProjectTeam',
          'Elixir.GoogleApi.Storage.V1.Model.ObjectAccessControls',
          'Elixir.GoogleApi.Storage.V1.Model.ObjectCustomerEncryption',
          'Elixir.GoogleApi.Storage.V1.Model.ObjectOwner',
          'Elixir.GoogleApi.Storage.V1.Model.Objects',
          'Elixir.GoogleApi.Storage.V1.Model.Policy',
          'Elixir.GoogleApi.Storage.V1.Model.PolicyBindings',
          'Elixir.GoogleApi.Storage.V1.Model.RewriteResponse',
          'Elixir.GoogleApi.Storage.V1.Model.ServiceAccount',
          'Elixir.GoogleApi.Storage.V1.Model.TestIamPermissionsResponse',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Bucket',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketAccessControl',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketAccessControlProjectTeam',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketAccessControls',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketBilling',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketCors',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketEncryption',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketIamConfiguration',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketIamConfigurationBucketPolicyOnly',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketIamConfigurationUniformBucketLevelAccess',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketLifecycle',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketLifecycleRule',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketLifecycleRuleAction',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketLifecycleRuleCondition',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketLogging',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketOwner',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketRetentionPolicy',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketVersioning',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketWebsite',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Buckets',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Channel',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ComposeRequest',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ComposeRequestSourceObjects',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ComposeRequestSourceObjectsObjectPreconditions',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Expr',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.HmacKey',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.HmacKeyMetadata',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.HmacKeysMetadata',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Notification',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Notifications',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Object',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ObjectAccessControl',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ObjectAccessControlProjectTeam',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ObjectAccessControls',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ObjectCustomerEncryption',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ObjectOwner',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Objects',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Policy',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.PolicyBindings',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.RewriteResponse',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ServiceAccount',
          'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.TestIamPermissionsResponse',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Bucket',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketAccessControl',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketAccessControlProjectTeam',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketAccessControls',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketBilling',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketCors',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketEncryption',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketIamConfiguration',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketIamConfigurationBucketPolicyOnly',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketIamConfigurationUniformBucketLevelAccess',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketLifecycle',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketLifecycleRule',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketLifecycleRuleAction',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketLifecycleRuleCondition',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketLogging',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketOwner',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketRetentionPolicy',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketVersioning',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketWebsite',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Buckets',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Channel',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ComposeRequest',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ComposeRequestSourceObjects',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ComposeRequestSourceObjectsObjectPreconditions',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Expr',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.HmacKey',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.HmacKeyMetadata',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.HmacKeysMetadata',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Notification',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Notifications',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Object',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ObjectAccessControl',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ObjectAccessControlProjectTeam',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ObjectAccessControls',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ObjectCustomerEncryption',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ObjectOwner',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Objects',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Policy',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.PolicyBindings',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.RewriteResponse',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ServiceAccount',
          'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.TestIamPermissionsResponse']},
     {path,["$RELEASE_LIB/jason-1.4.4/ebin"]},
     {primLoad,
         ['Elixir.Enumerable.Jason.OrderedObject','Elixir.Jason',
          'Elixir.Jason.Codegen','Elixir.Jason.DecodeError',
          'Elixir.Jason.Decoder','Elixir.Jason.Decoder.Unescape',
          'Elixir.Jason.Encode','Elixir.Jason.EncodeError',
          'Elixir.Jason.Encoder','Elixir.Jason.Encoder.Any',
          'Elixir.Jason.Encoder.Atom','Elixir.Jason.Encoder.BitString',
          'Elixir.Jason.Encoder.Date','Elixir.Jason.Encoder.DateTime',
          'Elixir.Jason.Encoder.Decimal','Elixir.Jason.Encoder.Float',
          'Elixir.Jason.Encoder.Integer',
          'Elixir.Jason.Encoder.Jason.Fragment',
          'Elixir.Jason.Encoder.Jason.OrderedObject',
          'Elixir.Jason.Encoder.List','Elixir.Jason.Encoder.Map',
          'Elixir.Jason.Encoder.NaiveDateTime','Elixir.Jason.Encoder.Time',
          'Elixir.Jason.Formatter','Elixir.Jason.Fragment',
          'Elixir.Jason.Helpers','Elixir.Jason.OrderedObject',
          'Elixir.Jason.Sigil']},
     {path,["$RELEASE_LIB/jose-1.11.10/ebin"]},
     {primLoad,
         ['Elixir.Inspect.JOSE.JWK','Elixir.JOSE','Elixir.JOSE.JWA',
          'Elixir.JOSE.JWE','Elixir.JOSE.JWK','Elixir.JOSE.JWS',
          'Elixir.JOSE.JWT','Elixir.JOSE.Poison',
          'Elixir.JOSE.Poison.LexicalEncode',
          'Elixir.JOSE.Poison.LexicalEncodeError',
          'Elixir.JOSE.Poison.LexicalEncoder',
          'Elixir.JOSE.Poison.LexicalEncoder.Any',
          'Elixir.JOSE.Poison.LexicalEncoder.Atom',
          'Elixir.JOSE.Poison.LexicalEncoder.BitString',
          'Elixir.JOSE.Poison.LexicalEncoder.Date',
          'Elixir.JOSE.Poison.LexicalEncoder.DateTime',
          'Elixir.JOSE.Poison.LexicalEncoder.Float',
          'Elixir.JOSE.Poison.LexicalEncoder.HashSet',
          'Elixir.JOSE.Poison.LexicalEncoder.Integer',
          'Elixir.JOSE.Poison.LexicalEncoder.List',
          'Elixir.JOSE.Poison.LexicalEncoder.Map',
          'Elixir.JOSE.Poison.LexicalEncoder.MapSet',
          'Elixir.JOSE.Poison.LexicalEncoder.NaiveDateTime',
          'Elixir.JOSE.Poison.LexicalEncoder.Range',
          'Elixir.JOSE.Poison.LexicalEncoder.Stream',
          'Elixir.JOSE.Poison.LexicalEncoder.Time',
          'Elixir.JOSE.Poison.LexicalPretty',jose,jose_app,jose_base64,
          jose_base64url,jose_block_encryptor,jose_chacha20_poly1305,
          jose_chacha20_poly1305_crypto,jose_chacha20_poly1305_libsodium,
          jose_chacha20_poly1305_unsupported,jose_crypto_compat,
          jose_curve25519,jose_curve25519_crypto,jose_curve25519_fallback,
          jose_curve25519_libdecaf,jose_curve25519_libsodium,
          jose_curve25519_unsupported,jose_curve448,jose_curve448_crypto,
          jose_curve448_fallback,jose_curve448_libdecaf,
          jose_curve448_unsupported,jose_json,jose_json_jason,jose_json_jiffy,
          jose_json_jsone,jose_json_jsx,jose_json_ojson,jose_json_poison,
          jose_json_poison_compat_encoder,jose_json_poison_lexical_encoder,
          jose_json_thoas,jose_json_unsupported,jose_jwa,jose_jwa_aes,
          jose_jwa_aes_kw,jose_jwa_base64url,jose_jwa_bench,jose_jwa_chacha20,
          jose_jwa_chacha20_poly1305,jose_jwa_concat_kdf,jose_jwa_curve25519,
          jose_jwa_curve448,jose_jwa_ed25519,jose_jwa_ed448,
          jose_jwa_hchacha20,jose_jwa_math,jose_jwa_pkcs1,jose_jwa_pkcs5,
          jose_jwa_pkcs7,jose_jwa_poly1305,jose_jwa_sha3,jose_jwa_unsupported,
          jose_jwa_x25519,jose_jwa_x448,jose_jwa_xchacha20,
          jose_jwa_xchacha20_poly1305,jose_jwe,jose_jwe_alg,
          jose_jwe_alg_aes_kw,jose_jwe_alg_c20p_kw,jose_jwe_alg_dir,
          jose_jwe_alg_ecdh_1pu,jose_jwe_alg_ecdh_es,jose_jwe_alg_ecdh_ss,
          jose_jwe_alg_pbes2,jose_jwe_alg_rsa,jose_jwe_alg_xc20p_kw,
          jose_jwe_enc,jose_jwe_enc_aes,jose_jwe_enc_c20p,jose_jwe_enc_xc20p,
          jose_jwe_zip,jose_jwk,jose_jwk_der,jose_jwk_kty,jose_jwk_kty_ec,
          jose_jwk_kty_oct,jose_jwk_kty_okp_ed25519,
          jose_jwk_kty_okp_ed25519ph,jose_jwk_kty_okp_ed448,
          jose_jwk_kty_okp_ed448ph,jose_jwk_kty_okp_x25519,
          jose_jwk_kty_okp_x448,jose_jwk_kty_rsa,jose_jwk_oct,
          jose_jwk_openssh_key,jose_jwk_pem,jose_jwk_set,jose_jwk_use_enc,
          jose_jwk_use_sig,jose_jws,jose_jws_alg,jose_jws_alg_ecdsa,
          jose_jws_alg_eddsa,jose_jws_alg_hmac,jose_jws_alg_none,
          jose_jws_alg_poly1305,jose_jws_alg_rsa_pkcs1_v1_5,
          jose_jws_alg_rsa_pss,jose_jwt,jose_public_key,jose_server,jose_sha3,
          jose_sha3_keccakf1600_driver,jose_sha3_keccakf1600_nif,
          jose_sha3_libdecaf,jose_sha3_unsupported,jose_sup,
          jose_xchacha20_poly1305,jose_xchacha20_poly1305_crypto,
          jose_xchacha20_poly1305_libsodium,
          jose_xchacha20_poly1305_unsupported]},
     {path,["$RELEASE_LIB/goth-1.4.3/ebin"]},
     {primLoad,
         ['Elixir.Goth','Elixir.Goth.Application','Elixir.Goth.Client',
          'Elixir.Goth.Config','Elixir.Goth.HTTPClient','Elixir.Goth.Token',
          'Elixir.Goth.TokenStore']},
     {path,["$RELEASE_LIB/guardian-2.3.0/ebin"]},
     {primLoad,
         ['Elixir.Guardian','Elixir.Guardian.Config',
          'Elixir.Guardian.MalformedReturnValueError',
          'Elixir.Guardian.Permissions',
          'Elixir.Guardian.Permissions.AtomEncoding',
          'Elixir.Guardian.Permissions.BitwiseEncoding',
          'Elixir.Guardian.Permissions.PermissionEncoding',
          'Elixir.Guardian.Permissions.PermissionNotFoundError',
          'Elixir.Guardian.Permissions.Plug',
          'Elixir.Guardian.Permissions.TextEncoding','Elixir.Guardian.Plug',
          'Elixir.Guardian.Plug.EnsureAuthenticated',
          'Elixir.Guardian.Plug.EnsureNotAuthenticated',
          'Elixir.Guardian.Plug.ErrorHandler','Elixir.Guardian.Plug.Keys',
          'Elixir.Guardian.Plug.LoadResource','Elixir.Guardian.Plug.Pipeline',
          'Elixir.Guardian.Plug.SlidingCookie',
          'Elixir.Guardian.Plug.UnauthenticatedError',
          'Elixir.Guardian.Plug.VerifyCookie',
          'Elixir.Guardian.Plug.VerifyHeader',
          'Elixir.Guardian.Plug.VerifySession','Elixir.Guardian.Token',
          'Elixir.Guardian.Token.Jwt',
          'Elixir.Guardian.Token.Jwt.SecretFetcher',
          'Elixir.Guardian.Token.Jwt.SecretFetcher.SecretFetcherDefaultImpl',
          'Elixir.Guardian.Token.Jwt.Verify','Elixir.Guardian.Token.Verify',
          'Elixir.Guardian.UUID','Elixir.Mix.Tasks.Guardian.Gen.Secret']},
     {path,["$RELEASE_LIB/guardian_db-2.1.0/ebin"]},
     {primLoad,
         ['Elixir.Guardian.DB','Elixir.Guardian.DB.Token',
          'Elixir.Guardian.DB.Token.Sweeper',
          'Elixir.Guardian.DB.Token.SweeperServer',
          'Elixir.Mix.Tasks.Guardian.Db.Gen.Migration']},
     {path,["$RELEASE_LIB/inflex-2.1.0/ebin"]},
     {primLoad,
         ['Elixir.Inflex','Elixir.Inflex.Camelize','Elixir.Inflex.Ordinalize',
          'Elixir.Inflex.Parameterize','Elixir.Inflex.Pluralize',
          'Elixir.Inflex.Underscore']},
     {path,["$RELEASE_LIB/typed_struct-0.3.0/ebin"]},
     {primLoad,['Elixir.TypedStruct','Elixir.TypedStruct.Plugin']},
     {path,["$RELEASE_LIB/json_schema-0.5.0/ebin"]},
     {primLoad,
         ['Elixir.JsonSchema','Elixir.JsonSchema.Parser',
          'Elixir.JsonSchema.Parser.AllOfParser',
          'Elixir.JsonSchema.Parser.AnyOfParser',
          'Elixir.JsonSchema.Parser.ArrayParser',
          'Elixir.JsonSchema.Parser.ConstParser',
          'Elixir.JsonSchema.Parser.DefinitionsParser',
          'Elixir.JsonSchema.Parser.EnumParser',
          'Elixir.JsonSchema.Parser.ErrorUtil',
          'Elixir.JsonSchema.Parser.ObjectParser',
          'Elixir.JsonSchema.Parser.OneOfParser',
          'Elixir.JsonSchema.Parser.ParserBehaviour',
          'Elixir.JsonSchema.Parser.ParserError',
          'Elixir.JsonSchema.Parser.ParserResult',
          'Elixir.JsonSchema.Parser.ParserWarning',
          'Elixir.JsonSchema.Parser.PrimitiveParser',
          'Elixir.JsonSchema.Parser.RootParser',
          'Elixir.JsonSchema.Parser.SchemaResult',
          'Elixir.JsonSchema.Parser.TupleParser',
          'Elixir.JsonSchema.Parser.TypeReferenceParser',
          'Elixir.JsonSchema.Parser.UnionParser',
          'Elixir.JsonSchema.Parser.Util','Elixir.JsonSchema.Resolver',
          'Elixir.JsonSchema.Types','Elixir.JsonSchema.Types.AllOfType',
          'Elixir.JsonSchema.Types.AnyOfType',
          'Elixir.JsonSchema.Types.ArrayType',
          'Elixir.JsonSchema.Types.ConstType',
          'Elixir.JsonSchema.Types.EnumType',
          'Elixir.JsonSchema.Types.ObjectType',
          'Elixir.JsonSchema.Types.OneOfType',
          'Elixir.JsonSchema.Types.PrimitiveType',
          'Elixir.JsonSchema.Types.SchemaDefinition',
          'Elixir.JsonSchema.Types.TupleType',
          'Elixir.JsonSchema.Types.TypeReference',
          'Elixir.JsonSchema.Types.UnionType']},
     {path,["$RELEASE_LIB/json_view-0.2.2/ebin"]},
     {primLoad,['Elixir.JsonView']},
     {path,["$RELEASE_LIB/nested_filter-1.2.2/ebin"]},
     {primLoad,['Elixir.NestedFilter']},
     {path,["$RELEASE_LIB/nimble_parsec-1.3.1/ebin"]},
     {primLoad,
         ['Elixir.Mix.Tasks.NimbleParsec.Compile','Elixir.NimbleParsec',
          'Elixir.NimbleParsec.Compiler','Elixir.NimbleParsec.Recorder']},
     {path,["$RELEASE_LIB/oban-2.18.3/ebin"]},
     {primLoad,
         ['Elixir.Oban','Elixir.Oban.Application','Elixir.Oban.Backoff',
          'Elixir.Oban.Config','Elixir.Oban.CrashError',
          'Elixir.Oban.Cron.Expression','Elixir.Oban.Engine',
          'Elixir.Oban.Engines.Basic','Elixir.Oban.Engines.Inline',
          'Elixir.Oban.Engines.Lite','Elixir.Oban.Job','Elixir.Oban.Midwife',
          'Elixir.Oban.Migration','Elixir.Oban.Migrations',
          'Elixir.Oban.Migrations.Postgres',
          'Elixir.Oban.Migrations.Postgres.V01',
          'Elixir.Oban.Migrations.Postgres.V02',
          'Elixir.Oban.Migrations.Postgres.V03',
          'Elixir.Oban.Migrations.Postgres.V04',
          'Elixir.Oban.Migrations.Postgres.V05',
          'Elixir.Oban.Migrations.Postgres.V06',
          'Elixir.Oban.Migrations.Postgres.V07',
          'Elixir.Oban.Migrations.Postgres.V08',
          'Elixir.Oban.Migrations.Postgres.V09',
          'Elixir.Oban.Migrations.Postgres.V10',
          'Elixir.Oban.Migrations.Postgres.V11',
          'Elixir.Oban.Migrations.Postgres.V12',
          'Elixir.Oban.Migrations.SQLite','Elixir.Oban.Notifier',
          'Elixir.Oban.Notifiers.Isolated','Elixir.Oban.Notifiers.PG',
          'Elixir.Oban.Notifiers.Postgres','Elixir.Oban.Nursery',
          'Elixir.Oban.Peer','Elixir.Oban.Peers.Global',
          'Elixir.Oban.Peers.Isolated','Elixir.Oban.Peers.Postgres',
          'Elixir.Oban.PerformError','Elixir.Oban.Plugin',
          'Elixir.Oban.Plugins.Cron','Elixir.Oban.Plugins.Gossip',
          'Elixir.Oban.Plugins.Lifeline','Elixir.Oban.Plugins.Pruner',
          'Elixir.Oban.Plugins.Reindexer','Elixir.Oban.Plugins.Repeater',
          'Elixir.Oban.Queue.Drainer','Elixir.Oban.Queue.Executor',
          'Elixir.Oban.Queue.Producer','Elixir.Oban.Queue.Supervisor',
          'Elixir.Oban.Queue.Watchman','Elixir.Oban.Registry',
          'Elixir.Oban.Repo','Elixir.Oban.Sonar','Elixir.Oban.Stager',
          'Elixir.Oban.Telemetry','Elixir.Oban.Testing',
          'Elixir.Oban.TimeoutError','Elixir.Oban.Validation',
          'Elixir.Oban.Worker']},
     {path,["$RELEASE_LIB/open_api_spex-3.21.2/ebin"]},
     {primLoad,
         ['Elixir.Inspect.OpenApiSpex.Schema',
          'Elixir.Jason.Encoder.OpenApiSpex.JsonErrorResponse',
          'Elixir.Jason.Encoder.OpenApiSpex.OpenApi',
          'Elixir.Mix.Tasks.Openapi.Spec.Json',
          'Elixir.Mix.Tasks.Openapi.Spec.Yaml','Elixir.OpenApiSpex',
          'Elixir.OpenApiSpex.Callback','Elixir.OpenApiSpex.Cast',
          'Elixir.OpenApiSpex.Cast.AllOf','Elixir.OpenApiSpex.Cast.AnyOf',
          'Elixir.OpenApiSpex.Cast.Array',
          'Elixir.OpenApiSpex.Cast.Discriminator',
          'Elixir.OpenApiSpex.Cast.Enum','Elixir.OpenApiSpex.Cast.Error',
          'Elixir.OpenApiSpex.Cast.Integer','Elixir.OpenApiSpex.Cast.Number',
          'Elixir.OpenApiSpex.Cast.Object','Elixir.OpenApiSpex.Cast.OneOf',
          'Elixir.OpenApiSpex.Cast.Primitive',
          'Elixir.OpenApiSpex.Cast.String','Elixir.OpenApiSpex.Cast.Utils',
          'Elixir.OpenApiSpex.CastParameters','Elixir.OpenApiSpex.Components',
          'Elixir.OpenApiSpex.Contact','Elixir.OpenApiSpex.Controller',
          'Elixir.OpenApiSpex.ControllerSpecs',
          'Elixir.OpenApiSpex.DeprecatedCast',
          'Elixir.OpenApiSpex.Discriminator','Elixir.OpenApiSpex.Encoding',
          'Elixir.OpenApiSpex.Example','Elixir.OpenApiSpex.ExportSpec',
          'Elixir.OpenApiSpex.ExportSpec.Options',
          'Elixir.OpenApiSpex.Extendable','Elixir.OpenApiSpex.Extendable.Any',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Components',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Contact',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Discriminator',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Encoding',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Example',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.ExternalDocumentation',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Header',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Info',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.License',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Link',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.MediaType',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.OAuthFlow',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.OAuthFlows',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.OpenApi',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Operation',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Parameter',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.PathItem',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.RequestBody',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Response',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Schema',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.SecurityScheme',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Server',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.ServerVariable',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Tag',
          'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Xml',
          'Elixir.OpenApiSpex.ExternalDocumentation',
          'Elixir.OpenApiSpex.Header','Elixir.OpenApiSpex.Info',
          'Elixir.OpenApiSpex.JsonErrorResponse','Elixir.OpenApiSpex.License',
          'Elixir.OpenApiSpex.Link','Elixir.OpenApiSpex.MediaType',
          'Elixir.OpenApiSpex.OAuthFlow','Elixir.OpenApiSpex.OAuthFlows',
          'Elixir.OpenApiSpex.OpenApi','Elixir.OpenApiSpex.OpenApi.Decode',
          'Elixir.OpenApiSpex.Operation','Elixir.OpenApiSpex.Operation2',
          'Elixir.OpenApiSpex.OperationBuilder',
          'Elixir.OpenApiSpex.Parameter','Elixir.OpenApiSpex.PathItem',
          'Elixir.OpenApiSpex.Paths','Elixir.OpenApiSpex.Plug.AppEnvCache',
          'Elixir.OpenApiSpex.Plug.Cache','Elixir.OpenApiSpex.Plug.Cast',
          'Elixir.OpenApiSpex.Plug.Cast2',
          'Elixir.OpenApiSpex.Plug.CastAndValidate',
          'Elixir.OpenApiSpex.Plug.DefaultRenderError',
          'Elixir.OpenApiSpex.Plug.JsonRenderError',
          'Elixir.OpenApiSpex.Plug.JsonRenderErrorV2',
          'Elixir.OpenApiSpex.Plug.NoneCache',
          'Elixir.OpenApiSpex.Plug.PersistentTermCache',
          'Elixir.OpenApiSpex.Plug.PutApiSpec',
          'Elixir.OpenApiSpex.Plug.RenderSpec',
          'Elixir.OpenApiSpex.Plug.SwaggerUI',
          'Elixir.OpenApiSpex.Plug.SwaggerUIOAuth2Redirect',
          'Elixir.OpenApiSpex.Plug.Validate','Elixir.OpenApiSpex.Reference',
          'Elixir.OpenApiSpex.RequestBody','Elixir.OpenApiSpex.Response',
          'Elixir.OpenApiSpex.Responses','Elixir.OpenApiSpex.Schema',
          'Elixir.OpenApiSpex.SchemaConsistency',
          'Elixir.OpenApiSpex.SchemaException',
          'Elixir.OpenApiSpex.SchemaResolver',
          'Elixir.OpenApiSpex.SecurityRequirement',
          'Elixir.OpenApiSpex.SecurityScheme','Elixir.OpenApiSpex.Server',
          'Elixir.OpenApiSpex.ServerVariable','Elixir.OpenApiSpex.Tag',
          'Elixir.OpenApiSpex.TermType','Elixir.OpenApiSpex.Test.Assertions',
          'Elixir.OpenApiSpex.Test.Assertions2',
          'Elixir.OpenApiSpex.TestAssertions','Elixir.OpenApiSpex.Xml',
          'Elixir.Poison.Encoder.OpenApiSpex.JsonErrorResponse',
          'Elixir.Poison.Encoder.OpenApiSpex.OpenApi',
          'Elixir.String.Chars.OpenApiSpex.Cast.Error']},
     {path,["$RELEASE_LIB/pbkdf2_elixir-2.2.0/ebin"]},
     {primLoad,
         ['Elixir.Pbkdf2','Elixir.Pbkdf2.Base','Elixir.Pbkdf2.Base64',
          'Elixir.Pbkdf2.Stats','Elixir.Pbkdf2.Tools']},
     {path,["$RELEASE_LIB/phoenix_html-3.3.4/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.HTML','Elixir.Phoenix.HTML.Engine',
          'Elixir.Phoenix.HTML.Form','Elixir.Phoenix.HTML.FormData',
          'Elixir.Phoenix.HTML.FormData.Atom',
          'Elixir.Phoenix.HTML.FormData.Map',
          'Elixir.Phoenix.HTML.FormData.Plug.Conn',
          'Elixir.Phoenix.HTML.FormField','Elixir.Phoenix.HTML.Format',
          'Elixir.Phoenix.HTML.Link','Elixir.Phoenix.HTML.Safe',
          'Elixir.Phoenix.HTML.Safe.Atom',
          'Elixir.Phoenix.HTML.Safe.BitString',
          'Elixir.Phoenix.HTML.Safe.Date','Elixir.Phoenix.HTML.Safe.DateTime',
          'Elixir.Phoenix.HTML.Safe.Float','Elixir.Phoenix.HTML.Safe.Integer',
          'Elixir.Phoenix.HTML.Safe.List',
          'Elixir.Phoenix.HTML.Safe.NaiveDateTime',
          'Elixir.Phoenix.HTML.Safe.Phoenix.HTML.Form',
          'Elixir.Phoenix.HTML.Safe.Time','Elixir.Phoenix.HTML.Safe.Tuple',
          'Elixir.Phoenix.HTML.Safe.URI','Elixir.Phoenix.HTML.Tag']},
     {path,["$RELEASE_LIB/cowlib-2.13.0/ebin"]},
     {primLoad,
         [cow_base64url,cow_cookie,cow_date,cow_hpack,cow_http,cow_http2,
          cow_http2_machine,cow_http_hd,cow_http_struct_hd,cow_http_te,
          cow_iolists,cow_link,cow_mimetypes,cow_multipart,cow_qs,cow_spdy,
          cow_sse,cow_uri,cow_uri_template,cow_ws]},
     {path,["$RELEASE_LIB/ranch-1.8.0/ebin"]},
     {primLoad,
         [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,ranch_conns_sup,
          ranch_crc32c,ranch_listener_sup,ranch_protocol,ranch_proxy_header,
          ranch_server,ranch_ssl,ranch_sup,ranch_tcp,ranch_transport]},
     {path,["$RELEASE_LIB/cowboy-2.12.0/ebin"]},
     {primLoad,
         [cowboy,cowboy_app,cowboy_bstr,cowboy_children,cowboy_clear,
          cowboy_clock,cowboy_compress_h,cowboy_constraints,
          cowboy_decompress_h,cowboy_handler,cowboy_http,cowboy_http2,
          cowboy_loop,cowboy_metrics_h,cowboy_middleware,cowboy_req,
          cowboy_rest,cowboy_router,cowboy_static,cowboy_stream,
          cowboy_stream_h,cowboy_sub_protocol,cowboy_sup,cowboy_tls,
          cowboy_tracer_h,cowboy_websocket]},
     {path,["$RELEASE_LIB/cowboy_telemetry-0.4.0/ebin"]},
     {primLoad,[cowboy_telemetry_h]},
     {path,["$RELEASE_LIB/plug_cowboy-2.7.2/ebin"]},
     {primLoad,
         ['Elixir.Plug.Cowboy','Elixir.Plug.Cowboy.Conn',
          'Elixir.Plug.Cowboy.Drainer','Elixir.Plug.Cowboy.Handler',
          'Elixir.Plug.Cowboy.Translator']},
     {path,["$RELEASE_LIB/plug_socket-0.1.0/ebin"]},
     {primLoad,['Elixir.PlugSocket']},
     {path,["$RELEASE_LIB/postgrex-0.17.5/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Postgrex.Stream',
          'Elixir.DBConnection.Query.Postgrex.Copy',
          'Elixir.DBConnection.Query.Postgrex.Parameters',
          'Elixir.DBConnection.Query.Postgrex.Query',
          'Elixir.Enumerable.Postgrex.Stream',
          'Elixir.Inspect.Postgrex.Stream','Elixir.Postgrex',
          'Elixir.Postgrex.App','Elixir.Postgrex.BinaryExtension',
          'Elixir.Postgrex.BinaryUtils','Elixir.Postgrex.Box',
          'Elixir.Postgrex.Circle','Elixir.Postgrex.Copy',
          'Elixir.Postgrex.Cursor','Elixir.Postgrex.DefaultTypes',
          'Elixir.Postgrex.Error','Elixir.Postgrex.ErrorCode',
          'Elixir.Postgrex.Extension','Elixir.Postgrex.Extensions.Array',
          'Elixir.Postgrex.Extensions.BitString',
          'Elixir.Postgrex.Extensions.Bool','Elixir.Postgrex.Extensions.Box',
          'Elixir.Postgrex.Extensions.Circle',
          'Elixir.Postgrex.Extensions.Date',
          'Elixir.Postgrex.Extensions.Float4',
          'Elixir.Postgrex.Extensions.Float8',
          'Elixir.Postgrex.Extensions.HStore',
          'Elixir.Postgrex.Extensions.INET','Elixir.Postgrex.Extensions.Int2',
          'Elixir.Postgrex.Extensions.Int4','Elixir.Postgrex.Extensions.Int8',
          'Elixir.Postgrex.Extensions.Interval',
          'Elixir.Postgrex.Extensions.JSON',
          'Elixir.Postgrex.Extensions.JSONB',
          'Elixir.Postgrex.Extensions.Line',
          'Elixir.Postgrex.Extensions.LineSegment',
          'Elixir.Postgrex.Extensions.Lquery',
          'Elixir.Postgrex.Extensions.Ltree',
          'Elixir.Postgrex.Extensions.MACADDR',
          'Elixir.Postgrex.Extensions.Multirange',
          'Elixir.Postgrex.Extensions.Name',
          'Elixir.Postgrex.Extensions.Numeric',
          'Elixir.Postgrex.Extensions.OID','Elixir.Postgrex.Extensions.Path',
          'Elixir.Postgrex.Extensions.Point',
          'Elixir.Postgrex.Extensions.Polygon',
          'Elixir.Postgrex.Extensions.Range','Elixir.Postgrex.Extensions.Raw',
          'Elixir.Postgrex.Extensions.Record',
          'Elixir.Postgrex.Extensions.TID',
          'Elixir.Postgrex.Extensions.TSVector',
          'Elixir.Postgrex.Extensions.Time',
          'Elixir.Postgrex.Extensions.TimeTZ',
          'Elixir.Postgrex.Extensions.Timestamp',
          'Elixir.Postgrex.Extensions.TimestampTZ',
          'Elixir.Postgrex.Extensions.UUID',
          'Elixir.Postgrex.Extensions.VoidBinary',
          'Elixir.Postgrex.Extensions.VoidText',
          'Elixir.Postgrex.Extensions.Xid8','Elixir.Postgrex.INET',
          'Elixir.Postgrex.Interval','Elixir.Postgrex.Lexeme',
          'Elixir.Postgrex.Line','Elixir.Postgrex.LineSegment',
          'Elixir.Postgrex.MACADDR','Elixir.Postgrex.Messages',
          'Elixir.Postgrex.Multirange','Elixir.Postgrex.Notifications',
          'Elixir.Postgrex.Parameters','Elixir.Postgrex.Path',
          'Elixir.Postgrex.Point','Elixir.Postgrex.Polygon',
          'Elixir.Postgrex.Protocol','Elixir.Postgrex.Query',
          'Elixir.Postgrex.QueryError','Elixir.Postgrex.Range',
          'Elixir.Postgrex.ReplicationConnection','Elixir.Postgrex.Result',
          'Elixir.Postgrex.SCRAM','Elixir.Postgrex.SCRAM.LockedCache',
          'Elixir.Postgrex.SimpleConnection','Elixir.Postgrex.Stream',
          'Elixir.Postgrex.SuperExtension','Elixir.Postgrex.TypeInfo',
          'Elixir.Postgrex.TypeModule','Elixir.Postgrex.TypeServer',
          'Elixir.Postgrex.TypeSupervisor','Elixir.Postgrex.Types',
          'Elixir.Postgrex.Utils','Elixir.String.Chars.Postgrex.Copy',
          'Elixir.String.Chars.Postgrex.Query']},
     {path,["$RELEASE_LIB/castore-1.0.9/ebin"]},
     {primLoad,['Elixir.CAStore']},
     {path,["$RELEASE_LIB/octo_fetch-0.4.0/ebin"]},
     {primLoad,
         ['Elixir.OctoFetch','Elixir.OctoFetch.Downloader',
          'Elixir.OctoFetch.Test']},
     {path,["$RELEASE_LIB/telemetry_metrics-0.6.2/ebin"]},
     {primLoad,
         ['Elixir.Telemetry.Metrics',
          'Elixir.Telemetry.Metrics.ConsoleReporter',
          'Elixir.Telemetry.Metrics.Counter',
          'Elixir.Telemetry.Metrics.Distribution',
          'Elixir.Telemetry.Metrics.LastValue','Elixir.Telemetry.Metrics.Sum',
          'Elixir.Telemetry.Metrics.Summary']},
     {path,["$RELEASE_LIB/telemetry_metrics_prometheus_core-1.2.1/ebin"]},
     {primLoad,
         ['Elixir.TelemetryMetricsPrometheus.Core',
          'Elixir.TelemetryMetricsPrometheus.Core.Aggregator',
          'Elixir.TelemetryMetricsPrometheus.Core.Counter',
          'Elixir.TelemetryMetricsPrometheus.Core.Distribution',
          'Elixir.TelemetryMetricsPrometheus.Core.EventHandler',
          'Elixir.TelemetryMetricsPrometheus.Core.Exporter',
          'Elixir.TelemetryMetricsPrometheus.Core.LastValue',
          'Elixir.TelemetryMetricsPrometheus.Core.Registry',
          'Elixir.TelemetryMetricsPrometheus.Core.Sum']},
     {path,["$RELEASE_LIB/telemetry_poller-1.1.0/ebin"]},
     {primLoad,
         [telemetry_poller,telemetry_poller_app,telemetry_poller_builtin,
          telemetry_poller_sup]},
     {path,["$RELEASE_LIB/prom_ex-1.8.0/ebin"]},
     {primLoad,
         ['Elixir.Mix.Tasks.PromEx.Dashboard.Export',
          'Elixir.Mix.Tasks.PromEx.Dashboard.Lint',
          'Elixir.Mix.Tasks.PromEx.Dashboard.Publish',
          'Elixir.Mix.Tasks.PromEx.Gen.Config','Elixir.PromEx',
          'Elixir.PromEx.BucketGenerator','Elixir.PromEx.Config',
          'Elixir.PromEx.DashboardRenderer','Elixir.PromEx.DashboardUploader',
          'Elixir.PromEx.Debug','Elixir.PromEx.ETSCronFlusher',
          'Elixir.PromEx.GrafanaAgent',
          'Elixir.PromEx.GrafanaAgent.ConfigRenderer',
          'Elixir.PromEx.GrafanaAgent.Downloader',
          'Elixir.PromEx.GrafanaClient',
          'Elixir.PromEx.GrafanaClient.Connection',
          'Elixir.PromEx.GrafanaClient.DashboardChecker',
          'Elixir.PromEx.LifecycleAnnotator',
          'Elixir.PromEx.ManualMetricsManager',
          'Elixir.PromEx.MetricTypes.Event',
          'Elixir.PromEx.MetricTypes.Manual',
          'Elixir.PromEx.MetricTypes.Polling',
          'Elixir.PromEx.MetricsServer.Plug','Elixir.PromEx.Plug',
          'Elixir.PromEx.Plugin','Elixir.PromEx.Plugins.Absinthe',
          'Elixir.PromEx.Plugins.Application','Elixir.PromEx.Plugins.Beam',
          'Elixir.PromEx.Plugins.Broadway','Elixir.PromEx.Plugins.Ecto',
          'Elixir.PromEx.Plugins.Oban','Elixir.PromEx.Plugins.Phoenix',
          'Elixir.PromEx.Plugins.PhoenixLiveView',
          'Elixir.PromEx.Plugins.PlugCowboy',
          'Elixir.PromEx.Plugins.PlugRouter','Elixir.PromEx.Plugins.PromEx',
          'Elixir.PromEx.Utils']},
     {path,["$RELEASE_LIB/reverse_proxy_plug-3.0.2/ebin"]},
     {primLoad,
         ['Elixir.ReverseProxyPlug','Elixir.ReverseProxyPlug.HTTPClient',
          'Elixir.ReverseProxyPlug.HTTPClient.Adapters.Finch',
          'Elixir.ReverseProxyPlug.HTTPClient.Adapters.HTTPoison',
          'Elixir.ReverseProxyPlug.HTTPClient.Adapters.Tesla',
          'Elixir.ReverseProxyPlug.HTTPClient.Error',
          'Elixir.ReverseProxyPlug.HTTPClient.MaybeRedirect',
          'Elixir.ReverseProxyPlug.HTTPClient.Request',
          'Elixir.ReverseProxyPlug.HTTPClient.Response']},
     {path,["$RELEASE_LIB/scrivener-2.7.2/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Scrivener.Page',
          'Elixir.Enumerable.Scrivener.Page','Elixir.Scrivener',
          'Elixir.Scrivener.Config','Elixir.Scrivener.Page',
          'Elixir.Scrivener.Paginater']},
     {path,["$RELEASE_LIB/scrivener_ecto-2.7.1/ebin"]},
     {primLoad,
         ['Elixir.Scrivener.Paginater.Atom',
          'Elixir.Scrivener.Paginater.Ecto.Query']},
     {path,["$RELEASE_LIB/scrivener_list-2.0.1/ebin"]},
     {primLoad,['Elixir.Scrivener.Paginater.List']},
     {path,["$RELEASE_LIB/slugify-1.3.1/ebin"]},
     {primLoad,['Elixir.Slug']},
     {path,["$RELEASE_LIB/snap-0.11.2/ebin"]},
     {primLoad,
         ['Elixir.Enumerable.Snap.Hits',
          'Elixir.Enumerable.Snap.SearchResponse','Elixir.Snap',
          'Elixir.Snap.Aggregation','Elixir.Snap.Auth',
          'Elixir.Snap.Auth.Plain','Elixir.Snap.Bulk',
          'Elixir.Snap.Bulk.Action','Elixir.Snap.Bulk.Action.Create',
          'Elixir.Snap.Bulk.Action.Delete','Elixir.Snap.Bulk.Action.Index',
          'Elixir.Snap.Bulk.Action.Update','Elixir.Snap.Bulk.Actions',
          'Elixir.Snap.BulkError','Elixir.Snap.Cluster',
          'Elixir.Snap.Cluster.Namespace','Elixir.Snap.Cluster.Supervisor',
          'Elixir.Snap.Config','Elixir.Snap.Document',
          'Elixir.Snap.HTTPClient','Elixir.Snap.HTTPClient.Adapters.Finch',
          'Elixir.Snap.HTTPClient.Error','Elixir.Snap.HTTPClient.Response',
          'Elixir.Snap.HTTPError','Elixir.Snap.Hit','Elixir.Snap.Hits',
          'Elixir.Snap.Indexes','Elixir.Snap.Multi',
          'Elixir.Snap.Multi.Response','Elixir.Snap.Multi.Search',
          'Elixir.Snap.Request','Elixir.Snap.ResponseError',
          'Elixir.Snap.Search','Elixir.Snap.SearchResponse',
          'Elixir.Snap.Suggest','Elixir.Snap.Suggest.Option',
          'Elixir.Snap.Suggest.Options','Elixir.Snap.Suggests',
          'Elixir.Snap.Test']},
     {path,["$RELEASE_LIB/combine-0.10.0/ebin"]},
     {primLoad,
         ['Elixir.Combine','Elixir.Combine.Helpers',
          'Elixir.Combine.ParserState','Elixir.Combine.Parsers.Base',
          'Elixir.Combine.Parsers.Binary','Elixir.Combine.Parsers.Text']},
     {path,["$RELEASE_LIB/expo-1.1.0/ebin"]},
     {primLoad,
         ['Elixir.Expo.MO','Elixir.Expo.MO.Composer',
          'Elixir.Expo.MO.InvalidFileError','Elixir.Expo.MO.Parser',
          'Elixir.Expo.MO.UnsupportedVersionError','Elixir.Expo.Message',
          'Elixir.Expo.Message.Plural','Elixir.Expo.Message.Singular',
          'Elixir.Expo.Messages','Elixir.Expo.PO','Elixir.Expo.PO.Composer',
          'Elixir.Expo.PO.DuplicateMessagesError','Elixir.Expo.PO.Parser',
          'Elixir.Expo.PO.SyntaxError','Elixir.Expo.PO.Tokenizer',
          'Elixir.Expo.PluralForms','Elixir.Expo.PluralForms.Known',
          'Elixir.Expo.PluralForms.SyntaxError',
          'Elixir.Expo.PluralForms.Tokenizer','Elixir.Expo.Util',
          'Elixir.Inspect.Expo.Message.Plural',
          'Elixir.Inspect.Expo.Message.Singular',
          'Elixir.Inspect.Expo.PluralForms','Elixir.Mix.Tasks.Expo.Msgfmt',
          'Elixir.Mix.Tasks.Expo.Msguniq',expo_plural_forms_parser,
          expo_po_parser]},
     {path,["$RELEASE_LIB/gettext-0.26.1/ebin"]},
     {primLoad,
         ['Elixir.Gettext','Elixir.Gettext.Application',
          'Elixir.Gettext.Backend','Elixir.Gettext.Compiler',
          'Elixir.Gettext.Error','Elixir.Gettext.Extractor',
          'Elixir.Gettext.ExtractorAgent','Elixir.Gettext.Fuzzy',
          'Elixir.Gettext.Interpolation',
          'Elixir.Gettext.Interpolation.Default','Elixir.Gettext.Macros',
          'Elixir.Gettext.Merger','Elixir.Gettext.MissingBindingsError',
          'Elixir.Gettext.Plural','Elixir.Gettext.Plural.UnknownLocaleError',
          'Elixir.Gettext.PluralFormError','Elixir.Mix.Tasks.Compile.Gettext',
          'Elixir.Mix.Tasks.Gettext.Extract',
          'Elixir.Mix.Tasks.Gettext.Merge']},
     {path,["$RELEASE_LIB/tzdata-1.1.2/ebin"]},
     {primLoad,
         ['Elixir.Tzdata','Elixir.Tzdata.App','Elixir.Tzdata.BasicDataMap',
          'Elixir.Tzdata.DataBuilder','Elixir.Tzdata.DataLoader',
          'Elixir.Tzdata.EtsHolder','Elixir.Tzdata.FarFutureDynamicPeriods',
          'Elixir.Tzdata.HTTPClient','Elixir.Tzdata.HTTPClient.Hackney',
          'Elixir.Tzdata.LeapSecParser','Elixir.Tzdata.Parser',
          'Elixir.Tzdata.ParserOrganizer','Elixir.Tzdata.PeriodBuilder',
          'Elixir.Tzdata.ReleaseReader','Elixir.Tzdata.ReleaseUpdater',
          'Elixir.Tzdata.TimeZoneDatabase','Elixir.Tzdata.Util']},
     {path,["$RELEASE_LIB/timex-3.7.11/ebin"]},
     {primLoad,
         ['Elixir.Enumerable.Timex.Interval',
          'Elixir.Inspect.Timex.AmbiguousDateTime',
          'Elixir.Inspect.Timex.AmbiguousTimezoneInfo',
          'Elixir.Inspect.Timex.Duration','Elixir.Inspect.Timex.TimezoneInfo',
          'Elixir.Timex','Elixir.Timex.AmbiguousDateTime',
          'Elixir.Timex.AmbiguousTimezoneInfo','Elixir.Timex.Calendar.Julian',
          'Elixir.Timex.Comparable','Elixir.Timex.Comparable.Date',
          'Elixir.Timex.Comparable.DateTime','Elixir.Timex.Comparable.Diff',
          'Elixir.Timex.Comparable.NaiveDateTime',
          'Elixir.Timex.Comparable.Timex.AmbiguousDateTime',
          'Elixir.Timex.Comparable.Tuple','Elixir.Timex.Comparable.Utils',
          'Elixir.Timex.Constants','Elixir.Timex.Convert',
          'Elixir.Timex.ConvertError','Elixir.Timex.Date',
          'Elixir.Timex.DateTime','Elixir.Timex.DateTime.Helpers',
          'Elixir.Timex.Duration','Elixir.Timex.Format.DateTime.Formatter',
          'Elixir.Timex.Format.DateTime.Formatters.Default',
          'Elixir.Timex.Format.DateTime.Formatters.Relative',
          'Elixir.Timex.Format.DateTime.Formatters.Strftime',
          'Elixir.Timex.Format.Duration.Formatter',
          'Elixir.Timex.Format.Duration.Formatters.Default',
          'Elixir.Timex.Format.Duration.Formatters.Humanized',
          'Elixir.Timex.Format.FormatError','Elixir.Timex.Gettext',
          'Elixir.Timex.Helpers','Elixir.Timex.Interval',
          'Elixir.Timex.Interval.FormatError','Elixir.Timex.Macros',
          'Elixir.Timex.NaiveDateTime','Elixir.Timex.Parse.DateTime.Helpers',
          'Elixir.Timex.Parse.DateTime.Parser',
          'Elixir.Timex.Parse.DateTime.Parsers',
          'Elixir.Timex.Parse.DateTime.Parsers.ISO8601Extended',
          'Elixir.Timex.Parse.DateTime.Tokenizer',
          'Elixir.Timex.Parse.DateTime.Tokenizers.Default',
          'Elixir.Timex.Parse.DateTime.Tokenizers.Directive',
          'Elixir.Timex.Parse.DateTime.Tokenizers.Strftime',
          'Elixir.Timex.Parse.Duration.Parser',
          'Elixir.Timex.Parse.Duration.Parsers.ISO8601Parser',
          'Elixir.Timex.Parse.ParseError',
          'Elixir.Timex.Parse.Timezones.Posix',
          'Elixir.Timex.Parse.ZoneInfo.Parser',
          'Elixir.Timex.Parse.ZoneInfo.Parser.Header',
          'Elixir.Timex.Parse.ZoneInfo.Parser.LeapSecond',
          'Elixir.Timex.Parse.ZoneInfo.Parser.Rule',
          'Elixir.Timex.Parse.ZoneInfo.Parser.TransitionInfo',
          'Elixir.Timex.Parse.ZoneInfo.Parser.Zone',
          'Elixir.Timex.PosixTimezone','Elixir.Timex.Protocol',
          'Elixir.Timex.Protocol.Any','Elixir.Timex.Protocol.Date',
          'Elixir.Timex.Protocol.DateTime','Elixir.Timex.Protocol.Map',
          'Elixir.Timex.Protocol.NaiveDateTime','Elixir.Timex.Protocol.Tuple',
          'Elixir.Timex.Time','Elixir.Timex.Timezone',
          'Elixir.Timex.Timezone.Database','Elixir.Timex.Timezone.Local',
          'Elixir.Timex.Timezone.Utils','Elixir.Timex.TimezoneInfo',
          'Elixir.Timex.Translator','Elixir.Timex.Types']},
     {path,["$RELEASE_LIB/toml-0.7.0/ebin"]},
     {primLoad,
         ['Elixir.Toml','Elixir.Toml.Builder','Elixir.Toml.Decoder',
          'Elixir.Toml.Document','Elixir.Toml.Error','Elixir.Toml.Lexer',
          'Elixir.Toml.Lexer.Guards','Elixir.Toml.Lexer.String',
          'Elixir.Toml.Provider','Elixir.Toml.Transform']},
     {path,["$RELEASE_LIB/ueberauth-0.10.8/ebin"]},
     {primLoad,
         ['Elixir.Ueberauth','Elixir.Ueberauth.Auth',
          'Elixir.Ueberauth.Auth.Credentials','Elixir.Ueberauth.Auth.Extra',
          'Elixir.Ueberauth.Auth.Info','Elixir.Ueberauth.Failure',
          'Elixir.Ueberauth.Failure.Error','Elixir.Ueberauth.Strategy',
          'Elixir.Ueberauth.Strategy.Helpers']},
     {path,["$RELEASE_LIB/ueberauth_identity-0.4.2/ebin"]},
     {primLoad,
         ['Elixir.Ueberauth.Strategy.Identity','Elixir.UeberauthIdentity']},
     {path,["$RELEASE_LIB/waffle-1.1.9/ebin"]},
     {primLoad,
         ['Elixir.Mix.Tasks.Waffle','Elixir.Mix.Tasks.Waffle.G',
          'Elixir.Waffle','Elixir.Waffle.Actions.Delete',
          'Elixir.Waffle.Actions.Store','Elixir.Waffle.Actions.Url',
          'Elixir.Waffle.Definition','Elixir.Waffle.Definition.Storage',
          'Elixir.Waffle.Definition.Versioning','Elixir.Waffle.File',
          'Elixir.Waffle.MissingExecutableError','Elixir.Waffle.Processor',
          'Elixir.Waffle.Storage.Local','Elixir.Waffle.Storage.S3',
          'Elixir.Waffle.Transformations.Convert']},
     {path,["$RELEASE_LIB/waffle_ecto-0.0.12/ebin"]},
     {primLoad,
         ['Elixir.Waffle.Ecto','Elixir.Waffle.Ecto.Definition',
          'Elixir.Waffle.Ecto.Schema','Elixir.Waffle.Ecto.Type']},
     {path,["$RELEASE_LIB/waffle_gcs-0.2.0/ebin"]},
     {primLoad,
         ['Elixir.Waffle.Storage.Google.CloudStorage',
          'Elixir.Waffle.Storage.Google.Token.DefaultFetcher',
          'Elixir.Waffle.Storage.Google.Token.Fetcher',
          'Elixir.Waffle.Storage.Google.Url',
          'Elixir.Waffle.Storage.Google.UrlV2',
          'Elixir.Waffle.Storage.Google.Util','Elixir.Waffle.Types']},
     {path,["$RELEASE_LIB/dynamic-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Dynamic',
          'Elixir.Dynamic.AccessControls.AccessControlsHandler',
          'Elixir.Dynamic.AccessControls.AccessControlsRouter',
          'Elixir.Dynamic.ApiSpec','Elixir.Dynamic.Application',
          'Elixir.Dynamic.Audit.Audit','Elixir.Dynamic.Audit.AuditRouter',
          'Elixir.Dynamic.Auth.AuthRouter','Elixir.Dynamic.AuthErrorHandler',
          'Elixir.Dynamic.Authentication',
          'Elixir.Dynamic.AvatarUploader.File',
          'Elixir.Dynamic.AvatarUploader.File.Type',
          'Elixir.Dynamic.BaseContent','Elixir.Dynamic.BaseStructures',
          'Elixir.Dynamic.CheckPermissions','Elixir.Dynamic.ConditionParser',
          'Elixir.Dynamic.Converter',
          'Elixir.Dynamic.Dashboard.DashboardHandler',
          'Elixir.Dynamic.Dashboard.DashboardRouter',
          'Elixir.Dynamic.Data.Data','Elixir.Dynamic.Data.DataHandler',
          'Elixir.Dynamic.Data.DataHandler.Job',
          'Elixir.Dynamic.Data.DataHandler.Request',
          'Elixir.Dynamic.Data.DataRouter',
          'Elixir.Dynamic.DateTimeWithOffset','Elixir.Dynamic.DbmlParser',
          'Elixir.Dynamic.Docs.AuditSchema',
          'Elixir.Dynamic.Docs.AuditSchema.Index',
          'Elixir.Dynamic.Docs.AuthSchema',
          'Elixir.Dynamic.Docs.AuthSchema.Delete',
          'Elixir.Dynamic.Docs.AuthSchema.Post',
          'Elixir.Dynamic.Docs.DataSchema',
          'Elixir.Dynamic.Docs.DataSchema.Delete',
          'Elixir.Dynamic.Docs.DataSchema.Docs',
          'Elixir.Dynamic.Docs.DataSchema.Show',
          'Elixir.Dynamic.Docs.DataSchema.Update',
          'Elixir.Dynamic.Docs.DbdocsGenerator',
          'Elixir.Dynamic.Docs.DbmlGenerator','Elixir.Dynamic.Docs.DbmlGojs',
          'Elixir.Dynamic.Docs.DocsGenerator',
          'Elixir.Dynamic.Docs.DocsRouter','Elixir.Dynamic.Docs.FilesSchema',
          'Elixir.Dynamic.Docs.FilesSchema.Delete',
          'Elixir.Dynamic.Docs.FilesSchema.Index',
          'Elixir.Dynamic.Docs.FilesSchema.Post',
          'Elixir.Dynamic.Docs.FilesSchema.Show',
          'Elixir.Dynamic.Docs.FilesSchema.Update',
          'Elixir.Dynamic.Docs.IndexSchema',
          'Elixir.Dynamic.Docs.IndexSchema.Delete',
          'Elixir.Dynamic.Docs.IndexSchema.Get',
          'Elixir.Dynamic.Docs.IndexSchema.Index',
          'Elixir.Dynamic.Docs.IndexSchema.Post',
          'Elixir.Dynamic.Docs.JsonSchemaCompiler',
          'Elixir.Dynamic.Docs.JsonSchemaUiCompiler',
          'Elixir.Dynamic.Docs.MermaidGenerator',
          'Elixir.Dynamic.Docs.RoleSchema',
          'Elixir.Dynamic.Docs.RoleSchema.Delete',
          'Elixir.Dynamic.Docs.RoleSchema.Index',
          'Elixir.Dynamic.Docs.RoleSchema.Post',
          'Elixir.Dynamic.Docs.RoleSchema.Show',
          'Elixir.Dynamic.Docs.RoleSchema.Update',
          'Elixir.Dynamic.Docs.SchemaApi','Elixir.Dynamic.Docs.SchemaMacro',
          'Elixir.Dynamic.Docs.SearchSchema',
          'Elixir.Dynamic.Docs.SearchSchema.Index',
          'Elixir.Dynamic.Docs.StructureSchema',
          'Elixir.Dynamic.Docs.StructureSchema.Get',
          'Elixir.Dynamic.Docs.StructureSchema.Post',
          'Elixir.Dynamic.Docs.UserSchema',
          'Elixir.Dynamic.Docs.UserSchema.Delete',
          'Elixir.Dynamic.Docs.UserSchema.Index',
          'Elixir.Dynamic.Docs.UserSchema.Post',
          'Elixir.Dynamic.Docs.UserSchema.Show',
          'Elixir.Dynamic.Docs.UserSchema.Update',
          'Elixir.Dynamic.Docs.ViewSchema',
          'Elixir.Dynamic.Docs.ViewSchema.Get',
          'Elixir.Dynamic.Docs.ViewSchema.Post',
          'Elixir.Dynamic.DynamicHandler','Elixir.Dynamic.DynamicRouter',
          'Elixir.Dynamic.Elasticsearch.Document',
          'Elixir.Dynamic.Elasticsearch.ElasticsearchStore',
          'Elixir.Dynamic.ElasticsearchCluster',
          'Elixir.Dynamic.EncodedParser',
          'Elixir.Dynamic.Endpoints.EndpointHandler',
          'Elixir.Dynamic.Endpoints.EndpointRouter',
          'Elixir.Dynamic.FileUploader.Files',
          'Elixir.Dynamic.FileUploader.Files.Type',
          'Elixir.Dynamic.Files.FilesHandler',
          'Elixir.Dynamic.Files.FilesRouter',
          'Elixir.Dynamic.Functions.AddKey',
          'Elixir.Dynamic.Functions.CreateIndex',
          'Elixir.Dynamic.Functions.CreateRecord',
          'Elixir.Dynamic.Functions.CreateTable',
          'Elixir.Dynamic.Functions.CreateView',
          'Elixir.Dynamic.Functions.DeleteIndex',
          'Elixir.Dynamic.Functions.DeleteRecord',
          'Elixir.Dynamic.Functions.DeleteTable',
          'Elixir.Dynamic.Functions.DeleteView',
          'Elixir.Dynamic.Functions.Helpers',
          'Elixir.Dynamic.Functions.ReadLogs',
          'Elixir.Dynamic.Functions.ReadRecord',
          'Elixir.Dynamic.Functions.ReadTable',
          'Elixir.Dynamic.Functions.ReadView',
          'Elixir.Dynamic.Functions.RecordsTable',
          'Elixir.Dynamic.Functions.Relations',
          'Elixir.Dynamic.Functions.TablesTable',
          'Elixir.Dynamic.Functions.UpdateRecord',
          'Elixir.Dynamic.Functions.UpdateTable',
          'Elixir.Dynamic.Functions.UpdateTimestamps',
          'Elixir.Dynamic.Functions.UpdateView',
          'Elixir.Dynamic.Functions.ViewsTable','Elixir.Dynamic.GlobalSetup',
          'Elixir.Dynamic.Goth','Elixir.Dynamic.Helpers.HelpersRouter',
          'Elixir.Dynamic.Import.ImportRouter',
          'Elixir.Dynamic.Indexes.IndexHandler',
          'Elixir.Dynamic.Indexes.IndexHandler.Request',
          'Elixir.Dynamic.Indexes.IndexRouter','Elixir.Dynamic.JWT',
          'Elixir.Dynamic.JWT.Plug','Elixir.Dynamic.Jobs.CreateJob',
          'Elixir.Dynamic.Jobs.JobsRouter','Elixir.Dynamic.JsonResolver',
          'Elixir.Dynamic.Jsonb','Elixir.Dynamic.Logs.LogsHandler',
          'Elixir.Dynamic.Logs.LogsRouter',
          'Elixir.Dynamic.Oban.AbstractWorker',
          'Elixir.Dynamic.Oban.ArchiveRecords',
          'Elixir.Dynamic.Oban.CleanLogs','Elixir.Dynamic.Plug.AuthHandler',
          'Elixir.Dynamic.Plug.CurrentUser',
          'Elixir.Dynamic.Plug.RequestLogger','Elixir.Dynamic.PromEx',
          'Elixir.Dynamic.QueryBuilder','Elixir.Dynamic.Release',
          'Elixir.Dynamic.Repo','Elixir.Dynamic.ReservedNames',
          'Elixir.Dynamic.Roles.RolesRouter','Elixir.Dynamic.Router',
          'Elixir.Dynamic.SchemaCompiler','Elixir.Dynamic.Schemas',
          'Elixir.Dynamic.Schemas.AuthRequest',
          'Elixir.Dynamic.Schemas.AuthResponse',
          'Elixir.Dynamic.Schemas.BadRequestError',
          'Elixir.Dynamic.Schemas.ConflictError',
          'Elixir.Dynamic.Schemas.CreateData',
          'Elixir.Dynamic.Schemas.CreateDataResponce',
          'Elixir.Dynamic.Schemas.CreateStructure',
          'Elixir.Dynamic.Schemas.CreateStructureBody',
          'Elixir.Dynamic.Schemas.CreateStructureBodySchema',
          'Elixir.Dynamic.Schemas.CreateView',
          'Elixir.Dynamic.Schemas.CreateViewBody',
          'Elixir.Dynamic.Schemas.CreateViewBodySchema',
          'Elixir.Dynamic.Schemas.DataObject',
          'Elixir.Dynamic.Schemas.DataRequest',
          'Elixir.Dynamic.Schemas.DataResponse',
          'Elixir.Dynamic.Schemas.DeleteData',
          'Elixir.Dynamic.Schemas.DeleteDataResponce',
          'Elixir.Dynamic.Schemas.DeleteStructure',
          'Elixir.Dynamic.Schemas.DeleteStructureBody',
          'Elixir.Dynamic.Schemas.DeleteViewBody',
          'Elixir.Dynamic.Schemas.Files',
          'Elixir.Dynamic.Schemas.ForbiddenError',
          'Elixir.Dynamic.Schemas.GetStructureColumnSchema',
          'Elixir.Dynamic.Schemas.GetStructureResponse',
          'Elixir.Dynamic.Schemas.GetStructureTableSchema',
          'Elixir.Dynamic.Schemas.GroupRoles','Elixir.Dynamic.Schemas.Groups',
          'Elixir.Dynamic.Schemas.InternalServerError',
          'Elixir.Dynamic.Schemas.NotFoundError',
          'Elixir.Dynamic.Schemas.ReadData',
          'Elixir.Dynamic.Schemas.ReadDataResponce',
          'Elixir.Dynamic.Schemas.ReadStructure',
          'Elixir.Dynamic.Schemas.ReadStructureBody',
          'Elixir.Dynamic.Schemas.ReadStructureBodySchema',
          'Elixir.Dynamic.Schemas.ReadStructureResponse',
          'Elixir.Dynamic.Schemas.ReadView',
          'Elixir.Dynamic.Schemas.ReadViewBody',
          'Elixir.Dynamic.Schemas.ReadViewResponse',
          'Elixir.Dynamic.Schemas.RequestLogs','Elixir.Dynamic.Schemas.Roles',
          'Elixir.Dynamic.Schemas.RolesGetRequest',
          'Elixir.Dynamic.Schemas.RolesPostRequest',
          'Elixir.Dynamic.Schemas.RolesResponse',
          'Elixir.Dynamic.Schemas.StructureData',
          'Elixir.Dynamic.Schemas.StructureErrorNotFoundResponse',
          'Elixir.Dynamic.Schemas.StructureObject',
          'Elixir.Dynamic.Schemas.StructureRequest',
          'Elixir.Dynamic.Schemas.UnauthorizedError',
          'Elixir.Dynamic.Schemas.UnprocessableEntityError',
          'Elixir.Dynamic.Schemas.UpdateData',
          'Elixir.Dynamic.Schemas.UpdateDataResponce',
          'Elixir.Dynamic.Schemas.UpdateStructure',
          'Elixir.Dynamic.Schemas.UpdateStructureBody',
          'Elixir.Dynamic.Schemas.UpdateStructureBodySchema',
          'Elixir.Dynamic.Schemas.UpdateView',
          'Elixir.Dynamic.Schemas.UpdateViewBody',
          'Elixir.Dynamic.Schemas.UpdateViewBodySchema',
          'Elixir.Dynamic.Schemas.UserGroups',
          'Elixir.Dynamic.Schemas.UserRequest',
          'Elixir.Dynamic.Schemas.UserResponse',
          'Elixir.Dynamic.Schemas.UserRoles','Elixir.Dynamic.Schemas.Users',
          'Elixir.Dynamic.Schemas.ViewData',
          'Elixir.Dynamic.Schemas.ViewErrorInvalidResponse',
          'Elixir.Dynamic.Schemas.ViewErrorNotFoundResponse',
          'Elixir.Dynamic.Schemas.ViewErrorResponse',
          'Elixir.Dynamic.Schemas.ViewRequest',
          'Elixir.Dynamic.Schemas.ViewResponse',
          'Elixir.Dynamic.Search.SearchHandler',
          'Elixir.Dynamic.Search.SearchRouter',
          'Elixir.Dynamic.SetPermissions','Elixir.Dynamic.SetSchemas',
          'Elixir.Dynamic.SocketHandler',
          'Elixir.Dynamic.Structure.ColumnDefinitions',
          'Elixir.Dynamic.Structure.StructureHandler',
          'Elixir.Dynamic.Structure.StructureHandler.Job',
          'Elixir.Dynamic.Structure.StructureHandler.Request',
          'Elixir.Dynamic.Structure.StructureRouter',
          'Elixir.Dynamic.Structures.Avatar','Elixir.Dynamic.Structures.Base',
          'Elixir.Dynamic.Structures.Config',
          'Elixir.Dynamic.Structures.Document',
          'Elixir.Dynamic.Structures.Endpoint',
          'Elixir.Dynamic.Structures.File','Elixir.Dynamic.Structures.Group',
          'Elixir.Dynamic.Structures.GroupRole',
          'Elixir.Dynamic.Structures.Job','Elixir.Dynamic.Structures.Record',
          'Elixir.Dynamic.Structures.RequestLog',
          'Elixir.Dynamic.Structures.Role','Elixir.Dynamic.Structures.Table',
          'Elixir.Dynamic.Structures.User',
          'Elixir.Dynamic.Structures.UserGroup',
          'Elixir.Dynamic.Structures.UserRole',
          'Elixir.Dynamic.Structures.View','Elixir.Dynamic.SubqueryParser',
          'Elixir.Dynamic.Users.UsersRouter','Elixir.Dynamic.Utils',
          'Elixir.Dynamic.Validations.BaseTable',
          'Elixir.Dynamic.View.ViewHandler',
          'Elixir.Dynamic.View.ViewHandler.Request',
          'Elixir.Dynamic.View.ViewRouter','Elixir.Dynamic.ViewParser',
          'Elixir.Dynamic.Views.AccessControlsView',
          'Elixir.Dynamic.Views.ConfigView',
          'Elixir.Dynamic.Views.EndpointView',
          'Elixir.Dynamic.Views.ErrorView','Elixir.Dynamic.Views.GroupView',
          'Elixir.Dynamic.Views.JobsView','Elixir.Dynamic.Views.RecordView',
          'Elixir.Dynamic.Views.RoleView','Elixir.Dynamic.Views.TableView',
          'Elixir.Dynamic.Views.UserView','Elixir.Dynamic.Views.ViewView',
          'Elixir.Dynamic.Workflows','Elixir.Dynamic.Workflows.Action',
          'Elixir.Dynamic.Workflows.Condition',
          'Elixir.Dynamic.Workflows.Step','Elixir.Dynamic.Workflows.Workflow',
          'Elixir.Elasticsearch.Document.Dynamic.Structures.Document',
          'Elixir.Elasticsearch.Document.Dynamic.Structures.Record',
          'Elixir.Elasticsearch.Document.Dynamic.Structures.Table',
          'Elixir.Elasticsearch.Document.Dynamic.Structures.View',
          'Elixir.Jason.Encoder.Dynamic.Schemas.AuthRequest',
          'Elixir.Jason.Encoder.Dynamic.Schemas.AuthResponse',
          'Elixir.Jason.Encoder.Dynamic.Schemas.BadRequestError',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ConflictError',
          'Elixir.Jason.Encoder.Dynamic.Schemas.CreateData',
          'Elixir.Jason.Encoder.Dynamic.Schemas.CreateDataResponce',
          'Elixir.Jason.Encoder.Dynamic.Schemas.CreateStructure',
          'Elixir.Jason.Encoder.Dynamic.Schemas.CreateStructureBody',
          'Elixir.Jason.Encoder.Dynamic.Schemas.CreateStructureBodySchema',
          'Elixir.Jason.Encoder.Dynamic.Schemas.CreateView',
          'Elixir.Jason.Encoder.Dynamic.Schemas.CreateViewBody',
          'Elixir.Jason.Encoder.Dynamic.Schemas.CreateViewBodySchema',
          'Elixir.Jason.Encoder.Dynamic.Schemas.DataObject',
          'Elixir.Jason.Encoder.Dynamic.Schemas.DataRequest',
          'Elixir.Jason.Encoder.Dynamic.Schemas.DataResponse',
          'Elixir.Jason.Encoder.Dynamic.Schemas.DeleteData',
          'Elixir.Jason.Encoder.Dynamic.Schemas.DeleteDataResponce',
          'Elixir.Jason.Encoder.Dynamic.Schemas.DeleteStructure',
          'Elixir.Jason.Encoder.Dynamic.Schemas.DeleteStructureBody',
          'Elixir.Jason.Encoder.Dynamic.Schemas.DeleteViewBody',
          'Elixir.Jason.Encoder.Dynamic.Schemas.Files',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ForbiddenError',
          'Elixir.Jason.Encoder.Dynamic.Schemas.GetStructureColumnSchema',
          'Elixir.Jason.Encoder.Dynamic.Schemas.GetStructureResponse',
          'Elixir.Jason.Encoder.Dynamic.Schemas.GetStructureTableSchema',
          'Elixir.Jason.Encoder.Dynamic.Schemas.GroupRoles',
          'Elixir.Jason.Encoder.Dynamic.Schemas.Groups',
          'Elixir.Jason.Encoder.Dynamic.Schemas.InternalServerError',
          'Elixir.Jason.Encoder.Dynamic.Schemas.NotFoundError',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ReadData',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ReadDataResponce',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ReadStructure',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ReadStructureBody',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ReadStructureBodySchema',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ReadStructureResponse',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ReadView',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ReadViewBody',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ReadViewResponse',
          'Elixir.Jason.Encoder.Dynamic.Schemas.RequestLogs',
          'Elixir.Jason.Encoder.Dynamic.Schemas.Roles',
          'Elixir.Jason.Encoder.Dynamic.Schemas.RolesGetRequest',
          'Elixir.Jason.Encoder.Dynamic.Schemas.RolesPostRequest',
          'Elixir.Jason.Encoder.Dynamic.Schemas.RolesResponse',
          'Elixir.Jason.Encoder.Dynamic.Schemas.StructureData',
          'Elixir.Jason.Encoder.Dynamic.Schemas.StructureErrorNotFoundResponse',
          'Elixir.Jason.Encoder.Dynamic.Schemas.StructureObject',
          'Elixir.Jason.Encoder.Dynamic.Schemas.StructureRequest',
          'Elixir.Jason.Encoder.Dynamic.Schemas.UnauthorizedError',
          'Elixir.Jason.Encoder.Dynamic.Schemas.UnprocessableEntityError',
          'Elixir.Jason.Encoder.Dynamic.Schemas.UpdateData',
          'Elixir.Jason.Encoder.Dynamic.Schemas.UpdateDataResponce',
          'Elixir.Jason.Encoder.Dynamic.Schemas.UpdateStructure',
          'Elixir.Jason.Encoder.Dynamic.Schemas.UpdateStructureBody',
          'Elixir.Jason.Encoder.Dynamic.Schemas.UpdateStructureBodySchema',
          'Elixir.Jason.Encoder.Dynamic.Schemas.UpdateView',
          'Elixir.Jason.Encoder.Dynamic.Schemas.UpdateViewBody',
          'Elixir.Jason.Encoder.Dynamic.Schemas.UpdateViewBodySchema',
          'Elixir.Jason.Encoder.Dynamic.Schemas.UserGroups',
          'Elixir.Jason.Encoder.Dynamic.Schemas.UserRequest',
          'Elixir.Jason.Encoder.Dynamic.Schemas.UserResponse',
          'Elixir.Jason.Encoder.Dynamic.Schemas.UserRoles',
          'Elixir.Jason.Encoder.Dynamic.Schemas.Users',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ViewData',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ViewErrorInvalidResponse',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ViewErrorNotFoundResponse',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ViewErrorResponse',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ViewRequest',
          'Elixir.Jason.Encoder.Dynamic.Schemas.ViewResponse',
          'Elixir.Jason.Encoder.Dynamic.Structures.Endpoint',
          'Elixir.Jason.Encoder.Dynamic.Structures.File',
          'Elixir.Jason.Encoder.Dynamic.Structures.Role',
          'Elixir.Jason.Encoder.Dynamic.Structures.User',
          'Elixir.Poison.Encoder.Dynamic.Schemas.AuthRequest',
          'Elixir.Poison.Encoder.Dynamic.Schemas.AuthResponse',
          'Elixir.Poison.Encoder.Dynamic.Schemas.BadRequestError',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ConflictError',
          'Elixir.Poison.Encoder.Dynamic.Schemas.CreateData',
          'Elixir.Poison.Encoder.Dynamic.Schemas.CreateDataResponce',
          'Elixir.Poison.Encoder.Dynamic.Schemas.CreateStructure',
          'Elixir.Poison.Encoder.Dynamic.Schemas.CreateStructureBody',
          'Elixir.Poison.Encoder.Dynamic.Schemas.CreateStructureBodySchema',
          'Elixir.Poison.Encoder.Dynamic.Schemas.CreateView',
          'Elixir.Poison.Encoder.Dynamic.Schemas.CreateViewBody',
          'Elixir.Poison.Encoder.Dynamic.Schemas.CreateViewBodySchema',
          'Elixir.Poison.Encoder.Dynamic.Schemas.DataObject',
          'Elixir.Poison.Encoder.Dynamic.Schemas.DataRequest',
          'Elixir.Poison.Encoder.Dynamic.Schemas.DataResponse',
          'Elixir.Poison.Encoder.Dynamic.Schemas.DeleteData',
          'Elixir.Poison.Encoder.Dynamic.Schemas.DeleteDataResponce',
          'Elixir.Poison.Encoder.Dynamic.Schemas.DeleteStructure',
          'Elixir.Poison.Encoder.Dynamic.Schemas.DeleteStructureBody',
          'Elixir.Poison.Encoder.Dynamic.Schemas.DeleteViewBody',
          'Elixir.Poison.Encoder.Dynamic.Schemas.Files',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ForbiddenError',
          'Elixir.Poison.Encoder.Dynamic.Schemas.GetStructureColumnSchema',
          'Elixir.Poison.Encoder.Dynamic.Schemas.GetStructureResponse',
          'Elixir.Poison.Encoder.Dynamic.Schemas.GetStructureTableSchema',
          'Elixir.Poison.Encoder.Dynamic.Schemas.GroupRoles',
          'Elixir.Poison.Encoder.Dynamic.Schemas.Groups',
          'Elixir.Poison.Encoder.Dynamic.Schemas.InternalServerError',
          'Elixir.Poison.Encoder.Dynamic.Schemas.NotFoundError',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ReadData',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ReadDataResponce',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ReadStructure',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ReadStructureBody',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ReadStructureBodySchema',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ReadStructureResponse',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ReadView',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ReadViewBody',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ReadViewResponse',
          'Elixir.Poison.Encoder.Dynamic.Schemas.RequestLogs',
          'Elixir.Poison.Encoder.Dynamic.Schemas.Roles',
          'Elixir.Poison.Encoder.Dynamic.Schemas.RolesGetRequest',
          'Elixir.Poison.Encoder.Dynamic.Schemas.RolesPostRequest',
          'Elixir.Poison.Encoder.Dynamic.Schemas.RolesResponse',
          'Elixir.Poison.Encoder.Dynamic.Schemas.StructureData',
          'Elixir.Poison.Encoder.Dynamic.Schemas.StructureErrorNotFoundResponse',
          'Elixir.Poison.Encoder.Dynamic.Schemas.StructureObject',
          'Elixir.Poison.Encoder.Dynamic.Schemas.StructureRequest',
          'Elixir.Poison.Encoder.Dynamic.Schemas.UnauthorizedError',
          'Elixir.Poison.Encoder.Dynamic.Schemas.UnprocessableEntityError',
          'Elixir.Poison.Encoder.Dynamic.Schemas.UpdateData',
          'Elixir.Poison.Encoder.Dynamic.Schemas.UpdateDataResponce',
          'Elixir.Poison.Encoder.Dynamic.Schemas.UpdateStructure',
          'Elixir.Poison.Encoder.Dynamic.Schemas.UpdateStructureBody',
          'Elixir.Poison.Encoder.Dynamic.Schemas.UpdateStructureBodySchema',
          'Elixir.Poison.Encoder.Dynamic.Schemas.UpdateView',
          'Elixir.Poison.Encoder.Dynamic.Schemas.UpdateViewBody',
          'Elixir.Poison.Encoder.Dynamic.Schemas.UpdateViewBodySchema',
          'Elixir.Poison.Encoder.Dynamic.Schemas.UserGroups',
          'Elixir.Poison.Encoder.Dynamic.Schemas.UserRequest',
          'Elixir.Poison.Encoder.Dynamic.Schemas.UserResponse',
          'Elixir.Poison.Encoder.Dynamic.Schemas.UserRoles',
          'Elixir.Poison.Encoder.Dynamic.Schemas.Users',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ViewData',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ViewErrorInvalidResponse',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ViewErrorNotFoundResponse',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ViewErrorResponse',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ViewRequest',
          'Elixir.Poison.Encoder.Dynamic.Schemas.ViewResponse']},
     {path,["$RELEASE_LIB/iex-1.14.3/ebin"]},
     {primLoad,
         ['Elixir.IEx','Elixir.IEx.App','Elixir.IEx.Autocomplete',
          'Elixir.IEx.Broker','Elixir.IEx.CLI','Elixir.IEx.Config',
          'Elixir.IEx.Evaluator','Elixir.IEx.Helpers','Elixir.IEx.History',
          'Elixir.IEx.Info','Elixir.IEx.Info.Any','Elixir.IEx.Info.Atom',
          'Elixir.IEx.Info.BitString','Elixir.IEx.Info.Date',
          'Elixir.IEx.Info.Float','Elixir.IEx.Info.Function',
          'Elixir.IEx.Info.Integer','Elixir.IEx.Info.List',
          'Elixir.IEx.Info.Map','Elixir.IEx.Info.NaiveDateTime',
          'Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
          'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Time',
          'Elixir.IEx.Info.Tuple','Elixir.IEx.Introspection','Elixir.IEx.Pry',
          'Elixir.IEx.Server','Elixir.IEx.State']},
     {progress,modules_loaded},
     {path,
         ["$ROOT/lib/kernel-8.5.3/ebin","$ROOT/lib/stdlib-4.2/ebin",
          "$ROOT/lib/compiler-8.2.3/ebin","$RELEASE_LIB/elixir-1.14.3/ebin",
          "$ROOT/lib/sasl-4.2/ebin","$ROOT/lib/runtime_tools-1.19/ebin",
          "$RELEASE_LIB/logger-1.14.3/ebin","$RELEASE_LIB/eex-1.14.3/ebin",
          "$ROOT/lib/asn1-5.0.21/ebin","$RELEASE_LIB/certifi-2.12.0/ebin",
          "$ROOT/lib/crypto-5.1.2/ebin",
          "$RELEASE_LIB/unicode_util_compat-0.7.0/ebin",
          "$RELEASE_LIB/idna-6.1.1/ebin","$RELEASE_LIB/metrics-1.0.1/ebin",
          "$RELEASE_LIB/mimerl-1.3.0/ebin","$ROOT/lib/syntax_tools-3.0/ebin",
          "$RELEASE_LIB/parse_trans-3.4.1/ebin",
          "$ROOT/lib/public_key-1.13.2/ebin","$ROOT/lib/ssl-10.8.7/ebin",
          "$RELEASE_LIB/ssl_verify_fun-1.1.7/ebin",
          "$RELEASE_LIB/hackney-1.20.1/ebin","$RELEASE_LIB/mime-1.6.0/ebin",
          "$RELEASE_LIB/plug_crypto-2.1.0/ebin",
          "$RELEASE_LIB/telemetry-1.3.0/ebin","$RELEASE_LIB/plug-1.16.1/ebin",
          "$RELEASE_LIB/bamboo-2.3.1/ebin","$RELEASE_LIB/comeonin-5.4.0/ebin",
          "$RELEASE_LIB/bcrypt_elixir-3.1.0/ebin",
          "$RELEASE_LIB/corsica-1.3.0/ebin",
          "$RELEASE_LIB/artificery-0.4.3/ebin",
          "$RELEASE_LIB/distillery-2.1.1/ebin",
          "$RELEASE_LIB/decimal-2.1.1/ebin","$RELEASE_LIB/ecto-3.10.3/ebin",
          "$RELEASE_LIB/db_connection-2.7.0/ebin",
          "$RELEASE_LIB/ecto_sql-3.10.2/ebin",
          "$RELEASE_LIB/httpoison-2.2.1/ebin","$RELEASE_LIB/vex-0.9.2/ebin",
          "$RELEASE_LIB/elasticsearch-1.0.1/ebin",
          "$RELEASE_LIB/ex_json_schema-0.9.3/ebin",
          "$RELEASE_LIB/ex_machina-2.7.0/ebin",
          "$RELEASE_LIB/poison-4.0.1/ebin","$RELEASE_LIB/execjs-2.0.0/ebin",
          "$RELEASE_LIB/hpax-1.0.0/ebin","$RELEASE_LIB/mint-1.6.2/ebin",
          "$RELEASE_LIB/nimble_options-1.1.1/ebin",
          "$RELEASE_LIB/nimble_pool-1.1.0/ebin",
          "$RELEASE_LIB/finch-0.19.0/ebin","$ROOT/lib/inets-8.2.2/ebin",
          "$RELEASE_LIB/tesla-1.12.1/ebin",
          "$RELEASE_LIB/google_gax-0.4.1/ebin",
          "$RELEASE_LIB/google_api_storage-0.19.0/ebin",
          "$RELEASE_LIB/jason-1.4.4/ebin","$RELEASE_LIB/jose-1.11.10/ebin",
          "$RELEASE_LIB/goth-1.4.3/ebin","$RELEASE_LIB/guardian-2.3.0/ebin",
          "$RELEASE_LIB/guardian_db-2.1.0/ebin",
          "$RELEASE_LIB/inflex-2.1.0/ebin",
          "$RELEASE_LIB/typed_struct-0.3.0/ebin",
          "$RELEASE_LIB/json_schema-0.5.0/ebin",
          "$RELEASE_LIB/json_view-0.2.2/ebin",
          "$RELEASE_LIB/nested_filter-1.2.2/ebin",
          "$RELEASE_LIB/nimble_parsec-1.3.1/ebin",
          "$RELEASE_LIB/oban-2.18.3/ebin",
          "$RELEASE_LIB/open_api_spex-3.21.2/ebin",
          "$RELEASE_LIB/pbkdf2_elixir-2.2.0/ebin",
          "$RELEASE_LIB/phoenix_html-3.3.4/ebin",
          "$RELEASE_LIB/cowlib-2.13.0/ebin","$RELEASE_LIB/ranch-1.8.0/ebin",
          "$RELEASE_LIB/cowboy-2.12.0/ebin",
          "$RELEASE_LIB/cowboy_telemetry-0.4.0/ebin",
          "$RELEASE_LIB/plug_cowboy-2.7.2/ebin",
          "$RELEASE_LIB/plug_socket-0.1.0/ebin",
          "$RELEASE_LIB/postgrex-0.17.5/ebin",
          "$RELEASE_LIB/castore-1.0.9/ebin",
          "$RELEASE_LIB/octo_fetch-0.4.0/ebin",
          "$RELEASE_LIB/telemetry_metrics-0.6.2/ebin",
          "$RELEASE_LIB/telemetry_metrics_prometheus_core-1.2.1/ebin",
          "$RELEASE_LIB/telemetry_poller-1.1.0/ebin",
          "$RELEASE_LIB/prom_ex-1.8.0/ebin",
          "$RELEASE_LIB/reverse_proxy_plug-3.0.2/ebin",
          "$RELEASE_LIB/scrivener-2.7.2/ebin",
          "$RELEASE_LIB/scrivener_ecto-2.7.1/ebin",
          "$RELEASE_LIB/scrivener_list-2.0.1/ebin",
          "$RELEASE_LIB/slugify-1.3.1/ebin","$RELEASE_LIB/snap-0.11.2/ebin",
          "$RELEASE_LIB/combine-0.10.0/ebin","$RELEASE_LIB/expo-1.1.0/ebin",
          "$RELEASE_LIB/gettext-0.26.1/ebin","$RELEASE_LIB/tzdata-1.1.2/ebin",
          "$RELEASE_LIB/timex-3.7.11/ebin","$RELEASE_LIB/toml-0.7.0/ebin",
          "$RELEASE_LIB/ueberauth-0.10.8/ebin",
          "$RELEASE_LIB/ueberauth_identity-0.4.2/ebin",
          "$RELEASE_LIB/waffle-1.1.9/ebin",
          "$RELEASE_LIB/waffle_ecto-0.0.12/ebin",
          "$RELEASE_LIB/waffle_gcs-0.2.0/ebin",
          "$RELEASE_LIB/dynamic-0.1.0/ebin","$RELEASE_LIB/iex-1.14.3/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,logger,{logger_server,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"8.5.3"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_compile_server,erl_distribution,
                        erl_erts_errors,erl_reply,erl_kernel_errors,
                        erl_signal_handler,erpc,error_handler,error_logger,
                        file,file_server,file_io_server,global,global_group,
                        global_search,group,group_history,heart,inet6_tcp,
                        inet6_tcp_dist,inet6_udp,inet6_sctp,inet_config,
                        inet_hosts,inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,kernel_refc,local_tcp,local_udp,logger,
                        logger_backend,logger_config,logger_disk_log_h,
                        logger_filters,logger_formatter,logger_h_common,
                        logger_handler_watcher,logger_olp,logger_proxy,
                        logger_server,logger_simple_h,logger_std_h,logger_sup,
                        net,net_adm,net_kernel,os,ram_file,rpc,user,user_drv,
                        user_sup,disk_log,disk_log_1,disk_log_server,
                        disk_log_sup,dist_ac,erl_ddll,erl_epmd,erts_debug,
                        gen_tcp,gen_tcp_socket,gen_udp,gen_udp_socket,
                        gen_sctp,inet,inet_db,inet_dns,inet_parse,inet_res,
                        inet_tcp,inet_udp,inet_sctp,pg,pg2,raw_file_io,
                        raw_file_io_compressed,raw_file_io_deflate,
                        raw_file_io_delayed,raw_file_io_inflate,
                        raw_file_io_list,seq_trace,socket,standard_error,
                        wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_refc,kernel_sup,logger,
                        logger_handler_watcher,logger_sup,net_kernel,net_sup,
                        rex,user,os_server,ddll_server,erl_epmd,inet_db,pg]},
                   {applications,[]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{logger_level,notice},
                        {logger_sasl_compatible,false},
                        {net_tickintensity,4},
                        {net_ticktime,60},
                        {prevent_overlapping_partitions,true},
                        {shell_docs_ansi,auto}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"4.2"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v9,dict,digraph,
                        digraph_utils,edlin,edlin_expand,epp,eval_bits,
                        erl_abstract_code,erl_anno,erl_bits,erl_compile,
                        erl_error,erl_eval,erl_expand_records,erl_features,
                        erl_internal,erl_lint,erl_parse,erl_posix_msg,erl_pp,
                        erl_scan,erl_stdlib_errors,erl_tar,
                        error_logger_file_h,error_logger_tty_h,escript,ets,
                        file_sorter,filelib,filename,gb_trees,gb_sets,gen,
                        gen_event,gen_fsm,gen_server,gen_statem,io,io_lib,
                        io_lib_format,io_lib_fread,io_lib_pretty,lists,
                        log_mf_h,maps,math,ms_transform,orddict,ordsets,
                        otp_internal,peer,pool,proc_lib,proplists,qlc,qlc_pt,
                        queue,rand,random,re,sets,shell,shell_default,
                        shell_docs,slave,sofs,string,supervisor,
                        supervisor_bridge,sys,timer,unicode,unicode_util,
                        uri_string,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"8.2.3"},
                   {id,[]},
                   {modules,
                       [beam_a,beam_asm,beam_bounds,beam_block,
                        beam_call_types,beam_clean,beam_dict,beam_digraph,
                        beam_disasm,beam_flatten,beam_jump,beam_kernel_to_ssa,
                        beam_listing,beam_opcodes,beam_ssa,beam_ssa_bc_size,
                        beam_ssa_bool,beam_ssa_bsm,beam_ssa_codegen,
                        beam_ssa_dead,beam_ssa_lint,beam_ssa_opt,beam_ssa_pp,
                        beam_ssa_pre_codegen,beam_ssa_recv,beam_ssa_share,
                        beam_ssa_throw,beam_ssa_type,beam_trim,beam_types,
                        beam_utils,beam_validator,beam_z,cerl,cerl_clauses,
                        cerl_inline,cerl_trees,compile,core_scan,core_lint,
                        core_parse,core_pp,core_lib,erl_bifs,rec_env,
                        sys_core_alias,sys_core_bsm,sys_core_fold,
                        sys_core_fold_lists,sys_core_inline,sys_core_prepare,
                        sys_messages,sys_pre_attributes,v3_core,v3_kernel,
                        v3_kernel_pp]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,elixir,
                  [{description,"elixir"},
                   {vsn,"1.14.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Access','Elixir.Agent.Server','Elixir.Agent',
                        'Elixir.Application','Elixir.ArgumentError',
                        'Elixir.ArithmeticError','Elixir.Atom',
                        'Elixir.BadArityError','Elixir.BadBooleanError',
                        'Elixir.BadFunctionError','Elixir.BadMapError',
                        'Elixir.BadStructError','Elixir.Base',
                        'Elixir.Behaviour','Elixir.Bitwise',
                        'Elixir.Calendar.ISO',
                        'Elixir.Calendar.TimeZoneDatabase',
                        'Elixir.Calendar.UTCOnlyTimeZoneDatabase',
                        'Elixir.Calendar','Elixir.CaseClauseError',
                        'Elixir.Code.Formatter','Elixir.Code.Fragment',
                        'Elixir.Code.Identifier','Elixir.Code.LoadError',
                        'Elixir.Code.Normalizer','Elixir.Code.Typespec',
                        'Elixir.Code','Elixir.Collectable.BitString',
                        'Elixir.Collectable.File.Stream',
                        'Elixir.Collectable.HashDict',
                        'Elixir.Collectable.HashSet',
                        'Elixir.Collectable.IO.Stream',
                        'Elixir.Collectable.List','Elixir.Collectable.Map',
                        'Elixir.Collectable.MapSet','Elixir.Collectable',
                        'Elixir.CompileError','Elixir.CondClauseError',
                        'Elixir.Config.Provider','Elixir.Config.Reader',
                        'Elixir.Config','Elixir.Date.Range','Elixir.Date',
                        'Elixir.DateTime','Elixir.Dict',
                        'Elixir.DynamicSupervisor','Elixir.Enum.EmptyError',
                        'Elixir.Enum.OutOfBoundsError','Elixir.Enum',
                        'Elixir.Enumerable.Date.Range',
                        'Elixir.Enumerable.File.Stream',
                        'Elixir.Enumerable.Function',
                        'Elixir.Enumerable.GenEvent.Stream',
                        'Elixir.Enumerable.HashDict',
                        'Elixir.Enumerable.HashSet',
                        'Elixir.Enumerable.IO.Stream',
                        'Elixir.Enumerable.List','Elixir.Enumerable.Map',
                        'Elixir.Enumerable.MapSet','Elixir.Enumerable.Range',
                        'Elixir.Enumerable.Stream','Elixir.Enumerable',
                        'Elixir.ErlangError','Elixir.Exception',
                        'Elixir.File.CopyError','Elixir.File.Error',
                        'Elixir.File.LinkError','Elixir.File.RenameError',
                        'Elixir.File.Stat','Elixir.File.Stream','Elixir.File',
                        'Elixir.Float','Elixir.Function',
                        'Elixir.FunctionClauseError','Elixir.GenEvent.Stream',
                        'Elixir.GenEvent','Elixir.GenServer',
                        'Elixir.HashDict','Elixir.HashSet',
                        'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence',
                        'Elixir.IO.ANSI','Elixir.IO.Stream',
                        'Elixir.IO.StreamError','Elixir.IO',
                        'Elixir.Inspect.Algebra','Elixir.Inspect.Any',
                        'Elixir.Inspect.Atom','Elixir.Inspect.BitString',
                        'Elixir.Inspect.Date.Range','Elixir.Inspect.Date',
                        'Elixir.Inspect.DateTime','Elixir.Inspect.Error',
                        'Elixir.Inspect.Float','Elixir.Inspect.Function',
                        'Elixir.Inspect.HashDict','Elixir.Inspect.HashSet',
                        'Elixir.Inspect.Inspect.Error',
                        'Elixir.Inspect.Integer','Elixir.Inspect.List',
                        'Elixir.Inspect.Macro.Env','Elixir.Inspect.Map',
                        'Elixir.Inspect.MapSet',
                        'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
                        'Elixir.Inspect.PID','Elixir.Inspect.Port',
                        'Elixir.Inspect.Range','Elixir.Inspect.Reference',
                        'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
                        'Elixir.Inspect.Time','Elixir.Inspect.Tuple',
                        'Elixir.Inspect.URI',
                        'Elixir.Inspect.Version.Requirement',
                        'Elixir.Inspect.Version','Elixir.Inspect',
                        'Elixir.Integer','Elixir.Kernel.CLI',
                        'Elixir.Kernel.ErrorHandler',
                        'Elixir.Kernel.LexicalTracker',
                        'Elixir.Kernel.ParallelCompiler',
                        'Elixir.Kernel.ParallelRequire',
                        'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
                        'Elixir.Kernel.Utils','Elixir.Kernel',
                        'Elixir.KeyError','Elixir.Keyword',
                        'Elixir.List.Chars.Atom',
                        'Elixir.List.Chars.BitString',
                        'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
                        'Elixir.List.Chars.List','Elixir.List.Chars',
                        'Elixir.List','Elixir.Macro.Env','Elixir.Macro',
                        'Elixir.Map','Elixir.MapSet','Elixir.MatchError',
                        'Elixir.Module.LocalsTracker',
                        'Elixir.Module.ParallelChecker',
                        'Elixir.Module.Types.Error',
                        'Elixir.Module.Types.Expr',
                        'Elixir.Module.Types.Helpers',
                        'Elixir.Module.Types.Of',
                        'Elixir.Module.Types.Pattern',
                        'Elixir.Module.Types.Unify','Elixir.Module.Types',
                        'Elixir.Module','Elixir.NaiveDateTime','Elixir.Node',
                        'Elixir.OptionParser.ParseError',
                        'Elixir.OptionParser','Elixir.PartitionSupervisor',
                        'Elixir.Path.Wildcard','Elixir.Path','Elixir.Port',
                        'Elixir.Process','Elixir.Protocol.UndefinedError',
                        'Elixir.Protocol','Elixir.Range',
                        'Elixir.Record.Extractor','Elixir.Record',
                        'Elixir.Regex.CompileError','Elixir.Regex',
                        'Elixir.Registry.Partition',
                        'Elixir.Registry.Supervisor','Elixir.Registry',
                        'Elixir.RuntimeError','Elixir.Set',
                        'Elixir.Stream.Reducers','Elixir.Stream',
                        'Elixir.String.Break','Elixir.String.Chars.Atom',
                        'Elixir.String.Chars.BitString',
                        'Elixir.String.Chars.Date',
                        'Elixir.String.Chars.DateTime',
                        'Elixir.String.Chars.Float',
                        'Elixir.String.Chars.Integer',
                        'Elixir.String.Chars.List',
                        'Elixir.String.Chars.NaiveDateTime',
                        'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
                        'Elixir.String.Chars.Version.Requirement',
                        'Elixir.String.Chars.Version','Elixir.String.Chars',
                        'Elixir.String.Tokenizer.ScriptSet',
                        'Elixir.String.Tokenizer.Security',
                        'Elixir.String.Tokenizer','Elixir.String.Unicode',
                        'Elixir.String','Elixir.StringIO',
                        'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
                        'Elixir.Supervisor','Elixir.SyntaxError',
                        'Elixir.System.EnvError',
                        'Elixir.System.SignalHandler','Elixir.System',
                        'Elixir.SystemLimitError','Elixir.Task.Supervised',
                        'Elixir.Task.Supervisor','Elixir.Task','Elixir.Time',
                        'Elixir.TokenMissingError','Elixir.TryClauseError',
                        'Elixir.Tuple','Elixir.URI.Error','Elixir.URI',
                        'Elixir.UndefinedFunctionError',
                        'Elixir.UnicodeConversionError',
                        'Elixir.Version.InvalidRequirementError',
                        'Elixir.Version.InvalidVersionError',
                        'Elixir.Version.Parser','Elixir.Version.Requirement',
                        'Elixir.Version','Elixir.WithClauseError',elixir,
                        elixir_aliases,elixir_bitstring,elixir_bootstrap,
                        elixir_clauses,elixir_code_server,elixir_compiler,
                        elixir_config,elixir_def,elixir_dispatch,elixir_env,
                        elixir_erl,elixir_erl_clauses,elixir_erl_compiler,
                        elixir_erl_for,elixir_erl_pass,elixir_erl_try,
                        elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,
                        elixir_import,elixir_interpolation,elixir_lexical,
                        elixir_locals,elixir_map,elixir_module,
                        elixir_overridable,elixir_parser,elixir_quote,
                        elixir_rewrite,elixir_sup,elixir_tokenizer,
                        elixir_utils]},
                   {registered,[elixir_sup,elixir_config,elixir_code_server]},
                   {applications,[kernel,stdlib,compiler]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{ansi_enabled,false},
                        {ansi_syntax_colors,
                            [{atom,cyan},
                             {binary,default_color},
                             {boolean,magenta},
                             {charlist,yellow},
                             {list,default_color},
                             {map,default_color},
                             {nil,magenta},
                             {number,yellow},
                             {string,green},
                             {tuple,default_color}]},
                        {check_endianness,true},
                        {dbg_callback,{'Elixir.Macro',dbg,[]}},
                        {time_zone_database,
                            'Elixir.Calendar.UTCOnlyTimeZoneDatabase'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{elixir,[]}}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"4.2"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,rb,
                        rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,systools,systools_make,systools_rc,
                        systools_relup,systools_lib]},
                   {registered,[sasl_sup,alarm_handler,release_handler]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {apply,
         {application,load,
             [{application,runtime_tools,
                  [{description,"RUNTIME_TOOLS"},
                   {vsn,"1.19"},
                   {id,[]},
                   {modules,
                       [appmon_info,dbg,observer_backend,runtime_tools,
                        runtime_tools_sup,erts_alloc_config,ttb_autostart,
                        dyntrace,system_information,scheduler,msacc]},
                   {registered,[runtime_tools_sup]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{runtime_tools,[]}}]}]}},
     {apply,
         {application,load,
             [{application,logger,
                  [{description,"logger"},
                   {vsn,"1.14.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Logger','Elixir.Logger.App',
                        'Elixir.Logger.BackendSupervisor',
                        'Elixir.Logger.Backends.Console',
                        'Elixir.Logger.Config','Elixir.Logger.Filter',
                        'Elixir.Logger.Formatter','Elixir.Logger.Handler',
                        'Elixir.Logger.Translator','Elixir.Logger.Utils',
                        'Elixir.Logger.Watcher']},
                   {registered,
                       ['Elixir.Logger','Elixir.Logger.BackendSupervisor',
                        'Elixir.Logger.Supervisor','Elixir.Logger.Watcher']},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{utc_log,false},
                        {truncate,8096},
                        {backends,[console]},
                        {translators,[{'Elixir.Logger.Translator',translate}]},
                        {sync_threshold,20},
                        {discard_threshold,500},
                        {handle_otp_reports,true},
                        {handle_sasl_reports,false},
                        {discard_threshold_periodic_check,30000},
                        {discard_threshold_for_error_logger,500},
                        {compile_time_purge_matching,[]},
                        {compile_time_application,nil},
                        {translator_inspect_opts,[]},
                        {console,[]},
                        {start_options,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Logger.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,eex,
                  [{description,"eex"},
                   {vsn,"1.14.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.EEx','Elixir.EEx.Compiler',
                        'Elixir.EEx.Engine','Elixir.EEx.SmartEngine',
                        'Elixir.EEx.SyntaxError']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,asn1,
                  [{description,"The Erlang ASN1 compiler version 5.0.21"},
                   {vsn,"5.0.21"},
                   {id,[]},
                   {modules,[asn1rt_nif]},
                   {registered,[asn1_ns,asn1db]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,certifi,
                  [{description,
                       "CA bundle adapted from Mozilla by https://certifi.io"},
                   {vsn,"2.12.0"},
                   {id,[]},
                   {modules,[certifi,certifi_pt]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"5.1.2"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{fips_mode,false},{rand_cache_size,896}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,unicode_util_compat,
                  [{description,
                       "unicode_util compatibility library for Erlang < 20"},
                   {vsn,"0.7.0"},
                   {id,[]},
                   {modules,[string_compat,unicode_util_compat]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,idna,
                  [{description,"A pure Erlang IDNA implementation"},
                   {vsn,"6.1.1"},
                   {id,[]},
                   {modules,
                       [idna,idna_bidi,idna_context,idna_data,idna_mapping,
                        idna_table,idna_ucs,punycode]},
                   {registered,[]},
                   {applications,[kernel,stdlib,unicode_util_compat]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,metrics,
                  [{description,
                       "A generic interface to different metrics systems in Erlang."},
                   {vsn,"1.0.1"},
                   {id,[]},
                   {modules,
                       [metrics,metrics_dummy,metrics_exometer,
                        metrics_folsom]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mimerl,
                  [{description,"Library to handle mimetypes"},
                   {vsn,"1.3.0"},
                   {id,[]},
                   {modules,[mimerl]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,syntax_tools,
                  [{description,"Syntax tools"},
                   {vsn,"3.0"},
                   {id,[]},
                   {modules,
                       [epp_dodger,erl_comment_scan,erl_prettypr,
                        erl_recomment,erl_syntax,erl_syntax_lib,merl,
                        merl_transform,prettypr]},
                   {registered,[]},
                   {applications,[stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,parse_trans,
                  [{description,"Parse transform library"},
                   {vsn,"3.4.1"},
                   {id,[]},
                   {modules,
                       [ct_expand,exprecs,parse_trans,parse_trans_codegen,
                        parse_trans_mod,parse_trans_pp]},
                   {registered,[]},
                   {applications,[kernel,stdlib,syntax_tools]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,public_key,
                  [{description,"Public key infrastructure"},
                   {vsn,"1.13.2"},
                   {id,[]},
                   {modules,
                       [public_key,pubkey_pem,pubkey_pbe,pubkey_ssh,
                        pubkey_cert,pubkey_cert_records,pubkey_crl,
                        pubkey_ocsp,pubkey_os_cacerts,'OTP-PUB-KEY',
                        'PKCS-FRAME']},
                   {registered,[]},
                   {applications,[kernel,stdlib,asn1,crypto]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl,
                  [{description,"Erlang/OTP SSL application"},
                   {vsn,"10.8.7"},
                   {id,[]},
                   {modules,
                       [tls_connection,tls_connection_1_3,tls_handshake,
                        tls_handshake_1_3,tls_record,tls_record_1_3,
                        tls_socket,tls_v1,tls_connection_sup,
                        tls_gen_connection,tls_sender,tls_server_sup,
                        tls_server_session_ticket_sup,
                        tls_server_session_ticket,tls_sup,
                        tls_dyn_connection_sup,ssl_dh_groups,dtls_connection,
                        dtls_handshake,dtls_record,dtls_socket,dtls_v1,
                        dtls_connection_sup,dtls_gen_connection,
                        dtls_packet_demux,dtls_listener_sup,dtls_sup,
                        dtls_server_sup,dtls_server_session_cache_sup,ssl,
                        ssl_session_cache_api,tls_dtls_connection,ssl_config,
                        ssl_gen_statem,ssl_handshake,ssl_record,ssl_cipher,
                        ssl_cipher_format,ssl_srp_primes,ssl_alert,
                        ssl_listen_tracker_sup,tls_bloom_filter,
                        tls_client_ticket_store,inet_tls_dist,inet6_tls_dist,
                        ssl_dist_sup,ssl_dist_connection_sup,
                        ssl_dist_admin_sup,tls_dist_sup,tls_dist_server_sup,
                        ssl_session,ssl_client_session_cache_db,
                        ssl_server_session_cache,ssl_server_session_cache_db,
                        ssl_server_session_cache_sup,
                        ssl_upgrade_server_session_cache_sup,ssl_manager,
                        ssl_pem_cache,ssl_pkix_db,ssl_certificate,ssl_crl,
                        ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,
                        ssl_logger,ssl_app,ssl_sup,ssl_admin_sup,
                        ssl_connection_sup]},
                   {registered,[ssl_sup,ssl_manager]},
                   {applications,[kernel,stdlib,crypto,public_key]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ssl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,ssl_verify_fun,
                  [{description,"SSL verification library"},
                   {vsn,"1.1.7"},
                   {id,[]},
                   {modules,
                       [ssl_verify_fingerprint,ssl_verify_fun_cert_helpers,
                        ssl_verify_fun_encodings,ssl_verify_hostname,
                        ssl_verify_pk,ssl_verify_string,ssl_verify_util]},
                   {registered,[]},
                   {applications,[kernel,stdlib,ssl]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,hackney,
                  [{description,"simple HTTP client"},
                   {vsn,"1.20.1"},
                   {id,[]},
                   {modules,
                       [hackney,hackney_app,hackney_bstr,hackney_connect,
                        hackney_connection,hackney_connections,hackney_cookie,
                        hackney_date,hackney_headers,hackney_headers_new,
                        hackney_http,hackney_http_connect,hackney_local_tcp,
                        hackney_manager,hackney_metrics,hackney_multipart,
                        hackney_pool,hackney_pool_handler,hackney_request,
                        hackney_response,hackney_socks5,hackney_ssl,
                        hackney_ssl_certificate,hackney_stream,hackney_sup,
                        hackney_tcp,hackney_trace,hackney_url,hackney_util]},
                   {registered,[hackney_pool]},
                   {applications,
                       [kernel,stdlib,asn1,certifi,crypto,idna,metrics,mimerl,
                        parse_trans,public_key,ssl,ssl_verify_fun,
                        unicode_util_compat]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{timeout,150000},
                        {max_connections,50},
                        {restart,permanent},
                        {shutdown,10000},
                        {maxr,10},
                        {maxt,1}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{hackney_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,mime,
                  [{description,"A MIME type module for Elixir"},
                   {vsn,"1.6.0"},
                   {id,[]},
                   {modules,['Elixir.MIME','Elixir.MIME.Application']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{types,#{}}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.MIME.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,plug_crypto,
                  [{description,"Crypto-related functionality for the web"},
                   {vsn,"2.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Plug.Crypto','Elixir.Plug.Crypto.Application',
                        'Elixir.Plug.Crypto.KeyGenerator',
                        'Elixir.Plug.Crypto.MessageEncryptor',
                        'Elixir.Plug.Crypto.MessageVerifier']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,crypto]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug.Crypto.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,telemetry,
                  [{description,
                       "Dynamic dispatching library for metrics and instrumentations"},
                   {vsn,"1.3.0"},
                   {id,[]},
                   {modules,
                       [telemetry,telemetry_app,telemetry_handler_table,
                        telemetry_sup,telemetry_test]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{telemetry_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,plug,
                  [{description,"Compose web applications with functions"},
                   {vsn,"1.16.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Inspect.Plug.Conn','Elixir.Plug',
                        'Elixir.Plug.Adapters.Cowboy',
                        'Elixir.Plug.Adapters.Test.Conn',
                        'Elixir.Plug.Application',
                        'Elixir.Plug.BadRequestError','Elixir.Plug.BasicAuth',
                        'Elixir.Plug.Builder','Elixir.Plug.CSRFProtection',
                        'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
                        'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
                        'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
                        'Elixir.Plug.Conn.AlreadySentError',
                        'Elixir.Plug.Conn.CookieOverflowError',
                        'Elixir.Plug.Conn.Cookies',
                        'Elixir.Plug.Conn.InvalidHeaderError',
                        'Elixir.Plug.Conn.InvalidQueryError',
                        'Elixir.Plug.Conn.NotSentError',
                        'Elixir.Plug.Conn.Query','Elixir.Plug.Conn.Status',
                        'Elixir.Plug.Conn.Unfetched','Elixir.Plug.Conn.Utils',
                        'Elixir.Plug.Conn.WrapperError',
                        'Elixir.Plug.Debugger','Elixir.Plug.ErrorHandler',
                        'Elixir.Plug.Exception','Elixir.Plug.Exception.Any',
                        'Elixir.Plug.HTML','Elixir.Plug.Head',
                        'Elixir.Plug.Logger','Elixir.Plug.MIME',
                        'Elixir.Plug.MethodOverride','Elixir.Plug.Parsers',
                        'Elixir.Plug.Parsers.BadEncodingError',
                        'Elixir.Plug.Parsers.JSON',
                        'Elixir.Plug.Parsers.MULTIPART',
                        'Elixir.Plug.Parsers.ParseError',
                        'Elixir.Plug.Parsers.RequestTooLargeError',
                        'Elixir.Plug.Parsers.URLENCODED',
                        'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
                        'Elixir.Plug.RequestId','Elixir.Plug.RewriteOn',
                        'Elixir.Plug.Router',
                        'Elixir.Plug.Router.InvalidSpecError',
                        'Elixir.Plug.Router.MalformedURIError',
                        'Elixir.Plug.Router.Utils','Elixir.Plug.SSL',
                        'Elixir.Plug.Session','Elixir.Plug.Session.COOKIE',
                        'Elixir.Plug.Session.ETS','Elixir.Plug.Session.Store',
                        'Elixir.Plug.Static',
                        'Elixir.Plug.Static.InvalidPathError',
                        'Elixir.Plug.Telemetry','Elixir.Plug.Test',
                        'Elixir.Plug.TimeoutError','Elixir.Plug.Upload',
                        'Elixir.Plug.UploadError',plug_multipart]},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,eex,mime,plug_crypto,
                        telemetry]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{validate_header_keys_during_test,true}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,bamboo,
                  [{description,
                       "Straightforward, powerful, and adapter based Elixir email library. Works with Mandrill, Mailgun, SendGrid, SparkPost, Postmark, in-memory, and test."},
                   {vsn,"2.3.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Bamboo','Elixir.Bamboo.Adapter',
                        'Elixir.Bamboo.AdapterHelper',
                        'Elixir.Bamboo.ApiError','Elixir.Bamboo.Attachment',
                        'Elixir.Bamboo.DeliverLaterStrategy',
                        'Elixir.Bamboo.Email',
                        'Elixir.Bamboo.EmptyFromAddressError',
                        'Elixir.Bamboo.Formatter',
                        'Elixir.Bamboo.Formatter.BitString',
                        'Elixir.Bamboo.Formatter.List',
                        'Elixir.Bamboo.Formatter.Map',
                        'Elixir.Bamboo.Formatter.Tuple',
                        'Elixir.Bamboo.ImmediateDeliveryStrategy',
                        'Elixir.Bamboo.Interceptor',
                        'Elixir.Bamboo.LocalAdapter','Elixir.Bamboo.Mailer',
                        'Elixir.Bamboo.MailgunAdapter',
                        'Elixir.Bamboo.MailgunHelper',
                        'Elixir.Bamboo.MandrillAdapter',
                        'Elixir.Bamboo.MandrillHelper',
                        'Elixir.Bamboo.NilRecipientsError',
                        'Elixir.Bamboo.SendGridAdapter',
                        'Elixir.Bamboo.SendGridHelper',
                        'Elixir.Bamboo.SentEmail',
                        'Elixir.Bamboo.SentEmail.DeliveriesError',
                        'Elixir.Bamboo.SentEmail.NoDeliveriesError',
                        'Elixir.Bamboo.SentEmailApiPlug',
                        'Elixir.Bamboo.SentEmailViewerPlug',
                        'Elixir.Bamboo.SentEmailViewerPlug.Helper',
                        'Elixir.Bamboo.TaskSupervisorStrategy',
                        'Elixir.Bamboo.Template','Elixir.Bamboo.Test',
                        'Elixir.Bamboo.TestAdapter','Elixir.Bamboo.View',
                        'Elixir.Bamboo.View.UndefinedTemplateError',
                        'Elixir.Mix.Tasks.Bamboo.StartSentEmailViewer']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,eex,hackney,mime,plug]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Bamboo',[]}}]}]}},
     {apply,
         {application,load,
             [{application,comeonin,
                  [{description,
                       "A specification for password hashing libraries"},
                   {vsn,"5.4.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Comeonin',
                        'Elixir.Comeonin.BehaviourTestHelper',
                        'Elixir.Comeonin.PasswordHash']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,bcrypt_elixir,
                  [{description,
                       "Bcrypt password hashing algorithm for Elixir"},
                   {vsn,"3.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Bcrypt','Elixir.Bcrypt.Base',
                        'Elixir.Bcrypt.Stats']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,comeonin,crypto]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,corsica,
                  [{description,
                       "Plug-based swiss-army knife for CORS requests."},
                   {vsn,"1.3.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Corsica','Elixir.Corsica.Options',
                        'Elixir.Corsica.Router']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,plug]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,artificery,
                  [{description,
                       "A toolkit for terminal user interfaces in Elixir"},
                   {vsn,"0.4.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Artificery','Elixir.Artificery.Command',
                        'Elixir.Artificery.Console',
                        'Elixir.Artificery.Console.Color',
                        'Elixir.Artificery.Console.Color.ANSI',
                        'Elixir.Artificery.Console.Events',
                        'Elixir.Artificery.Console.Prompt',
                        'Elixir.Artificery.Console.Spinner',
                        'Elixir.Artificery.Console.Table',
                        'Elixir.Artificery.Entry','Elixir.Artificery.Option']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,distillery,
                  [{description,
                       "Build releases of your Mix projects with ease!\n"},
                   {vsn,"2.1.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Distillery.Cookies',
                        'Elixir.Distillery.Releases.App',
                        'Elixir.Distillery.Releases.Appup',
                        'Elixir.Distillery.Releases.Appup.Transform',
                        'Elixir.Distillery.Releases.Appup.TransformError',
                        'Elixir.Distillery.Releases.Appup.Utils',
                        'Elixir.Distillery.Releases.Archiver',
                        'Elixir.Distillery.Releases.Archiver.Archive',
                        'Elixir.Distillery.Releases.Assembler',
                        'Elixir.Distillery.Releases.BootScript',
                        'Elixir.Distillery.Releases.Checks',
                        'Elixir.Distillery.Releases.Checks.Cookie',
                        'Elixir.Distillery.Releases.Checks.Erts',
                        'Elixir.Distillery.Releases.Checks.LoadedOrphanedApps',
                        'Elixir.Distillery.Releases.Config',
                        'Elixir.Distillery.Releases.Config.LoadError',
                        'Elixir.Distillery.Releases.Config.Provider',
                        'Elixir.Distillery.Releases.Config.Providers.Elixir',
                        'Elixir.Distillery.Releases.Environment',
                        'Elixir.Distillery.Releases.Errors',
                        'Elixir.Distillery.Releases.Overlays',
                        'Elixir.Distillery.Releases.Plugin',
                        'Elixir.Distillery.Releases.Profile',
                        'Elixir.Distillery.Releases.Release',
                        'Elixir.Distillery.Releases.Runtime.Control',
                        'Elixir.Distillery.Releases.Runtime.Pidfile',
                        'Elixir.Distillery.Releases.Shell',
                        'Elixir.Distillery.Releases.Shell.Macros',
                        'Elixir.Distillery.Releases.Utils',
                        'Elixir.Mix.Tasks.Distillery.Gen.Appup',
                        'Elixir.Mix.Tasks.Distillery.Init',
                        'Elixir.Mix.Tasks.Distillery.Init.MixMock',
                        'Elixir.Mix.Tasks.Distillery.Init.MixMock.Project',
                        'Elixir.Mix.Tasks.Distillery.Release',
                        'Elixir.Mix.Tasks.Distillery.Release.Clean']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,runtime_tools,artificery]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,decimal,
                  [{description,"Arbitrary precision decimal arithmetic."},
                   {vsn,"2.1.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Decimal','Elixir.Decimal.Context',
                        'Elixir.Decimal.Error','Elixir.Decimal.Macros',
                        'Elixir.Inspect.Decimal',
                        'Elixir.String.Chars.Decimal']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ecto,
                  [{description,
                       "A toolkit for data mapping and language integrated query for Elixir"},
                   {vsn,"3.10.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Ecto','Elixir.Ecto.Adapter',
                        'Elixir.Ecto.Adapter.Queryable',
                        'Elixir.Ecto.Adapter.Schema',
                        'Elixir.Ecto.Adapter.Storage',
                        'Elixir.Ecto.Adapter.Transaction',
                        'Elixir.Ecto.Application','Elixir.Ecto.Association',
                        'Elixir.Ecto.Association.BelongsTo',
                        'Elixir.Ecto.Association.Has',
                        'Elixir.Ecto.Association.HasThrough',
                        'Elixir.Ecto.Association.ManyToMany',
                        'Elixir.Ecto.Association.NotLoaded',
                        'Elixir.Ecto.CastError','Elixir.Ecto.ChangeError',
                        'Elixir.Ecto.Changeset',
                        'Elixir.Ecto.Changeset.Relation',
                        'Elixir.Ecto.ConstraintError','Elixir.Ecto.Embedded',
                        'Elixir.Ecto.Enum',
                        'Elixir.Ecto.InvalidChangesetError',
                        'Elixir.Ecto.InvalidURLError',
                        'Elixir.Ecto.MigrationError','Elixir.Ecto.Multi',
                        'Elixir.Ecto.MultiplePrimaryKeyError',
                        'Elixir.Ecto.MultipleResultsError',
                        'Elixir.Ecto.NoPrimaryKeyFieldError',
                        'Elixir.Ecto.NoPrimaryKeyValueError',
                        'Elixir.Ecto.NoResultsError',
                        'Elixir.Ecto.ParameterizedType','Elixir.Ecto.Query',
                        'Elixir.Ecto.Query.API',
                        'Elixir.Ecto.Query.BooleanExpr',
                        'Elixir.Ecto.Query.Builder',
                        'Elixir.Ecto.Query.Builder.CTE',
                        'Elixir.Ecto.Query.Builder.Combination',
                        'Elixir.Ecto.Query.Builder.Distinct',
                        'Elixir.Ecto.Query.Builder.Dynamic',
                        'Elixir.Ecto.Query.Builder.Filter',
                        'Elixir.Ecto.Query.Builder.From',
                        'Elixir.Ecto.Query.Builder.GroupBy',
                        'Elixir.Ecto.Query.Builder.Join',
                        'Elixir.Ecto.Query.Builder.LimitOffset',
                        'Elixir.Ecto.Query.Builder.Lock',
                        'Elixir.Ecto.Query.Builder.OrderBy',
                        'Elixir.Ecto.Query.Builder.Preload',
                        'Elixir.Ecto.Query.Builder.Select',
                        'Elixir.Ecto.Query.Builder.Update',
                        'Elixir.Ecto.Query.Builder.Windows',
                        'Elixir.Ecto.Query.CastError',
                        'Elixir.Ecto.Query.CompileError',
                        'Elixir.Ecto.Query.DynamicExpr',
                        'Elixir.Ecto.Query.FromExpr',
                        'Elixir.Ecto.Query.JoinExpr',
                        'Elixir.Ecto.Query.LimitExpr',
                        'Elixir.Ecto.Query.Planner',
                        'Elixir.Ecto.Query.QueryExpr',
                        'Elixir.Ecto.Query.SelectExpr',
                        'Elixir.Ecto.Query.Tagged',
                        'Elixir.Ecto.Query.WindowAPI',
                        'Elixir.Ecto.Query.WithExpr','Elixir.Ecto.QueryError',
                        'Elixir.Ecto.Queryable','Elixir.Ecto.Queryable.Atom',
                        'Elixir.Ecto.Queryable.BitString',
                        'Elixir.Ecto.Queryable.Ecto.Query',
                        'Elixir.Ecto.Queryable.Ecto.SubQuery',
                        'Elixir.Ecto.Queryable.Tuple','Elixir.Ecto.Repo',
                        'Elixir.Ecto.Repo.Assoc','Elixir.Ecto.Repo.Preloader',
                        'Elixir.Ecto.Repo.Queryable',
                        'Elixir.Ecto.Repo.Registry','Elixir.Ecto.Repo.Schema',
                        'Elixir.Ecto.Repo.Supervisor',
                        'Elixir.Ecto.Repo.Transaction','Elixir.Ecto.Schema',
                        'Elixir.Ecto.Schema.Loader',
                        'Elixir.Ecto.Schema.Metadata',
                        'Elixir.Ecto.StaleEntryError','Elixir.Ecto.SubQuery',
                        'Elixir.Ecto.SubQueryError','Elixir.Ecto.Type',
                        'Elixir.Ecto.UUID',
                        'Elixir.Inspect.Ecto.Association.NotLoaded',
                        'Elixir.Inspect.Ecto.Changeset',
                        'Elixir.Inspect.Ecto.Query',
                        'Elixir.Inspect.Ecto.Query.DynamicExpr',
                        'Elixir.Inspect.Ecto.Schema.Metadata',
                        'Elixir.Jason.Encoder.Ecto.Association.NotLoaded',
                        'Elixir.Jason.Encoder.Ecto.Schema.Metadata',
                        'Elixir.Mix.Ecto','Elixir.Mix.Tasks.Ecto',
                        'Elixir.Mix.Tasks.Ecto.Create',
                        'Elixir.Mix.Tasks.Ecto.Drop',
                        'Elixir.Mix.Tasks.Ecto.Gen.Repo']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,crypto,decimal,eex,
                        telemetry]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Ecto.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,db_connection,
                  [{description,
                       "Database connection behaviour for database transactions and connection pooling\n"},
                   {vsn,"2.7.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.DBConnection','Elixir.DBConnection.App',
                        'Elixir.DBConnection.Backoff',
                        'Elixir.DBConnection.Connection',
                        'Elixir.DBConnection.ConnectionError',
                        'Elixir.DBConnection.ConnectionPool',
                        'Elixir.DBConnection.ConnectionPool.Pool',
                        'Elixir.DBConnection.EncodeError',
                        'Elixir.DBConnection.Holder',
                        'Elixir.DBConnection.LogEntry',
                        'Elixir.DBConnection.Ownership',
                        'Elixir.DBConnection.Ownership.Manager',
                        'Elixir.DBConnection.Ownership.Proxy',
                        'Elixir.DBConnection.OwnershipError',
                        'Elixir.DBConnection.Pool',
                        'Elixir.DBConnection.PrepareStream',
                        'Elixir.DBConnection.Query',
                        'Elixir.DBConnection.Stream',
                        'Elixir.DBConnection.Task',
                        'Elixir.DBConnection.TelemetryListener',
                        'Elixir.DBConnection.TransactionError',
                        'Elixir.DBConnection.Watcher',
                        'Elixir.Enumerable.DBConnection.PrepareStream',
                        'Elixir.Enumerable.DBConnection.Stream']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,telemetry]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.DBConnection.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,ecto_sql,
                  [{description,
                       "SQL-based adapters for Ecto and database migrations"},
                   {vsn,"3.10.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Ecto.Adapters.SQL.Stream',
                        'Elixir.Ecto.Adapter.Migration',
                        'Elixir.Ecto.Adapter.Structure',
                        'Elixir.Ecto.Adapters.MyXQL',
                        'Elixir.Ecto.Adapters.Postgres',
                        'Elixir.Ecto.Adapters.Postgres.Connection',
                        'Elixir.Ecto.Adapters.SQL',
                        'Elixir.Ecto.Adapters.SQL.Application',
                        'Elixir.Ecto.Adapters.SQL.Connection',
                        'Elixir.Ecto.Adapters.SQL.Sandbox',
                        'Elixir.Ecto.Adapters.SQL.Sandbox.Connection',
                        'Elixir.Ecto.Adapters.SQL.Stream',
                        'Elixir.Ecto.Adapters.Tds','Elixir.Ecto.Migration',
                        'Elixir.Ecto.Migration.Command',
                        'Elixir.Ecto.Migration.Constraint',
                        'Elixir.Ecto.Migration.Index',
                        'Elixir.Ecto.Migration.Reference',
                        'Elixir.Ecto.Migration.Runner',
                        'Elixir.Ecto.Migration.SchemaMigration',
                        'Elixir.Ecto.Migration.Table','Elixir.Ecto.Migrator',
                        'Elixir.Enumerable.Ecto.Adapters.SQL.Stream',
                        'Elixir.Mix.EctoSQL','Elixir.Mix.Tasks.Ecto.Dump',
                        'Elixir.Mix.Tasks.Ecto.Gen.Migration',
                        'Elixir.Mix.Tasks.Ecto.Load',
                        'Elixir.Mix.Tasks.Ecto.Migrate',
                        'Elixir.Mix.Tasks.Ecto.Migrations',
                        'Elixir.Mix.Tasks.Ecto.Rollback']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,db_connection,ecto,eex,
                        telemetry]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{postgres_map_type,<<"jsonb">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Ecto.Adapters.SQL.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,httpoison,
                  [{description,
                       "Yet Another HTTP client for Elixir powered by hackney"},
                   {vsn,"2.2.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.HTTPoison','Elixir.HTTPoison.AsyncChunk',
                        'Elixir.HTTPoison.AsyncEnd',
                        'Elixir.HTTPoison.AsyncHeaders',
                        'Elixir.HTTPoison.AsyncRedirect',
                        'Elixir.HTTPoison.AsyncResponse',
                        'Elixir.HTTPoison.AsyncStatus',
                        'Elixir.HTTPoison.Base','Elixir.HTTPoison.Error',
                        'Elixir.HTTPoison.Handlers.Multipart',
                        'Elixir.HTTPoison.MaybeRedirect',
                        'Elixir.HTTPoison.Request',
                        'Elixir.HTTPoison.Response']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,hackney]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,vex,
                  [{description,"vex"},
                   {vsn,"0.9.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Vex','Elixir.Vex.Blank',
                        'Elixir.Vex.Blank.Any','Elixir.Vex.Blank.Atom',
                        'Elixir.Vex.Blank.BitString','Elixir.Vex.Blank.Date',
                        'Elixir.Vex.Blank.DateTime','Elixir.Vex.Blank.Float',
                        'Elixir.Vex.Blank.Integer','Elixir.Vex.Blank.List',
                        'Elixir.Vex.Blank.Map',
                        'Elixir.Vex.Blank.NaiveDateTime',
                        'Elixir.Vex.Blank.Time','Elixir.Vex.Blank.Tuple',
                        'Elixir.Vex.ErrorRenderer',
                        'Elixir.Vex.ErrorRenderers.EEx',
                        'Elixir.Vex.ErrorRenderers.Parameterized',
                        'Elixir.Vex.Extract','Elixir.Vex.Extract.List',
                        'Elixir.Vex.Extract.Map','Elixir.Vex.Extract.Struct',
                        'Elixir.Vex.Extract.Tuple',
                        'Elixir.Vex.InvalidValidatorError',
                        'Elixir.Vex.Struct','Elixir.Vex.Validator',
                        'Elixir.Vex.Validator.Behaviour',
                        'Elixir.Vex.Validator.ErrorMessage',
                        'Elixir.Vex.Validator.Skipping',
                        'Elixir.Vex.Validator.Source',
                        'Elixir.Vex.Validator.Source.Atom',
                        'Elixir.Vex.Validator.Source.List',
                        'Elixir.Vex.Validators',
                        'Elixir.Vex.Validators.Absence',
                        'Elixir.Vex.Validators.Acceptance',
                        'Elixir.Vex.Validators.By',
                        'Elixir.Vex.Validators.Confirmation',
                        'Elixir.Vex.Validators.Exclusion',
                        'Elixir.Vex.Validators.Format',
                        'Elixir.Vex.Validators.Inclusion',
                        'Elixir.Vex.Validators.Length',
                        'Elixir.Vex.Validators.Number',
                        'Elixir.Vex.Validators.Presence',
                        'Elixir.Vex.Validators.Uuid']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,eex]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,elasticsearch,
                  [{description,"Elasticsearch without DSLs"},
                   {vsn,"1.0.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Elasticsearch','Elixir.Elasticsearch.API',
                        'Elixir.Elasticsearch.API.HTTP',
                        'Elixir.Elasticsearch.Application',
                        'Elixir.Elasticsearch.Cluster',
                        'Elixir.Elasticsearch.Cluster.Config',
                        'Elixir.Elasticsearch.Document',
                        'Elixir.Elasticsearch.Exception',
                        'Elixir.Elasticsearch.Executable',
                        'Elixir.Elasticsearch.Index',
                        'Elixir.Elasticsearch.Index.Bulk',
                        'Elixir.Elasticsearch.Store',
                        'Elixir.Mix.Tasks.Elasticsearch.Build',
                        'Elixir.Mix.Tasks.Elasticsearch.Install']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,httpoison,vex]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Elasticsearch.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,ex_json_schema,
                  [{description,
                       "  A JSON Schema validator with full support for the draft 4 specification\n  and zero dependencies.\n"},
                   {vsn,"0.9.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.ExJsonSchema','Elixir.ExJsonSchema.Schema',
                        'Elixir.ExJsonSchema.Schema.Draft4',
                        'Elixir.ExJsonSchema.Schema.Draft6',
                        'Elixir.ExJsonSchema.Schema.Draft7',
                        'Elixir.ExJsonSchema.Schema.InvalidReferenceError',
                        'Elixir.ExJsonSchema.Schema.InvalidSchemaError',
                        'Elixir.ExJsonSchema.Schema.MissingJsonDecoderError',
                        'Elixir.ExJsonSchema.Schema.Root',
                        'Elixir.ExJsonSchema.Schema.UndefinedRemoteSchemaResolverError',
                        'Elixir.ExJsonSchema.Schema.UnsupportedSchemaVersionError',
                        'Elixir.ExJsonSchema.Validator',
                        'Elixir.ExJsonSchema.Validator.AllOf',
                        'Elixir.ExJsonSchema.Validator.AnyOf',
                        'Elixir.ExJsonSchema.Validator.Const',
                        'Elixir.ExJsonSchema.Validator.Contains',
                        'Elixir.ExJsonSchema.Validator.ContentEncodingContentMediaType',
                        'Elixir.ExJsonSchema.Validator.Dependencies',
                        'Elixir.ExJsonSchema.Validator.Enum',
                        'Elixir.ExJsonSchema.Validator.Error',
                        'Elixir.ExJsonSchema.Validator.Error.AdditionalItems',
                        'Elixir.ExJsonSchema.Validator.Error.AdditionalProperties',
                        'Elixir.ExJsonSchema.Validator.Error.AllOf',
                        'Elixir.ExJsonSchema.Validator.Error.AnyOf',
                        'Elixir.ExJsonSchema.Validator.Error.Const',
                        'Elixir.ExJsonSchema.Validator.Error.Contains',
                        'Elixir.ExJsonSchema.Validator.Error.ContentEncoding',
                        'Elixir.ExJsonSchema.Validator.Error.ContentMediaType',
                        'Elixir.ExJsonSchema.Validator.Error.Dependencies',
                        'Elixir.ExJsonSchema.Validator.Error.Enum',
                        'Elixir.ExJsonSchema.Validator.Error.False',
                        'Elixir.ExJsonSchema.Validator.Error.Format',
                        'Elixir.ExJsonSchema.Validator.Error.IfThenElse',
                        'Elixir.ExJsonSchema.Validator.Error.InvalidAtIndex',
                        'Elixir.ExJsonSchema.Validator.Error.ItemsNotAllowed',
                        'Elixir.ExJsonSchema.Validator.Error.MaxItems',
                        'Elixir.ExJsonSchema.Validator.Error.MaxLength',
                        'Elixir.ExJsonSchema.Validator.Error.MaxProperties',
                        'Elixir.ExJsonSchema.Validator.Error.Maximum',
                        'Elixir.ExJsonSchema.Validator.Error.MinItems',
                        'Elixir.ExJsonSchema.Validator.Error.MinLength',
                        'Elixir.ExJsonSchema.Validator.Error.MinProperties',
                        'Elixir.ExJsonSchema.Validator.Error.Minimum',
                        'Elixir.ExJsonSchema.Validator.Error.MultipleOf',
                        'Elixir.ExJsonSchema.Validator.Error.Not',
                        'Elixir.ExJsonSchema.Validator.Error.OneOf',
                        'Elixir.ExJsonSchema.Validator.Error.Pattern',
                        'Elixir.ExJsonSchema.Validator.Error.PropertyNames',
                        'Elixir.ExJsonSchema.Validator.Error.Required',
                        'Elixir.ExJsonSchema.Validator.Error.StringFormatter',
                        'Elixir.ExJsonSchema.Validator.Error.Type',
                        'Elixir.ExJsonSchema.Validator.Error.UniqueItems',
                        'Elixir.ExJsonSchema.Validator.ExclusiveMaximum',
                        'Elixir.ExJsonSchema.Validator.ExclusiveMinimum',
                        'Elixir.ExJsonSchema.Validator.Format',
                        'Elixir.ExJsonSchema.Validator.IfThenElse',
                        'Elixir.ExJsonSchema.Validator.Items',
                        'Elixir.ExJsonSchema.Validator.MaxItems',
                        'Elixir.ExJsonSchema.Validator.MaxLength',
                        'Elixir.ExJsonSchema.Validator.MaxProperties',
                        'Elixir.ExJsonSchema.Validator.Maximum',
                        'Elixir.ExJsonSchema.Validator.MinItems',
                        'Elixir.ExJsonSchema.Validator.MinLength',
                        'Elixir.ExJsonSchema.Validator.MinProperties',
                        'Elixir.ExJsonSchema.Validator.Minimum',
                        'Elixir.ExJsonSchema.Validator.MultipleOf',
                        'Elixir.ExJsonSchema.Validator.Not',
                        'Elixir.ExJsonSchema.Validator.OneOf',
                        'Elixir.ExJsonSchema.Validator.Pattern',
                        'Elixir.ExJsonSchema.Validator.Properties',
                        'Elixir.ExJsonSchema.Validator.PropertyNames',
                        'Elixir.ExJsonSchema.Validator.Ref',
                        'Elixir.ExJsonSchema.Validator.Required',
                        'Elixir.ExJsonSchema.Validator.Type',
                        'Elixir.ExJsonSchema.Validator.UniqueItems',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.AdditionalItems',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.AdditionalProperties',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.AllOf',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.AnyOf',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.Const',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.Contains',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.ContentEncoding',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.ContentMediaType',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.Dependencies',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.Enum',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.False',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.Format',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.IfThenElse',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.ItemsNotAllowed',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.MaxItems',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.MaxLength',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.MaxProperties',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.Maximum',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.MinItems',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.MinLength',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.MinProperties',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.Minimum',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.MultipleOf',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.Not',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.OneOf',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.Pattern',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.PropertyNames',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.Required',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.Type',
                        'Elixir.String.Chars.ExJsonSchema.Validator.Error.UniqueItems']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,decimal]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ex_machina,
                  [{description,
                       "A factory library by the creators of FactoryBot (née FactoryGirl)"},
                   {vsn,"2.7.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.ExMachina','Elixir.ExMachina.Ecto',
                        'Elixir.ExMachina.EctoStrategy',
                        'Elixir.ExMachina.Sequence',
                        'Elixir.ExMachina.Strategy',
                        'Elixir.ExMachina.UndefinedFactoryError']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.ExMachina',[]}}]}]}},
     {apply,
         {application,load,
             [{application,poison,
                  [{description,
                       "An incredibly fast, pure Elixir JSON library"},
                   {vsn,"4.0.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Poison','Elixir.Poison.Decode',
                        'Elixir.Poison.DecodeError','Elixir.Poison.Decoder',
                        'Elixir.Poison.Decoder.Any','Elixir.Poison.Encode',
                        'Elixir.Poison.EncodeError','Elixir.Poison.Encoder',
                        'Elixir.Poison.Encoder.Any',
                        'Elixir.Poison.Encoder.Atom',
                        'Elixir.Poison.Encoder.BitString',
                        'Elixir.Poison.Encoder.Date',
                        'Elixir.Poison.Encoder.DateTime',
                        'Elixir.Poison.Encoder.Float',
                        'Elixir.Poison.Encoder.HashSet',
                        'Elixir.Poison.Encoder.Integer',
                        'Elixir.Poison.Encoder.List',
                        'Elixir.Poison.Encoder.Map',
                        'Elixir.Poison.Encoder.MapSet',
                        'Elixir.Poison.Encoder.NaiveDateTime',
                        'Elixir.Poison.Encoder.Range',
                        'Elixir.Poison.Encoder.Stream',
                        'Elixir.Poison.Encoder.Time',
                        'Elixir.Poison.ParseError','Elixir.Poison.Parser',
                        'Elixir.Poison.Pretty']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,execjs,
                  [{description,"Run JavaScript code from Elixir"},
                   {vsn,"2.0.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Execjs','Elixir.Execjs.Escape',
                        'Elixir.Execjs.ExecError','Elixir.Execjs.Runtime',
                        'Elixir.Execjs.RuntimeError','Elixir.Execjs.Runtimes',
                        'Elixir.Execjs.Runtimes.JavaScriptCore',
                        'Elixir.Execjs.Runtimes.Node',
                        'Elixir.Execjs.Runtimes.Rhino',
                        'Elixir.Execjs.Runtimes.SpiderMonkey',
                        'Elixir.Execjs.Runtimes.UnavailableError',
                        'Elixir.Execjs.Runtimes.V8']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,poison]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,hpax,
                  [{description,
                       "Implementation of the HPACK protocol (RFC 7541) for Elixir"},
                   {vsn,"1.0.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.HPAX','Elixir.HPAX.Huffman',
                        'Elixir.HPAX.Table','Elixir.HPAX.Types']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mint,
                  [{description,"Small and composable HTTP client."},
                   {vsn,"1.6.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mint.Application','Elixir.Mint.Core.Conn',
                        'Elixir.Mint.Core.Headers',
                        'Elixir.Mint.Core.Transport',
                        'Elixir.Mint.Core.Transport.SSL',
                        'Elixir.Mint.Core.Transport.TCP',
                        'Elixir.Mint.Core.Util','Elixir.Mint.HTTP',
                        'Elixir.Mint.HTTP1','Elixir.Mint.HTTP1.Parse',
                        'Elixir.Mint.HTTP1.Request',
                        'Elixir.Mint.HTTP1.Response','Elixir.Mint.HTTP2',
                        'Elixir.Mint.HTTP2.Frame','Elixir.Mint.HTTPError',
                        'Elixir.Mint.Negotiate','Elixir.Mint.TransportError',
                        'Elixir.Mint.TunnelProxy','Elixir.Mint.Types',
                        'Elixir.Mint.UnsafeProxy',mint_shims]},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,hpax,ssl]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Mint.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,nimble_options,
                  [{description,
                       "A tiny library for validating and documenting high-level options"},
                   {vsn,"1.1.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.NimbleOptions','Elixir.NimbleOptions.Docs',
                        'Elixir.NimbleOptions.ValidationError']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,nimble_pool,
                  [{description,"A tiny resource-pool implementation"},
                   {vsn,"1.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.NimblePool','Elixir.NimblePool.Application']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.NimblePool.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,finch,
                  [{description,"An HTTP client focused on performance."},
                   {vsn,"0.19.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Finch','Elixir.Finch.Error',
                        'Elixir.Finch.HTTP1.Conn','Elixir.Finch.HTTP1.Pool',
                        'Elixir.Finch.HTTP1.PoolMetrics',
                        'Elixir.Finch.HTTP2.Pool',
                        'Elixir.Finch.HTTP2.PoolMetrics',
                        'Elixir.Finch.HTTP2.RequestStream',
                        'Elixir.Finch.Pool','Elixir.Finch.PoolManager',
                        'Elixir.Finch.Request','Elixir.Finch.Response',
                        'Elixir.Finch.SSL','Elixir.Finch.Telemetry']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,mime,mint,nimble_options,
                        nimble_pool,telemetry]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,inets,
                  [{description,"INETS  CXC 138 49"},
                   {vsn,"8.2.2"},
                   {id,[]},
                   {modules,
                       [inets,inets_sup,inets_app,inets_service,inets_trace,
                        inets_lib,httpc,httpc_handler,httpc_handler_sup,
                        httpc_manager,httpc_profile_sup,httpc_request,
                        httpc_response,httpc_sup,httpc_cookie,http_chunk,
                        http_request,http_response,http_transport,http_util,
                        http_uri,httpd,httpd_acceptor,httpd_acceptor_sup,
                        httpd_cgi,httpd_connection_sup,httpd_conf,
                        httpd_custom,httpd_custom_api,httpd_esi,httpd_example,
                        httpd_file,httpd_instance_sup,httpd_log,httpd_logger,
                        httpd_manager,httpd_misc_sup,httpd_request,
                        httpd_request_handler,httpd_response,httpd_script_env,
                        httpd_socket,httpd_sup,httpd_util,mod_actions,
                        mod_alias,mod_auth,mod_auth_dets,mod_auth_mnesia,
                        mod_auth_plain,mod_auth_server,mod_cgi,mod_dir,
                        mod_disk_log,mod_esi,mod_get,mod_head,mod_log,
                        mod_range,mod_responsecontrol,mod_security,
                        mod_security_server,mod_trace]},
                   {registered,[inets_sup,httpc_manager]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{inets_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,tesla,
                  [{description,
                       "HTTP client library, with support for middleware and multiple adapters."},
                   {vsn,"1.12.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Tesla','Elixir.Tesla.Adapter',
                        'Elixir.Tesla.Adapter.Finch',
                        'Elixir.Tesla.Adapter.Hackney',
                        'Elixir.Tesla.Adapter.Httpc',
                        'Elixir.Tesla.Adapter.Mint',
                        'Elixir.Tesla.Adapter.Shared','Elixir.Tesla.Builder',
                        'Elixir.Tesla.Client','Elixir.Tesla.Env',
                        'Elixir.Tesla.Error','Elixir.Tesla.Middleware',
                        'Elixir.Tesla.Middleware.BaseUrl',
                        'Elixir.Tesla.Middleware.BasicAuth',
                        'Elixir.Tesla.Middleware.BearerAuth',
                        'Elixir.Tesla.Middleware.CompressRequest',
                        'Elixir.Tesla.Middleware.Compression',
                        'Elixir.Tesla.Middleware.DecodeFormUrlencoded',
                        'Elixir.Tesla.Middleware.DecodeJson',
                        'Elixir.Tesla.Middleware.DecodeRels',
                        'Elixir.Tesla.Middleware.DecompressResponse',
                        'Elixir.Tesla.Middleware.DigestAuth',
                        'Elixir.Tesla.Middleware.EncodeFormUrlencoded',
                        'Elixir.Tesla.Middleware.EncodeJson',
                        'Elixir.Tesla.Middleware.FollowRedirects',
                        'Elixir.Tesla.Middleware.FormUrlencoded',
                        'Elixir.Tesla.Middleware.Headers',
                        'Elixir.Tesla.Middleware.JSON',
                        'Elixir.Tesla.Middleware.KeepRequest',
                        'Elixir.Tesla.Middleware.Logger',
                        'Elixir.Tesla.Middleware.Logger.Formatter',
                        'Elixir.Tesla.Middleware.MethodOverride',
                        'Elixir.Tesla.Middleware.Opts',
                        'Elixir.Tesla.Middleware.PathParams',
                        'Elixir.Tesla.Middleware.Query',
                        'Elixir.Tesla.Middleware.Retry',
                        'Elixir.Tesla.Middleware.SSE',
                        'Elixir.Tesla.Middleware.Telemetry',
                        'Elixir.Tesla.Middleware.Timeout','Elixir.Tesla.Mock',
                        'Elixir.Tesla.Mock.Error','Elixir.Tesla.Multipart',
                        'Elixir.Tesla.Multipart.Part']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,inets,mime,ssl]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,google_gax,
                  [{description,"Google API Extensions\n"},
                   {vsn,"0.4.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.GoogleApi.Gax.Connection',
                        'Elixir.GoogleApi.Gax.DataWrapper',
                        'Elixir.GoogleApi.Gax.ModelBase',
                        'Elixir.GoogleApi.Gax.Request',
                        'Elixir.GoogleApi.Gax.Response',
                        'Elixir.Poison.Decoder.GoogleApi.Gax.DataWrapper']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,mime,poison,tesla]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,google_api_storage,
                  [{description,
                       "Cloud Storage JSON API client library. Stores and retrieves potentially large, immutable data objects.\n"},
                   {vsn,"0.19.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.GoogleApi.Storage.V1.Api.BucketAccessControls',
                        'Elixir.GoogleApi.Storage.V1.Api.Buckets',
                        'Elixir.GoogleApi.Storage.V1.Api.Channels',
                        'Elixir.GoogleApi.Storage.V1.Api.DefaultObjectAccessControls',
                        'Elixir.GoogleApi.Storage.V1.Api.Notifications',
                        'Elixir.GoogleApi.Storage.V1.Api.ObjectAccessControls',
                        'Elixir.GoogleApi.Storage.V1.Api.Objects',
                        'Elixir.GoogleApi.Storage.V1.Api.Projects',
                        'Elixir.GoogleApi.Storage.V1.Connection',
                        'Elixir.GoogleApi.Storage.V1.Model.Bucket',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketAccessControl',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketAccessControlProjectTeam',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketAccessControls',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketBilling',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketCors',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketEncryption',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketIamConfiguration',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketIamConfigurationBucketPolicyOnly',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketIamConfigurationUniformBucketLevelAccess',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketLifecycle',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketLifecycleRule',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketLifecycleRuleAction',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketLifecycleRuleCondition',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketLogging',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketOwner',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketRetentionPolicy',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketVersioning',
                        'Elixir.GoogleApi.Storage.V1.Model.BucketWebsite',
                        'Elixir.GoogleApi.Storage.V1.Model.Buckets',
                        'Elixir.GoogleApi.Storage.V1.Model.Channel',
                        'Elixir.GoogleApi.Storage.V1.Model.ComposeRequest',
                        'Elixir.GoogleApi.Storage.V1.Model.ComposeRequestSourceObjects',
                        'Elixir.GoogleApi.Storage.V1.Model.ComposeRequestSourceObjectsObjectPreconditions',
                        'Elixir.GoogleApi.Storage.V1.Model.Expr',
                        'Elixir.GoogleApi.Storage.V1.Model.HmacKey',
                        'Elixir.GoogleApi.Storage.V1.Model.HmacKeyMetadata',
                        'Elixir.GoogleApi.Storage.V1.Model.HmacKeysMetadata',
                        'Elixir.GoogleApi.Storage.V1.Model.Notification',
                        'Elixir.GoogleApi.Storage.V1.Model.Notifications',
                        'Elixir.GoogleApi.Storage.V1.Model.Object',
                        'Elixir.GoogleApi.Storage.V1.Model.ObjectAccessControl',
                        'Elixir.GoogleApi.Storage.V1.Model.ObjectAccessControlProjectTeam',
                        'Elixir.GoogleApi.Storage.V1.Model.ObjectAccessControls',
                        'Elixir.GoogleApi.Storage.V1.Model.ObjectCustomerEncryption',
                        'Elixir.GoogleApi.Storage.V1.Model.ObjectOwner',
                        'Elixir.GoogleApi.Storage.V1.Model.Objects',
                        'Elixir.GoogleApi.Storage.V1.Model.Policy',
                        'Elixir.GoogleApi.Storage.V1.Model.PolicyBindings',
                        'Elixir.GoogleApi.Storage.V1.Model.RewriteResponse',
                        'Elixir.GoogleApi.Storage.V1.Model.ServiceAccount',
                        'Elixir.GoogleApi.Storage.V1.Model.TestIamPermissionsResponse',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Bucket',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketAccessControl',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketAccessControlProjectTeam',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketAccessControls',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketBilling',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketCors',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketEncryption',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketIamConfiguration',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketIamConfigurationBucketPolicyOnly',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketIamConfigurationUniformBucketLevelAccess',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketLifecycle',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketLifecycleRule',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketLifecycleRuleAction',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketLifecycleRuleCondition',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketLogging',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketOwner',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketRetentionPolicy',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketVersioning',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.BucketWebsite',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Buckets',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Channel',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ComposeRequest',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ComposeRequestSourceObjects',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ComposeRequestSourceObjectsObjectPreconditions',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Expr',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.HmacKey',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.HmacKeyMetadata',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.HmacKeysMetadata',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Notification',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Notifications',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Object',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ObjectAccessControl',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ObjectAccessControlProjectTeam',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ObjectAccessControls',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ObjectCustomerEncryption',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ObjectOwner',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Objects',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.Policy',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.PolicyBindings',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.RewriteResponse',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.ServiceAccount',
                        'Elixir.Poison.Decoder.GoogleApi.Storage.V1.Model.TestIamPermissionsResponse',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Bucket',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketAccessControl',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketAccessControlProjectTeam',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketAccessControls',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketBilling',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketCors',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketEncryption',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketIamConfiguration',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketIamConfigurationBucketPolicyOnly',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketIamConfigurationUniformBucketLevelAccess',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketLifecycle',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketLifecycleRule',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketLifecycleRuleAction',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketLifecycleRuleCondition',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketLogging',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketOwner',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketRetentionPolicy',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketVersioning',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.BucketWebsite',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Buckets',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Channel',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ComposeRequest',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ComposeRequestSourceObjects',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ComposeRequestSourceObjectsObjectPreconditions',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Expr',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.HmacKey',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.HmacKeyMetadata',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.HmacKeysMetadata',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Notification',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Notifications',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Object',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ObjectAccessControl',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ObjectAccessControlProjectTeam',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ObjectAccessControls',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ObjectCustomerEncryption',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ObjectOwner',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Objects',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.Policy',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.PolicyBindings',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.RewriteResponse',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.ServiceAccount',
                        'Elixir.Poison.Encoder.GoogleApi.Storage.V1.Model.TestIamPermissionsResponse']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,google_gax]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,jason,
                  [{description,
                       "A blazing fast JSON parser and generator in pure Elixir.\n"},
                   {vsn,"1.4.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.Enumerable.Jason.OrderedObject',
                        'Elixir.Jason','Elixir.Jason.Codegen',
                        'Elixir.Jason.DecodeError','Elixir.Jason.Decoder',
                        'Elixir.Jason.Decoder.Unescape','Elixir.Jason.Encode',
                        'Elixir.Jason.EncodeError','Elixir.Jason.Encoder',
                        'Elixir.Jason.Encoder.Any',
                        'Elixir.Jason.Encoder.Atom',
                        'Elixir.Jason.Encoder.BitString',
                        'Elixir.Jason.Encoder.Date',
                        'Elixir.Jason.Encoder.DateTime',
                        'Elixir.Jason.Encoder.Decimal',
                        'Elixir.Jason.Encoder.Float',
                        'Elixir.Jason.Encoder.Integer',
                        'Elixir.Jason.Encoder.Jason.Fragment',
                        'Elixir.Jason.Encoder.Jason.OrderedObject',
                        'Elixir.Jason.Encoder.List',
                        'Elixir.Jason.Encoder.Map',
                        'Elixir.Jason.Encoder.NaiveDateTime',
                        'Elixir.Jason.Encoder.Time','Elixir.Jason.Formatter',
                        'Elixir.Jason.Fragment','Elixir.Jason.Helpers',
                        'Elixir.Jason.OrderedObject','Elixir.Jason.Sigil']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,jose,
                  [{description,
                       "JSON Object Signing and Encryption (JOSE) for Erlang and Elixir."},
                   {vsn,"1.11.10"},
                   {id,[]},
                   {modules,
                       ['Elixir.Inspect.JOSE.JWK','Elixir.JOSE',
                        'Elixir.JOSE.JWA','Elixir.JOSE.JWE','Elixir.JOSE.JWK',
                        'Elixir.JOSE.JWS','Elixir.JOSE.JWT',
                        'Elixir.JOSE.Poison',
                        'Elixir.JOSE.Poison.LexicalEncode',
                        'Elixir.JOSE.Poison.LexicalEncodeError',
                        'Elixir.JOSE.Poison.LexicalEncoder',
                        'Elixir.JOSE.Poison.LexicalEncoder.Any',
                        'Elixir.JOSE.Poison.LexicalEncoder.Atom',
                        'Elixir.JOSE.Poison.LexicalEncoder.BitString',
                        'Elixir.JOSE.Poison.LexicalEncoder.Date',
                        'Elixir.JOSE.Poison.LexicalEncoder.DateTime',
                        'Elixir.JOSE.Poison.LexicalEncoder.Float',
                        'Elixir.JOSE.Poison.LexicalEncoder.HashSet',
                        'Elixir.JOSE.Poison.LexicalEncoder.Integer',
                        'Elixir.JOSE.Poison.LexicalEncoder.List',
                        'Elixir.JOSE.Poison.LexicalEncoder.Map',
                        'Elixir.JOSE.Poison.LexicalEncoder.MapSet',
                        'Elixir.JOSE.Poison.LexicalEncoder.NaiveDateTime',
                        'Elixir.JOSE.Poison.LexicalEncoder.Range',
                        'Elixir.JOSE.Poison.LexicalEncoder.Stream',
                        'Elixir.JOSE.Poison.LexicalEncoder.Time',
                        'Elixir.JOSE.Poison.LexicalPretty',jose,jose_app,
                        jose_base64,jose_base64url,jose_block_encryptor,
                        jose_chacha20_poly1305,jose_chacha20_poly1305_crypto,
                        jose_chacha20_poly1305_libsodium,
                        jose_chacha20_poly1305_unsupported,jose_crypto_compat,
                        jose_curve25519,jose_curve25519_crypto,
                        jose_curve25519_fallback,jose_curve25519_libdecaf,
                        jose_curve25519_libsodium,jose_curve25519_unsupported,
                        jose_curve448,jose_curve448_crypto,
                        jose_curve448_fallback,jose_curve448_libdecaf,
                        jose_curve448_unsupported,jose_json,jose_json_jason,
                        jose_json_jiffy,jose_json_jsone,jose_json_jsx,
                        jose_json_ojson,jose_json_poison,
                        jose_json_poison_compat_encoder,
                        jose_json_poison_lexical_encoder,jose_json_thoas,
                        jose_json_unsupported,jose_jwa,jose_jwa_aes,
                        jose_jwa_aes_kw,jose_jwa_base64url,jose_jwa_bench,
                        jose_jwa_chacha20,jose_jwa_chacha20_poly1305,
                        jose_jwa_concat_kdf,jose_jwa_curve25519,
                        jose_jwa_curve448,jose_jwa_ed25519,jose_jwa_ed448,
                        jose_jwa_hchacha20,jose_jwa_math,jose_jwa_pkcs1,
                        jose_jwa_pkcs5,jose_jwa_pkcs7,jose_jwa_poly1305,
                        jose_jwa_sha3,jose_jwa_unsupported,jose_jwa_x25519,
                        jose_jwa_x448,jose_jwa_xchacha20,
                        jose_jwa_xchacha20_poly1305,jose_jwe,jose_jwe_alg,
                        jose_jwe_alg_aes_kw,jose_jwe_alg_c20p_kw,
                        jose_jwe_alg_dir,jose_jwe_alg_ecdh_1pu,
                        jose_jwe_alg_ecdh_es,jose_jwe_alg_ecdh_ss,
                        jose_jwe_alg_pbes2,jose_jwe_alg_rsa,
                        jose_jwe_alg_xc20p_kw,jose_jwe_enc,jose_jwe_enc_aes,
                        jose_jwe_enc_c20p,jose_jwe_enc_xc20p,jose_jwe_zip,
                        jose_jwk,jose_jwk_der,jose_jwk_kty,jose_jwk_kty_ec,
                        jose_jwk_kty_oct,jose_jwk_kty_okp_ed25519,
                        jose_jwk_kty_okp_ed25519ph,jose_jwk_kty_okp_ed448,
                        jose_jwk_kty_okp_ed448ph,jose_jwk_kty_okp_x25519,
                        jose_jwk_kty_okp_x448,jose_jwk_kty_rsa,jose_jwk_oct,
                        jose_jwk_openssh_key,jose_jwk_pem,jose_jwk_set,
                        jose_jwk_use_enc,jose_jwk_use_sig,jose_jws,
                        jose_jws_alg,jose_jws_alg_ecdsa,jose_jws_alg_eddsa,
                        jose_jws_alg_hmac,jose_jws_alg_none,
                        jose_jws_alg_poly1305,jose_jws_alg_rsa_pkcs1_v1_5,
                        jose_jws_alg_rsa_pss,jose_jwt,jose_public_key,
                        jose_server,jose_sha3,jose_sha3_keccakf1600_driver,
                        jose_sha3_keccakf1600_nif,jose_sha3_libdecaf,
                        jose_sha3_unsupported,jose_sup,
                        jose_xchacha20_poly1305,
                        jose_xchacha20_poly1305_crypto,
                        jose_xchacha20_poly1305_libsodium,
                        jose_xchacha20_poly1305_unsupported]},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,asn1,crypto,public_key]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{jose_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,goth,
                  [{description,
                       "A simple library to generate and retrieve Oauth2 tokens for use with Google Cloud Service accounts.\n"},
                   {vsn,"1.4.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Goth','Elixir.Goth.Application',
                        'Elixir.Goth.Client','Elixir.Goth.Config',
                        'Elixir.Goth.HTTPClient','Elixir.Goth.Token',
                        'Elixir.Goth.TokenStore']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,finch,jason,jose]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Goth.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,guardian,
                  [{description,"Elixir Authentication framework"},
                   {vsn,"2.3.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Guardian','Elixir.Guardian.Config',
                        'Elixir.Guardian.MalformedReturnValueError',
                        'Elixir.Guardian.Permissions',
                        'Elixir.Guardian.Permissions.AtomEncoding',
                        'Elixir.Guardian.Permissions.BitwiseEncoding',
                        'Elixir.Guardian.Permissions.PermissionEncoding',
                        'Elixir.Guardian.Permissions.PermissionNotFoundError',
                        'Elixir.Guardian.Permissions.Plug',
                        'Elixir.Guardian.Permissions.TextEncoding',
                        'Elixir.Guardian.Plug',
                        'Elixir.Guardian.Plug.EnsureAuthenticated',
                        'Elixir.Guardian.Plug.EnsureNotAuthenticated',
                        'Elixir.Guardian.Plug.ErrorHandler',
                        'Elixir.Guardian.Plug.Keys',
                        'Elixir.Guardian.Plug.LoadResource',
                        'Elixir.Guardian.Plug.Pipeline',
                        'Elixir.Guardian.Plug.SlidingCookie',
                        'Elixir.Guardian.Plug.UnauthenticatedError',
                        'Elixir.Guardian.Plug.VerifyCookie',
                        'Elixir.Guardian.Plug.VerifyHeader',
                        'Elixir.Guardian.Plug.VerifySession',
                        'Elixir.Guardian.Token','Elixir.Guardian.Token.Jwt',
                        'Elixir.Guardian.Token.Jwt.SecretFetcher',
                        'Elixir.Guardian.Token.Jwt.SecretFetcher.SecretFetcherDefaultImpl',
                        'Elixir.Guardian.Token.Jwt.Verify',
                        'Elixir.Guardian.Token.Verify','Elixir.Guardian.UUID',
                        'Elixir.Mix.Tasks.Guardian.Gen.Secret']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,crypto,jose]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,guardian_db,
                  [{description,"DB tracking for token validity"},
                   {vsn,"2.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Guardian.DB','Elixir.Guardian.DB.Token',
                        'Elixir.Guardian.DB.Token.Sweeper',
                        'Elixir.Guardian.DB.Token.SweeperServer',
                        'Elixir.Mix.Tasks.Guardian.Db.Gen.Migration']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,ecto,ecto_sql,guardian]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,inflex,
                  [{description,
                       "An Elixir library for handling word inflections.\n"},
                   {vsn,"2.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Inflex','Elixir.Inflex.Camelize',
                        'Elixir.Inflex.Ordinalize',
                        'Elixir.Inflex.Parameterize',
                        'Elixir.Inflex.Pluralize','Elixir.Inflex.Underscore']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,typed_struct,
                  [{description,
                       "A library for defining structs with a type without writing boilerplate code."},
                   {vsn,"0.3.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.TypedStruct','Elixir.TypedStruct.Plugin']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,json_schema,
                  [{description,
                       "A library for parsing, inspecting and manipulating JSON Schema documents.\n"},
                   {vsn,"0.5.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.JsonSchema','Elixir.JsonSchema.Parser',
                        'Elixir.JsonSchema.Parser.AllOfParser',
                        'Elixir.JsonSchema.Parser.AnyOfParser',
                        'Elixir.JsonSchema.Parser.ArrayParser',
                        'Elixir.JsonSchema.Parser.ConstParser',
                        'Elixir.JsonSchema.Parser.DefinitionsParser',
                        'Elixir.JsonSchema.Parser.EnumParser',
                        'Elixir.JsonSchema.Parser.ErrorUtil',
                        'Elixir.JsonSchema.Parser.ObjectParser',
                        'Elixir.JsonSchema.Parser.OneOfParser',
                        'Elixir.JsonSchema.Parser.ParserBehaviour',
                        'Elixir.JsonSchema.Parser.ParserError',
                        'Elixir.JsonSchema.Parser.ParserResult',
                        'Elixir.JsonSchema.Parser.ParserWarning',
                        'Elixir.JsonSchema.Parser.PrimitiveParser',
                        'Elixir.JsonSchema.Parser.RootParser',
                        'Elixir.JsonSchema.Parser.SchemaResult',
                        'Elixir.JsonSchema.Parser.TupleParser',
                        'Elixir.JsonSchema.Parser.TypeReferenceParser',
                        'Elixir.JsonSchema.Parser.UnionParser',
                        'Elixir.JsonSchema.Parser.Util',
                        'Elixir.JsonSchema.Resolver',
                        'Elixir.JsonSchema.Types',
                        'Elixir.JsonSchema.Types.AllOfType',
                        'Elixir.JsonSchema.Types.AnyOfType',
                        'Elixir.JsonSchema.Types.ArrayType',
                        'Elixir.JsonSchema.Types.ConstType',
                        'Elixir.JsonSchema.Types.EnumType',
                        'Elixir.JsonSchema.Types.ObjectType',
                        'Elixir.JsonSchema.Types.OneOfType',
                        'Elixir.JsonSchema.Types.PrimitiveType',
                        'Elixir.JsonSchema.Types.SchemaDefinition',
                        'Elixir.JsonSchema.Types.TupleType',
                        'Elixir.JsonSchema.Types.TypeReference',
                        'Elixir.JsonSchema.Types.UnionType']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,jason,typed_struct]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,json_view,
                  [{description,
                       "Render json easier with relationship and custom data rendering\n"},
                   {vsn,"0.2.2"},
                   {id,[]},
                   {modules,['Elixir.JsonView']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,nested_filter,
                  [{description,
                       "Drill down into a nested map and filter out keys according to user\nspecified values\n"},
                   {vsn,"1.2.2"},
                   {id,[]},
                   {modules,['Elixir.NestedFilter']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,nimble_parsec,
                  [{description,
                       "A simple and fast library for text-based parser combinators"},
                   {vsn,"1.3.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix.Tasks.NimbleParsec.Compile',
                        'Elixir.NimbleParsec','Elixir.NimbleParsec.Compiler',
                        'Elixir.NimbleParsec.Recorder']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,oban,
                  [{description,
                       "Robust job processing, backed by modern PostgreSQL and SQLite3.\n"},
                   {vsn,"2.18.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Oban','Elixir.Oban.Application',
                        'Elixir.Oban.Backoff','Elixir.Oban.Config',
                        'Elixir.Oban.CrashError',
                        'Elixir.Oban.Cron.Expression','Elixir.Oban.Engine',
                        'Elixir.Oban.Engines.Basic',
                        'Elixir.Oban.Engines.Inline',
                        'Elixir.Oban.Engines.Lite','Elixir.Oban.Job',
                        'Elixir.Oban.Midwife','Elixir.Oban.Migration',
                        'Elixir.Oban.Migrations',
                        'Elixir.Oban.Migrations.Postgres',
                        'Elixir.Oban.Migrations.Postgres.V01',
                        'Elixir.Oban.Migrations.Postgres.V02',
                        'Elixir.Oban.Migrations.Postgres.V03',
                        'Elixir.Oban.Migrations.Postgres.V04',
                        'Elixir.Oban.Migrations.Postgres.V05',
                        'Elixir.Oban.Migrations.Postgres.V06',
                        'Elixir.Oban.Migrations.Postgres.V07',
                        'Elixir.Oban.Migrations.Postgres.V08',
                        'Elixir.Oban.Migrations.Postgres.V09',
                        'Elixir.Oban.Migrations.Postgres.V10',
                        'Elixir.Oban.Migrations.Postgres.V11',
                        'Elixir.Oban.Migrations.Postgres.V12',
                        'Elixir.Oban.Migrations.SQLite',
                        'Elixir.Oban.Notifier',
                        'Elixir.Oban.Notifiers.Isolated',
                        'Elixir.Oban.Notifiers.PG',
                        'Elixir.Oban.Notifiers.Postgres',
                        'Elixir.Oban.Nursery','Elixir.Oban.Peer',
                        'Elixir.Oban.Peers.Global',
                        'Elixir.Oban.Peers.Isolated',
                        'Elixir.Oban.Peers.Postgres',
                        'Elixir.Oban.PerformError','Elixir.Oban.Plugin',
                        'Elixir.Oban.Plugins.Cron',
                        'Elixir.Oban.Plugins.Gossip',
                        'Elixir.Oban.Plugins.Lifeline',
                        'Elixir.Oban.Plugins.Pruner',
                        'Elixir.Oban.Plugins.Reindexer',
                        'Elixir.Oban.Plugins.Repeater',
                        'Elixir.Oban.Queue.Drainer',
                        'Elixir.Oban.Queue.Executor',
                        'Elixir.Oban.Queue.Producer',
                        'Elixir.Oban.Queue.Supervisor',
                        'Elixir.Oban.Queue.Watchman','Elixir.Oban.Registry',
                        'Elixir.Oban.Repo','Elixir.Oban.Sonar',
                        'Elixir.Oban.Stager','Elixir.Oban.Telemetry',
                        'Elixir.Oban.Testing','Elixir.Oban.TimeoutError',
                        'Elixir.Oban.Validation','Elixir.Oban.Worker']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,ecto_sql,jason,telemetry]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Oban.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,open_api_spex,
                  [{description,"open_api_spex"},
                   {vsn,"3.21.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Inspect.OpenApiSpex.Schema',
                        'Elixir.Jason.Encoder.OpenApiSpex.JsonErrorResponse',
                        'Elixir.Jason.Encoder.OpenApiSpex.OpenApi',
                        'Elixir.Mix.Tasks.Openapi.Spec.Json',
                        'Elixir.Mix.Tasks.Openapi.Spec.Yaml',
                        'Elixir.OpenApiSpex','Elixir.OpenApiSpex.Callback',
                        'Elixir.OpenApiSpex.Cast',
                        'Elixir.OpenApiSpex.Cast.AllOf',
                        'Elixir.OpenApiSpex.Cast.AnyOf',
                        'Elixir.OpenApiSpex.Cast.Array',
                        'Elixir.OpenApiSpex.Cast.Discriminator',
                        'Elixir.OpenApiSpex.Cast.Enum',
                        'Elixir.OpenApiSpex.Cast.Error',
                        'Elixir.OpenApiSpex.Cast.Integer',
                        'Elixir.OpenApiSpex.Cast.Number',
                        'Elixir.OpenApiSpex.Cast.Object',
                        'Elixir.OpenApiSpex.Cast.OneOf',
                        'Elixir.OpenApiSpex.Cast.Primitive',
                        'Elixir.OpenApiSpex.Cast.String',
                        'Elixir.OpenApiSpex.Cast.Utils',
                        'Elixir.OpenApiSpex.CastParameters',
                        'Elixir.OpenApiSpex.Components',
                        'Elixir.OpenApiSpex.Contact',
                        'Elixir.OpenApiSpex.Controller',
                        'Elixir.OpenApiSpex.ControllerSpecs',
                        'Elixir.OpenApiSpex.DeprecatedCast',
                        'Elixir.OpenApiSpex.Discriminator',
                        'Elixir.OpenApiSpex.Encoding',
                        'Elixir.OpenApiSpex.Example',
                        'Elixir.OpenApiSpex.ExportSpec',
                        'Elixir.OpenApiSpex.ExportSpec.Options',
                        'Elixir.OpenApiSpex.Extendable',
                        'Elixir.OpenApiSpex.Extendable.Any',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Components',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Contact',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Discriminator',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Encoding',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Example',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.ExternalDocumentation',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Header',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Info',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.License',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Link',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.MediaType',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.OAuthFlow',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.OAuthFlows',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.OpenApi',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Operation',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Parameter',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.PathItem',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.RequestBody',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Response',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Schema',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.SecurityScheme',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Server',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.ServerVariable',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Tag',
                        'Elixir.OpenApiSpex.Extendable.OpenApiSpex.Xml',
                        'Elixir.OpenApiSpex.ExternalDocumentation',
                        'Elixir.OpenApiSpex.Header','Elixir.OpenApiSpex.Info',
                        'Elixir.OpenApiSpex.JsonErrorResponse',
                        'Elixir.OpenApiSpex.License',
                        'Elixir.OpenApiSpex.Link',
                        'Elixir.OpenApiSpex.MediaType',
                        'Elixir.OpenApiSpex.OAuthFlow',
                        'Elixir.OpenApiSpex.OAuthFlows',
                        'Elixir.OpenApiSpex.OpenApi',
                        'Elixir.OpenApiSpex.OpenApi.Decode',
                        'Elixir.OpenApiSpex.Operation',
                        'Elixir.OpenApiSpex.Operation2',
                        'Elixir.OpenApiSpex.OperationBuilder',
                        'Elixir.OpenApiSpex.Parameter',
                        'Elixir.OpenApiSpex.PathItem',
                        'Elixir.OpenApiSpex.Paths',
                        'Elixir.OpenApiSpex.Plug.AppEnvCache',
                        'Elixir.OpenApiSpex.Plug.Cache',
                        'Elixir.OpenApiSpex.Plug.Cast',
                        'Elixir.OpenApiSpex.Plug.Cast2',
                        'Elixir.OpenApiSpex.Plug.CastAndValidate',
                        'Elixir.OpenApiSpex.Plug.DefaultRenderError',
                        'Elixir.OpenApiSpex.Plug.JsonRenderError',
                        'Elixir.OpenApiSpex.Plug.JsonRenderErrorV2',
                        'Elixir.OpenApiSpex.Plug.NoneCache',
                        'Elixir.OpenApiSpex.Plug.PersistentTermCache',
                        'Elixir.OpenApiSpex.Plug.PutApiSpec',
                        'Elixir.OpenApiSpex.Plug.RenderSpec',
                        'Elixir.OpenApiSpex.Plug.SwaggerUI',
                        'Elixir.OpenApiSpex.Plug.SwaggerUIOAuth2Redirect',
                        'Elixir.OpenApiSpex.Plug.Validate',
                        'Elixir.OpenApiSpex.Reference',
                        'Elixir.OpenApiSpex.RequestBody',
                        'Elixir.OpenApiSpex.Response',
                        'Elixir.OpenApiSpex.Responses',
                        'Elixir.OpenApiSpex.Schema',
                        'Elixir.OpenApiSpex.SchemaConsistency',
                        'Elixir.OpenApiSpex.SchemaException',
                        'Elixir.OpenApiSpex.SchemaResolver',
                        'Elixir.OpenApiSpex.SecurityRequirement',
                        'Elixir.OpenApiSpex.SecurityScheme',
                        'Elixir.OpenApiSpex.Server',
                        'Elixir.OpenApiSpex.ServerVariable',
                        'Elixir.OpenApiSpex.Tag',
                        'Elixir.OpenApiSpex.TermType',
                        'Elixir.OpenApiSpex.Test.Assertions',
                        'Elixir.OpenApiSpex.Test.Assertions2',
                        'Elixir.OpenApiSpex.TestAssertions',
                        'Elixir.OpenApiSpex.Xml',
                        'Elixir.Poison.Encoder.OpenApiSpex.JsonErrorResponse',
                        'Elixir.Poison.Encoder.OpenApiSpex.OpenApi',
                        'Elixir.String.Chars.OpenApiSpex.Cast.Error']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,plug]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,pbkdf2_elixir,
                  [{description,"pbkdf2_elixir"},
                   {vsn,"2.2.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Pbkdf2','Elixir.Pbkdf2.Base',
                        'Elixir.Pbkdf2.Base64','Elixir.Pbkdf2.Stats',
                        'Elixir.Pbkdf2.Tools']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,comeonin,crypto]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_html,
                  [{description,
                       "Phoenix view functions for working with HTML templates"},
                   {vsn,"3.3.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.HTML','Elixir.Phoenix.HTML.Engine',
                        'Elixir.Phoenix.HTML.Form',
                        'Elixir.Phoenix.HTML.FormData',
                        'Elixir.Phoenix.HTML.FormData.Atom',
                        'Elixir.Phoenix.HTML.FormData.Map',
                        'Elixir.Phoenix.HTML.FormData.Plug.Conn',
                        'Elixir.Phoenix.HTML.FormField',
                        'Elixir.Phoenix.HTML.Format',
                        'Elixir.Phoenix.HTML.Link','Elixir.Phoenix.HTML.Safe',
                        'Elixir.Phoenix.HTML.Safe.Atom',
                        'Elixir.Phoenix.HTML.Safe.BitString',
                        'Elixir.Phoenix.HTML.Safe.Date',
                        'Elixir.Phoenix.HTML.Safe.DateTime',
                        'Elixir.Phoenix.HTML.Safe.Float',
                        'Elixir.Phoenix.HTML.Safe.Integer',
                        'Elixir.Phoenix.HTML.Safe.List',
                        'Elixir.Phoenix.HTML.Safe.NaiveDateTime',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.HTML.Form',
                        'Elixir.Phoenix.HTML.Safe.Time',
                        'Elixir.Phoenix.HTML.Safe.Tuple',
                        'Elixir.Phoenix.HTML.Safe.URI',
                        'Elixir.Phoenix.HTML.Tag']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,eex]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{csrf_token_reader,
                            {'Elixir.Plug.CSRFProtection',get_csrf_token_for,
                                []}}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,cowlib,
                  [{description,
                       "Support library for manipulating Web protocols."},
                   {vsn,"2.13.0"},
                   {id,[]},
                   {modules,
                       [cow_base64url,cow_cookie,cow_date,cow_hpack,cow_http,
                        cow_http2,cow_http2_machine,cow_http_hd,
                        cow_http_struct_hd,cow_http_te,cow_iolists,cow_link,
                        cow_mimetypes,cow_multipart,cow_qs,cow_spdy,cow_sse,
                        cow_uri,cow_uri_template,cow_ws]},
                   {registered,[]},
                   {applications,[kernel,stdlib,crypto]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ranch,
                  [{description,"Socket acceptor pool for TCP protocols."},
                   {vsn,"1.8.0"},
                   {id,[]},
                   {modules,
                       [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,
                        ranch_conns_sup,ranch_crc32c,ranch_listener_sup,
                        ranch_protocol,ranch_proxy_header,ranch_server,
                        ranch_ssl,ranch_sup,ranch_tcp,ranch_transport]},
                   {registered,[ranch_sup,ranch_server]},
                   {applications,[kernel,stdlib,ssl]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ranch_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowboy,
                  [{description,"Small, fast, modern HTTP server."},
                   {vsn,"2.12.0"},
                   {id,[]},
                   {modules,
                       [cowboy,cowboy_app,cowboy_bstr,cowboy_children,
                        cowboy_clear,cowboy_clock,cowboy_compress_h,
                        cowboy_constraints,cowboy_decompress_h,cowboy_handler,
                        cowboy_http,cowboy_http2,cowboy_loop,cowboy_metrics_h,
                        cowboy_middleware,cowboy_req,cowboy_rest,
                        cowboy_router,cowboy_static,cowboy_stream,
                        cowboy_stream_h,cowboy_sub_protocol,cowboy_sup,
                        cowboy_tls,cowboy_tracer_h,cowboy_websocket]},
                   {registered,[cowboy_sup,cowboy_clock]},
                   {applications,[kernel,stdlib,cowlib,crypto,ranch]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{cowboy_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowboy_telemetry,
                  [{description,"Telemetry instrumentation for Cowboy"},
                   {vsn,"0.4.0"},
                   {id,[]},
                   {modules,[cowboy_telemetry_h]},
                   {registered,[]},
                   {applications,[kernel,stdlib,telemetry]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,plug_cowboy,
                  [{description,"A Plug adapter for Cowboy"},
                   {vsn,"2.7.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Plug.Cowboy','Elixir.Plug.Cowboy.Conn',
                        'Elixir.Plug.Cowboy.Drainer',
                        'Elixir.Plug.Cowboy.Handler',
                        'Elixir.Plug.Cowboy.Translator']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,cowboy,cowboy_telemetry,
                        plug]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug.Cowboy',[]}}]}]}},
     {apply,
         {application,load,
             [{application,plug_socket,
                  [{description,
                       "Add Cowboy websockets to your Plug.Router easily"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,['Elixir.PlugSocket']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,postgrex,
                  [{description,"PostgreSQL driver for Elixir"},
                   {vsn,"0.17.5"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Postgrex.Stream',
                        'Elixir.DBConnection.Query.Postgrex.Copy',
                        'Elixir.DBConnection.Query.Postgrex.Parameters',
                        'Elixir.DBConnection.Query.Postgrex.Query',
                        'Elixir.Enumerable.Postgrex.Stream',
                        'Elixir.Inspect.Postgrex.Stream','Elixir.Postgrex',
                        'Elixir.Postgrex.App',
                        'Elixir.Postgrex.BinaryExtension',
                        'Elixir.Postgrex.BinaryUtils','Elixir.Postgrex.Box',
                        'Elixir.Postgrex.Circle','Elixir.Postgrex.Copy',
                        'Elixir.Postgrex.Cursor',
                        'Elixir.Postgrex.DefaultTypes',
                        'Elixir.Postgrex.Error','Elixir.Postgrex.ErrorCode',
                        'Elixir.Postgrex.Extension',
                        'Elixir.Postgrex.Extensions.Array',
                        'Elixir.Postgrex.Extensions.BitString',
                        'Elixir.Postgrex.Extensions.Bool',
                        'Elixir.Postgrex.Extensions.Box',
                        'Elixir.Postgrex.Extensions.Circle',
                        'Elixir.Postgrex.Extensions.Date',
                        'Elixir.Postgrex.Extensions.Float4',
                        'Elixir.Postgrex.Extensions.Float8',
                        'Elixir.Postgrex.Extensions.HStore',
                        'Elixir.Postgrex.Extensions.INET',
                        'Elixir.Postgrex.Extensions.Int2',
                        'Elixir.Postgrex.Extensions.Int4',
                        'Elixir.Postgrex.Extensions.Int8',
                        'Elixir.Postgrex.Extensions.Interval',
                        'Elixir.Postgrex.Extensions.JSON',
                        'Elixir.Postgrex.Extensions.JSONB',
                        'Elixir.Postgrex.Extensions.Line',
                        'Elixir.Postgrex.Extensions.LineSegment',
                        'Elixir.Postgrex.Extensions.Lquery',
                        'Elixir.Postgrex.Extensions.Ltree',
                        'Elixir.Postgrex.Extensions.MACADDR',
                        'Elixir.Postgrex.Extensions.Multirange',
                        'Elixir.Postgrex.Extensions.Name',
                        'Elixir.Postgrex.Extensions.Numeric',
                        'Elixir.Postgrex.Extensions.OID',
                        'Elixir.Postgrex.Extensions.Path',
                        'Elixir.Postgrex.Extensions.Point',
                        'Elixir.Postgrex.Extensions.Polygon',
                        'Elixir.Postgrex.Extensions.Range',
                        'Elixir.Postgrex.Extensions.Raw',
                        'Elixir.Postgrex.Extensions.Record',
                        'Elixir.Postgrex.Extensions.TID',
                        'Elixir.Postgrex.Extensions.TSVector',
                        'Elixir.Postgrex.Extensions.Time',
                        'Elixir.Postgrex.Extensions.TimeTZ',
                        'Elixir.Postgrex.Extensions.Timestamp',
                        'Elixir.Postgrex.Extensions.TimestampTZ',
                        'Elixir.Postgrex.Extensions.UUID',
                        'Elixir.Postgrex.Extensions.VoidBinary',
                        'Elixir.Postgrex.Extensions.VoidText',
                        'Elixir.Postgrex.Extensions.Xid8',
                        'Elixir.Postgrex.INET','Elixir.Postgrex.Interval',
                        'Elixir.Postgrex.Lexeme','Elixir.Postgrex.Line',
                        'Elixir.Postgrex.LineSegment',
                        'Elixir.Postgrex.MACADDR','Elixir.Postgrex.Messages',
                        'Elixir.Postgrex.Multirange',
                        'Elixir.Postgrex.Notifications',
                        'Elixir.Postgrex.Parameters','Elixir.Postgrex.Path',
                        'Elixir.Postgrex.Point','Elixir.Postgrex.Polygon',
                        'Elixir.Postgrex.Protocol','Elixir.Postgrex.Query',
                        'Elixir.Postgrex.QueryError','Elixir.Postgrex.Range',
                        'Elixir.Postgrex.ReplicationConnection',
                        'Elixir.Postgrex.Result','Elixir.Postgrex.SCRAM',
                        'Elixir.Postgrex.SCRAM.LockedCache',
                        'Elixir.Postgrex.SimpleConnection',
                        'Elixir.Postgrex.Stream',
                        'Elixir.Postgrex.SuperExtension',
                        'Elixir.Postgrex.TypeInfo',
                        'Elixir.Postgrex.TypeModule',
                        'Elixir.Postgrex.TypeServer',
                        'Elixir.Postgrex.TypeSupervisor',
                        'Elixir.Postgrex.Types','Elixir.Postgrex.Utils',
                        'Elixir.String.Chars.Postgrex.Copy',
                        'Elixir.String.Chars.Postgrex.Query']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,crypto,db_connection,
                        decimal,ssl]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{type_server_reap_after,180000},
                        {json_library,'Elixir.Jason'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Postgrex.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,castore,
                  [{description,"Up-to-date CA certificate store."},
                   {vsn,"1.0.9"},
                   {id,[]},
                   {modules,['Elixir.CAStore']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,octo_fetch,
                  [{description,
                       "Download, verify, and extract GitHub release artifacts effortlessly right from Elixir"},
                   {vsn,"0.4.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.OctoFetch','Elixir.OctoFetch.Downloader',
                        'Elixir.OctoFetch.Test']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,castore,inets,public_key,
                        ssl_verify_fun]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,telemetry_metrics,
                  [{description,
                       "Provides a common interface for defining metrics based on Telemetry events.\n"},
                   {vsn,"0.6.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Telemetry.Metrics',
                        'Elixir.Telemetry.Metrics.ConsoleReporter',
                        'Elixir.Telemetry.Metrics.Counter',
                        'Elixir.Telemetry.Metrics.Distribution',
                        'Elixir.Telemetry.Metrics.LastValue',
                        'Elixir.Telemetry.Metrics.Sum',
                        'Elixir.Telemetry.Metrics.Summary']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,telemetry]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,telemetry_metrics_prometheus_core,
                  [{description,
                       "Provides a Prometheus format reporter for Telemetry.Metrics definitions.\n"},
                   {vsn,"1.2.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.TelemetryMetricsPrometheus.Core',
                        'Elixir.TelemetryMetricsPrometheus.Core.Aggregator',
                        'Elixir.TelemetryMetricsPrometheus.Core.Counter',
                        'Elixir.TelemetryMetricsPrometheus.Core.Distribution',
                        'Elixir.TelemetryMetricsPrometheus.Core.EventHandler',
                        'Elixir.TelemetryMetricsPrometheus.Core.Exporter',
                        'Elixir.TelemetryMetricsPrometheus.Core.LastValue',
                        'Elixir.TelemetryMetricsPrometheus.Core.Registry',
                        'Elixir.TelemetryMetricsPrometheus.Core.Sum']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,telemetry,
                        telemetry_metrics]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,telemetry_poller,
                  [{description,
                       "Periodically collect measurements and dispatch them as Telemetry events."},
                   {vsn,"1.1.0"},
                   {id,[]},
                   {modules,
                       [telemetry_poller,telemetry_poller_app,
                        telemetry_poller_builtin,telemetry_poller_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib,telemetry]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{telemetry_poller_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,prom_ex,
                  [{description,
                       "Prometheus metrics and Grafana dashboards for all of your favorite Elixir libraries"},
                   {vsn,"1.8.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix.Tasks.PromEx.Dashboard.Export',
                        'Elixir.Mix.Tasks.PromEx.Dashboard.Lint',
                        'Elixir.Mix.Tasks.PromEx.Dashboard.Publish',
                        'Elixir.Mix.Tasks.PromEx.Gen.Config','Elixir.PromEx',
                        'Elixir.PromEx.BucketGenerator',
                        'Elixir.PromEx.Config',
                        'Elixir.PromEx.DashboardRenderer',
                        'Elixir.PromEx.DashboardUploader',
                        'Elixir.PromEx.Debug','Elixir.PromEx.ETSCronFlusher',
                        'Elixir.PromEx.GrafanaAgent',
                        'Elixir.PromEx.GrafanaAgent.ConfigRenderer',
                        'Elixir.PromEx.GrafanaAgent.Downloader',
                        'Elixir.PromEx.GrafanaClient',
                        'Elixir.PromEx.GrafanaClient.Connection',
                        'Elixir.PromEx.GrafanaClient.DashboardChecker',
                        'Elixir.PromEx.LifecycleAnnotator',
                        'Elixir.PromEx.ManualMetricsManager',
                        'Elixir.PromEx.MetricTypes.Event',
                        'Elixir.PromEx.MetricTypes.Manual',
                        'Elixir.PromEx.MetricTypes.Polling',
                        'Elixir.PromEx.MetricsServer.Plug',
                        'Elixir.PromEx.Plug','Elixir.PromEx.Plugin',
                        'Elixir.PromEx.Plugins.Absinthe',
                        'Elixir.PromEx.Plugins.Application',
                        'Elixir.PromEx.Plugins.Beam',
                        'Elixir.PromEx.Plugins.Broadway',
                        'Elixir.PromEx.Plugins.Ecto',
                        'Elixir.PromEx.Plugins.Oban',
                        'Elixir.PromEx.Plugins.Phoenix',
                        'Elixir.PromEx.Plugins.PhoenixLiveView',
                        'Elixir.PromEx.Plugins.PlugCowboy',
                        'Elixir.PromEx.Plugins.PlugRouter',
                        'Elixir.PromEx.Plugins.PromEx','Elixir.PromEx.Utils']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,finch,jason,octo_fetch,
                        plug_cowboy,telemetry,telemetry_metrics,
                        telemetry_metrics_prometheus_core,telemetry_poller]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,reverse_proxy_plug,
                  [{description,"reverse_proxy_plug"},
                   {vsn,"3.0.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.ReverseProxyPlug',
                        'Elixir.ReverseProxyPlug.HTTPClient',
                        'Elixir.ReverseProxyPlug.HTTPClient.Adapters.Finch',
                        'Elixir.ReverseProxyPlug.HTTPClient.Adapters.HTTPoison',
                        'Elixir.ReverseProxyPlug.HTTPClient.Adapters.Tesla',
                        'Elixir.ReverseProxyPlug.HTTPClient.Error',
                        'Elixir.ReverseProxyPlug.HTTPClient.MaybeRedirect',
                        'Elixir.ReverseProxyPlug.HTTPClient.Request',
                        'Elixir.ReverseProxyPlug.HTTPClient.Response']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,plug]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,scrivener,
                  [{description,"Pagination for the Elixir ecosystem"},
                   {vsn,"2.7.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Scrivener.Page',
                        'Elixir.Enumerable.Scrivener.Page','Elixir.Scrivener',
                        'Elixir.Scrivener.Config','Elixir.Scrivener.Page',
                        'Elixir.Scrivener.Paginater']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,scrivener_ecto,
                  [{description,"Paginate your Ecto queries with Scrivener"},
                   {vsn,"2.7.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Scrivener.Paginater.Atom',
                        'Elixir.Scrivener.Paginater.Ecto.Query']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,ecto,scrivener]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,scrivener_list,
                  [{description,
                       "A scrivener/scrivener_ecto compatible extension that allows pagination of a list.\n"},
                   {vsn,"2.0.1"},
                   {id,[]},
                   {modules,['Elixir.Scrivener.Paginater.List']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,scrivener_ecto]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,slugify,
                  [{description,
                       "Transform strings from any language to slugs for URLs, filenames or fun"},
                   {vsn,"1.3.1"},
                   {id,[]},
                   {modules,['Elixir.Slug']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,snap,
                  [{description,"A modern Elasticsearch/OpenSearch client"},
                   {vsn,"0.11.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Enumerable.Snap.Hits',
                        'Elixir.Enumerable.Snap.SearchResponse','Elixir.Snap',
                        'Elixir.Snap.Aggregation','Elixir.Snap.Auth',
                        'Elixir.Snap.Auth.Plain','Elixir.Snap.Bulk',
                        'Elixir.Snap.Bulk.Action',
                        'Elixir.Snap.Bulk.Action.Create',
                        'Elixir.Snap.Bulk.Action.Delete',
                        'Elixir.Snap.Bulk.Action.Index',
                        'Elixir.Snap.Bulk.Action.Update',
                        'Elixir.Snap.Bulk.Actions','Elixir.Snap.BulkError',
                        'Elixir.Snap.Cluster','Elixir.Snap.Cluster.Namespace',
                        'Elixir.Snap.Cluster.Supervisor','Elixir.Snap.Config',
                        'Elixir.Snap.Document','Elixir.Snap.HTTPClient',
                        'Elixir.Snap.HTTPClient.Adapters.Finch',
                        'Elixir.Snap.HTTPClient.Error',
                        'Elixir.Snap.HTTPClient.Response',
                        'Elixir.Snap.HTTPError','Elixir.Snap.Hit',
                        'Elixir.Snap.Hits','Elixir.Snap.Indexes',
                        'Elixir.Snap.Multi','Elixir.Snap.Multi.Response',
                        'Elixir.Snap.Multi.Search','Elixir.Snap.Request',
                        'Elixir.Snap.ResponseError','Elixir.Snap.Search',
                        'Elixir.Snap.SearchResponse','Elixir.Snap.Suggest',
                        'Elixir.Snap.Suggest.Option',
                        'Elixir.Snap.Suggest.Options','Elixir.Snap.Suggests',
                        'Elixir.Snap.Test']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,logger,castore,jason,telemetry]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,combine,
                  [{description,
                       "A parser combinator library for Elixir projects."},
                   {vsn,"0.10.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Combine','Elixir.Combine.Helpers',
                        'Elixir.Combine.ParserState',
                        'Elixir.Combine.Parsers.Base',
                        'Elixir.Combine.Parsers.Binary',
                        'Elixir.Combine.Parsers.Text']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,expo,
                  [{description,
                       "Low-level Gettext file handling (.po/.pot/.mo file writer and parser)."},
                   {vsn,"1.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Expo.MO','Elixir.Expo.MO.Composer',
                        'Elixir.Expo.MO.InvalidFileError',
                        'Elixir.Expo.MO.Parser',
                        'Elixir.Expo.MO.UnsupportedVersionError',
                        'Elixir.Expo.Message','Elixir.Expo.Message.Plural',
                        'Elixir.Expo.Message.Singular','Elixir.Expo.Messages',
                        'Elixir.Expo.PO','Elixir.Expo.PO.Composer',
                        'Elixir.Expo.PO.DuplicateMessagesError',
                        'Elixir.Expo.PO.Parser','Elixir.Expo.PO.SyntaxError',
                        'Elixir.Expo.PO.Tokenizer','Elixir.Expo.PluralForms',
                        'Elixir.Expo.PluralForms.Known',
                        'Elixir.Expo.PluralForms.SyntaxError',
                        'Elixir.Expo.PluralForms.Tokenizer',
                        'Elixir.Expo.Util',
                        'Elixir.Inspect.Expo.Message.Plural',
                        'Elixir.Inspect.Expo.Message.Singular',
                        'Elixir.Inspect.Expo.PluralForms',
                        'Elixir.Mix.Tasks.Expo.Msgfmt',
                        'Elixir.Mix.Tasks.Expo.Msguniq',
                        expo_plural_forms_parser,expo_po_parser]},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,gettext,
                  [{description,
                       "Internationalization and localization through gettext"},
                   {vsn,"0.26.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Gettext','Elixir.Gettext.Application',
                        'Elixir.Gettext.Backend','Elixir.Gettext.Compiler',
                        'Elixir.Gettext.Error','Elixir.Gettext.Extractor',
                        'Elixir.Gettext.ExtractorAgent',
                        'Elixir.Gettext.Fuzzy','Elixir.Gettext.Interpolation',
                        'Elixir.Gettext.Interpolation.Default',
                        'Elixir.Gettext.Macros','Elixir.Gettext.Merger',
                        'Elixir.Gettext.MissingBindingsError',
                        'Elixir.Gettext.Plural',
                        'Elixir.Gettext.Plural.UnknownLocaleError',
                        'Elixir.Gettext.PluralFormError',
                        'Elixir.Mix.Tasks.Compile.Gettext',
                        'Elixir.Mix.Tasks.Gettext.Extract',
                        'Elixir.Mix.Tasks.Gettext.Merge']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,expo]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{default_locale,<<"en">>},
                        {plural_forms,'Elixir.Gettext.Plural'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Gettext.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,tzdata,
                  [{description,
                       "Tzdata is a parser and library for the tz database.\n"},
                   {vsn,"1.1.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Tzdata','Elixir.Tzdata.App',
                        'Elixir.Tzdata.BasicDataMap',
                        'Elixir.Tzdata.DataBuilder',
                        'Elixir.Tzdata.DataLoader','Elixir.Tzdata.EtsHolder',
                        'Elixir.Tzdata.FarFutureDynamicPeriods',
                        'Elixir.Tzdata.HTTPClient',
                        'Elixir.Tzdata.HTTPClient.Hackney',
                        'Elixir.Tzdata.LeapSecParser','Elixir.Tzdata.Parser',
                        'Elixir.Tzdata.ParserOrganizer',
                        'Elixir.Tzdata.PeriodBuilder',
                        'Elixir.Tzdata.ReleaseReader',
                        'Elixir.Tzdata.ReleaseUpdater',
                        'Elixir.Tzdata.TimeZoneDatabase',
                        'Elixir.Tzdata.Util']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,hackney]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{autoupdate,enabled},
                        {data_dir,nil},
                        {http_client,'Elixir.Tzdata.HTTPClient.Hackney'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Tzdata.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,timex,
                  [{description,
                       "Timex is a rich, comprehensive Date/Time library for Elixir projects, with full timezone support via the :tzdata package.\nIf you need to manipulate dates, times, datetimes, timestamps, etc., then Timex is for you!\n"},
                   {vsn,"3.7.11"},
                   {id,[]},
                   {modules,
                       ['Elixir.Enumerable.Timex.Interval',
                        'Elixir.Inspect.Timex.AmbiguousDateTime',
                        'Elixir.Inspect.Timex.AmbiguousTimezoneInfo',
                        'Elixir.Inspect.Timex.Duration',
                        'Elixir.Inspect.Timex.TimezoneInfo','Elixir.Timex',
                        'Elixir.Timex.AmbiguousDateTime',
                        'Elixir.Timex.AmbiguousTimezoneInfo',
                        'Elixir.Timex.Calendar.Julian',
                        'Elixir.Timex.Comparable',
                        'Elixir.Timex.Comparable.Date',
                        'Elixir.Timex.Comparable.DateTime',
                        'Elixir.Timex.Comparable.Diff',
                        'Elixir.Timex.Comparable.NaiveDateTime',
                        'Elixir.Timex.Comparable.Timex.AmbiguousDateTime',
                        'Elixir.Timex.Comparable.Tuple',
                        'Elixir.Timex.Comparable.Utils',
                        'Elixir.Timex.Constants','Elixir.Timex.Convert',
                        'Elixir.Timex.ConvertError','Elixir.Timex.Date',
                        'Elixir.Timex.DateTime',
                        'Elixir.Timex.DateTime.Helpers',
                        'Elixir.Timex.Duration',
                        'Elixir.Timex.Format.DateTime.Formatter',
                        'Elixir.Timex.Format.DateTime.Formatters.Default',
                        'Elixir.Timex.Format.DateTime.Formatters.Relative',
                        'Elixir.Timex.Format.DateTime.Formatters.Strftime',
                        'Elixir.Timex.Format.Duration.Formatter',
                        'Elixir.Timex.Format.Duration.Formatters.Default',
                        'Elixir.Timex.Format.Duration.Formatters.Humanized',
                        'Elixir.Timex.Format.FormatError',
                        'Elixir.Timex.Gettext','Elixir.Timex.Helpers',
                        'Elixir.Timex.Interval',
                        'Elixir.Timex.Interval.FormatError',
                        'Elixir.Timex.Macros','Elixir.Timex.NaiveDateTime',
                        'Elixir.Timex.Parse.DateTime.Helpers',
                        'Elixir.Timex.Parse.DateTime.Parser',
                        'Elixir.Timex.Parse.DateTime.Parsers',
                        'Elixir.Timex.Parse.DateTime.Parsers.ISO8601Extended',
                        'Elixir.Timex.Parse.DateTime.Tokenizer',
                        'Elixir.Timex.Parse.DateTime.Tokenizers.Default',
                        'Elixir.Timex.Parse.DateTime.Tokenizers.Directive',
                        'Elixir.Timex.Parse.DateTime.Tokenizers.Strftime',
                        'Elixir.Timex.Parse.Duration.Parser',
                        'Elixir.Timex.Parse.Duration.Parsers.ISO8601Parser',
                        'Elixir.Timex.Parse.ParseError',
                        'Elixir.Timex.Parse.Timezones.Posix',
                        'Elixir.Timex.Parse.ZoneInfo.Parser',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.Header',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.LeapSecond',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.Rule',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.TransitionInfo',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.Zone',
                        'Elixir.Timex.PosixTimezone','Elixir.Timex.Protocol',
                        'Elixir.Timex.Protocol.Any',
                        'Elixir.Timex.Protocol.Date',
                        'Elixir.Timex.Protocol.DateTime',
                        'Elixir.Timex.Protocol.Map',
                        'Elixir.Timex.Protocol.NaiveDateTime',
                        'Elixir.Timex.Protocol.Tuple','Elixir.Timex.Time',
                        'Elixir.Timex.Timezone',
                        'Elixir.Timex.Timezone.Database',
                        'Elixir.Timex.Timezone.Local',
                        'Elixir.Timex.Timezone.Utils',
                        'Elixir.Timex.TimezoneInfo','Elixir.Timex.Translator',
                        'Elixir.Timex.Types']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,combine,gettext,tzdata]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{local_timezone,nil}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Timex',[]}}]}]}},
     {apply,
         {application,load,
             [{application,toml,
                  [{description,
                       "An implementation of TOML for Elixir projects"},
                   {vsn,"0.7.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Toml','Elixir.Toml.Builder',
                        'Elixir.Toml.Decoder','Elixir.Toml.Document',
                        'Elixir.Toml.Error','Elixir.Toml.Lexer',
                        'Elixir.Toml.Lexer.Guards','Elixir.Toml.Lexer.String',
                        'Elixir.Toml.Provider','Elixir.Toml.Transform']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ueberauth,
                  [{description,
                       "An Elixir Authentication System for Plug-based Web Applications"},
                   {vsn,"0.10.8"},
                   {id,[]},
                   {modules,
                       ['Elixir.Ueberauth','Elixir.Ueberauth.Auth',
                        'Elixir.Ueberauth.Auth.Credentials',
                        'Elixir.Ueberauth.Auth.Extra',
                        'Elixir.Ueberauth.Auth.Info',
                        'Elixir.Ueberauth.Failure',
                        'Elixir.Ueberauth.Failure.Error',
                        'Elixir.Ueberauth.Strategy',
                        'Elixir.Ueberauth.Strategy.Helpers']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,plug]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ueberauth_identity,
                  [{description,"ueberauth_identity"},
                   {vsn,"0.4.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Ueberauth.Strategy.Identity',
                        'Elixir.UeberauthIdentity']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,ueberauth]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,waffle,
                  [{description,
                       "Flexible file upload and attachment library for Elixir.\n"},
                   {vsn,"1.1.9"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix.Tasks.Waffle','Elixir.Mix.Tasks.Waffle.G',
                        'Elixir.Waffle','Elixir.Waffle.Actions.Delete',
                        'Elixir.Waffle.Actions.Store',
                        'Elixir.Waffle.Actions.Url',
                        'Elixir.Waffle.Definition',
                        'Elixir.Waffle.Definition.Storage',
                        'Elixir.Waffle.Definition.Versioning',
                        'Elixir.Waffle.File',
                        'Elixir.Waffle.MissingExecutableError',
                        'Elixir.Waffle.Processor',
                        'Elixir.Waffle.Storage.Local',
                        'Elixir.Waffle.Storage.S3',
                        'Elixir.Waffle.Transformations.Convert']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,eex,hackney]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,waffle_ecto,
                  [{description,"An integration with Waffle and Ecto.\n"},
                   {vsn,"0.0.12"},
                   {id,[]},
                   {modules,
                       ['Elixir.Waffle.Ecto','Elixir.Waffle.Ecto.Definition',
                        'Elixir.Waffle.Ecto.Schema',
                        'Elixir.Waffle.Ecto.Type']},
                   {registered,[]},
                   {applications,[kernel,stdlib,elixir,logger,ecto,waffle]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,waffle_gcs,
                  [{description,
                       "Google Cloud Storage integration for Waffle file uploader library."},
                   {vsn,"0.2.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Waffle.Storage.Google.CloudStorage',
                        'Elixir.Waffle.Storage.Google.Token.DefaultFetcher',
                        'Elixir.Waffle.Storage.Google.Token.Fetcher',
                        'Elixir.Waffle.Storage.Google.Url',
                        'Elixir.Waffle.Storage.Google.UrlV2',
                        'Elixir.Waffle.Storage.Google.Util',
                        'Elixir.Waffle.Types']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,google_api_storage,goth,waffle]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,dynamic,
                  [{description,"dynamic"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Dynamic',
                        'Elixir.Dynamic.AccessControls.AccessControlsHandler',
                        'Elixir.Dynamic.AccessControls.AccessControlsRouter',
                        'Elixir.Dynamic.ApiSpec','Elixir.Dynamic.Application',
                        'Elixir.Dynamic.Audit.Audit',
                        'Elixir.Dynamic.Audit.AuditRouter',
                        'Elixir.Dynamic.Auth.AuthRouter',
                        'Elixir.Dynamic.AuthErrorHandler',
                        'Elixir.Dynamic.Authentication',
                        'Elixir.Dynamic.AvatarUploader.File',
                        'Elixir.Dynamic.AvatarUploader.File.Type',
                        'Elixir.Dynamic.BaseContent',
                        'Elixir.Dynamic.BaseStructures',
                        'Elixir.Dynamic.CheckPermissions',
                        'Elixir.Dynamic.ConditionParser',
                        'Elixir.Dynamic.Converter',
                        'Elixir.Dynamic.Dashboard.DashboardHandler',
                        'Elixir.Dynamic.Dashboard.DashboardRouter',
                        'Elixir.Dynamic.Data.Data',
                        'Elixir.Dynamic.Data.DataHandler',
                        'Elixir.Dynamic.Data.DataHandler.Job',
                        'Elixir.Dynamic.Data.DataHandler.Request',
                        'Elixir.Dynamic.Data.DataRouter',
                        'Elixir.Dynamic.DateTimeWithOffset',
                        'Elixir.Dynamic.DbmlParser',
                        'Elixir.Dynamic.Docs.AuditSchema',
                        'Elixir.Dynamic.Docs.AuditSchema.Index',
                        'Elixir.Dynamic.Docs.AuthSchema',
                        'Elixir.Dynamic.Docs.AuthSchema.Delete',
                        'Elixir.Dynamic.Docs.AuthSchema.Post',
                        'Elixir.Dynamic.Docs.DataSchema',
                        'Elixir.Dynamic.Docs.DataSchema.Delete',
                        'Elixir.Dynamic.Docs.DataSchema.Docs',
                        'Elixir.Dynamic.Docs.DataSchema.Show',
                        'Elixir.Dynamic.Docs.DataSchema.Update',
                        'Elixir.Dynamic.Docs.DbdocsGenerator',
                        'Elixir.Dynamic.Docs.DbmlGenerator',
                        'Elixir.Dynamic.Docs.DbmlGojs',
                        'Elixir.Dynamic.Docs.DocsGenerator',
                        'Elixir.Dynamic.Docs.DocsRouter',
                        'Elixir.Dynamic.Docs.FilesSchema',
                        'Elixir.Dynamic.Docs.FilesSchema.Delete',
                        'Elixir.Dynamic.Docs.FilesSchema.Index',
                        'Elixir.Dynamic.Docs.FilesSchema.Post',
                        'Elixir.Dynamic.Docs.FilesSchema.Show',
                        'Elixir.Dynamic.Docs.FilesSchema.Update',
                        'Elixir.Dynamic.Docs.IndexSchema',
                        'Elixir.Dynamic.Docs.IndexSchema.Delete',
                        'Elixir.Dynamic.Docs.IndexSchema.Get',
                        'Elixir.Dynamic.Docs.IndexSchema.Index',
                        'Elixir.Dynamic.Docs.IndexSchema.Post',
                        'Elixir.Dynamic.Docs.JsonSchemaCompiler',
                        'Elixir.Dynamic.Docs.JsonSchemaUiCompiler',
                        'Elixir.Dynamic.Docs.MermaidGenerator',
                        'Elixir.Dynamic.Docs.RoleSchema',
                        'Elixir.Dynamic.Docs.RoleSchema.Delete',
                        'Elixir.Dynamic.Docs.RoleSchema.Index',
                        'Elixir.Dynamic.Docs.RoleSchema.Post',
                        'Elixir.Dynamic.Docs.RoleSchema.Show',
                        'Elixir.Dynamic.Docs.RoleSchema.Update',
                        'Elixir.Dynamic.Docs.SchemaApi',
                        'Elixir.Dynamic.Docs.SchemaMacro',
                        'Elixir.Dynamic.Docs.SearchSchema',
                        'Elixir.Dynamic.Docs.SearchSchema.Index',
                        'Elixir.Dynamic.Docs.StructureSchema',
                        'Elixir.Dynamic.Docs.StructureSchema.Get',
                        'Elixir.Dynamic.Docs.StructureSchema.Post',
                        'Elixir.Dynamic.Docs.UserSchema',
                        'Elixir.Dynamic.Docs.UserSchema.Delete',
                        'Elixir.Dynamic.Docs.UserSchema.Index',
                        'Elixir.Dynamic.Docs.UserSchema.Post',
                        'Elixir.Dynamic.Docs.UserSchema.Show',
                        'Elixir.Dynamic.Docs.UserSchema.Update',
                        'Elixir.Dynamic.Docs.ViewSchema',
                        'Elixir.Dynamic.Docs.ViewSchema.Get',
                        'Elixir.Dynamic.Docs.ViewSchema.Post',
                        'Elixir.Dynamic.DynamicHandler',
                        'Elixir.Dynamic.DynamicRouter',
                        'Elixir.Dynamic.Elasticsearch.Document',
                        'Elixir.Dynamic.Elasticsearch.ElasticsearchStore',
                        'Elixir.Dynamic.ElasticsearchCluster',
                        'Elixir.Dynamic.EncodedParser',
                        'Elixir.Dynamic.Endpoints.EndpointHandler',
                        'Elixir.Dynamic.Endpoints.EndpointRouter',
                        'Elixir.Dynamic.FileUploader.Files',
                        'Elixir.Dynamic.FileUploader.Files.Type',
                        'Elixir.Dynamic.Files.FilesHandler',
                        'Elixir.Dynamic.Files.FilesRouter',
                        'Elixir.Dynamic.Functions.AddKey',
                        'Elixir.Dynamic.Functions.CreateIndex',
                        'Elixir.Dynamic.Functions.CreateRecord',
                        'Elixir.Dynamic.Functions.CreateTable',
                        'Elixir.Dynamic.Functions.CreateView',
                        'Elixir.Dynamic.Functions.DeleteIndex',
                        'Elixir.Dynamic.Functions.DeleteRecord',
                        'Elixir.Dynamic.Functions.DeleteTable',
                        'Elixir.Dynamic.Functions.DeleteView',
                        'Elixir.Dynamic.Functions.Helpers',
                        'Elixir.Dynamic.Functions.ReadLogs',
                        'Elixir.Dynamic.Functions.ReadRecord',
                        'Elixir.Dynamic.Functions.ReadTable',
                        'Elixir.Dynamic.Functions.ReadView',
                        'Elixir.Dynamic.Functions.RecordsTable',
                        'Elixir.Dynamic.Functions.Relations',
                        'Elixir.Dynamic.Functions.TablesTable',
                        'Elixir.Dynamic.Functions.UpdateRecord',
                        'Elixir.Dynamic.Functions.UpdateTable',
                        'Elixir.Dynamic.Functions.UpdateTimestamps',
                        'Elixir.Dynamic.Functions.UpdateView',
                        'Elixir.Dynamic.Functions.ViewsTable',
                        'Elixir.Dynamic.GlobalSetup','Elixir.Dynamic.Goth',
                        'Elixir.Dynamic.Helpers.HelpersRouter',
                        'Elixir.Dynamic.Import.ImportRouter',
                        'Elixir.Dynamic.Indexes.IndexHandler',
                        'Elixir.Dynamic.Indexes.IndexHandler.Request',
                        'Elixir.Dynamic.Indexes.IndexRouter',
                        'Elixir.Dynamic.JWT','Elixir.Dynamic.JWT.Plug',
                        'Elixir.Dynamic.Jobs.CreateJob',
                        'Elixir.Dynamic.Jobs.JobsRouter',
                        'Elixir.Dynamic.JsonResolver','Elixir.Dynamic.Jsonb',
                        'Elixir.Dynamic.Logs.LogsHandler',
                        'Elixir.Dynamic.Logs.LogsRouter',
                        'Elixir.Dynamic.Oban.AbstractWorker',
                        'Elixir.Dynamic.Oban.ArchiveRecords',
                        'Elixir.Dynamic.Oban.CleanLogs',
                        'Elixir.Dynamic.Plug.AuthHandler',
                        'Elixir.Dynamic.Plug.CurrentUser',
                        'Elixir.Dynamic.Plug.RequestLogger',
                        'Elixir.Dynamic.PromEx','Elixir.Dynamic.QueryBuilder',
                        'Elixir.Dynamic.Release','Elixir.Dynamic.Repo',
                        'Elixir.Dynamic.ReservedNames',
                        'Elixir.Dynamic.Roles.RolesRouter',
                        'Elixir.Dynamic.Router',
                        'Elixir.Dynamic.SchemaCompiler',
                        'Elixir.Dynamic.Schemas',
                        'Elixir.Dynamic.Schemas.AuthRequest',
                        'Elixir.Dynamic.Schemas.AuthResponse',
                        'Elixir.Dynamic.Schemas.BadRequestError',
                        'Elixir.Dynamic.Schemas.ConflictError',
                        'Elixir.Dynamic.Schemas.CreateData',
                        'Elixir.Dynamic.Schemas.CreateDataResponce',
                        'Elixir.Dynamic.Schemas.CreateStructure',
                        'Elixir.Dynamic.Schemas.CreateStructureBody',
                        'Elixir.Dynamic.Schemas.CreateStructureBodySchema',
                        'Elixir.Dynamic.Schemas.CreateView',
                        'Elixir.Dynamic.Schemas.CreateViewBody',
                        'Elixir.Dynamic.Schemas.CreateViewBodySchema',
                        'Elixir.Dynamic.Schemas.DataObject',
                        'Elixir.Dynamic.Schemas.DataRequest',
                        'Elixir.Dynamic.Schemas.DataResponse',
                        'Elixir.Dynamic.Schemas.DeleteData',
                        'Elixir.Dynamic.Schemas.DeleteDataResponce',
                        'Elixir.Dynamic.Schemas.DeleteStructure',
                        'Elixir.Dynamic.Schemas.DeleteStructureBody',
                        'Elixir.Dynamic.Schemas.DeleteViewBody',
                        'Elixir.Dynamic.Schemas.Files',
                        'Elixir.Dynamic.Schemas.ForbiddenError',
                        'Elixir.Dynamic.Schemas.GetStructureColumnSchema',
                        'Elixir.Dynamic.Schemas.GetStructureResponse',
                        'Elixir.Dynamic.Schemas.GetStructureTableSchema',
                        'Elixir.Dynamic.Schemas.GroupRoles',
                        'Elixir.Dynamic.Schemas.Groups',
                        'Elixir.Dynamic.Schemas.InternalServerError',
                        'Elixir.Dynamic.Schemas.NotFoundError',
                        'Elixir.Dynamic.Schemas.ReadData',
                        'Elixir.Dynamic.Schemas.ReadDataResponce',
                        'Elixir.Dynamic.Schemas.ReadStructure',
                        'Elixir.Dynamic.Schemas.ReadStructureBody',
                        'Elixir.Dynamic.Schemas.ReadStructureBodySchema',
                        'Elixir.Dynamic.Schemas.ReadStructureResponse',
                        'Elixir.Dynamic.Schemas.ReadView',
                        'Elixir.Dynamic.Schemas.ReadViewBody',
                        'Elixir.Dynamic.Schemas.ReadViewResponse',
                        'Elixir.Dynamic.Schemas.RequestLogs',
                        'Elixir.Dynamic.Schemas.Roles',
                        'Elixir.Dynamic.Schemas.RolesGetRequest',
                        'Elixir.Dynamic.Schemas.RolesPostRequest',
                        'Elixir.Dynamic.Schemas.RolesResponse',
                        'Elixir.Dynamic.Schemas.StructureData',
                        'Elixir.Dynamic.Schemas.StructureErrorNotFoundResponse',
                        'Elixir.Dynamic.Schemas.StructureObject',
                        'Elixir.Dynamic.Schemas.StructureRequest',
                        'Elixir.Dynamic.Schemas.UnauthorizedError',
                        'Elixir.Dynamic.Schemas.UnprocessableEntityError',
                        'Elixir.Dynamic.Schemas.UpdateData',
                        'Elixir.Dynamic.Schemas.UpdateDataResponce',
                        'Elixir.Dynamic.Schemas.UpdateStructure',
                        'Elixir.Dynamic.Schemas.UpdateStructureBody',
                        'Elixir.Dynamic.Schemas.UpdateStructureBodySchema',
                        'Elixir.Dynamic.Schemas.UpdateView',
                        'Elixir.Dynamic.Schemas.UpdateViewBody',
                        'Elixir.Dynamic.Schemas.UpdateViewBodySchema',
                        'Elixir.Dynamic.Schemas.UserGroups',
                        'Elixir.Dynamic.Schemas.UserRequest',
                        'Elixir.Dynamic.Schemas.UserResponse',
                        'Elixir.Dynamic.Schemas.UserRoles',
                        'Elixir.Dynamic.Schemas.Users',
                        'Elixir.Dynamic.Schemas.ViewData',
                        'Elixir.Dynamic.Schemas.ViewErrorInvalidResponse',
                        'Elixir.Dynamic.Schemas.ViewErrorNotFoundResponse',
                        'Elixir.Dynamic.Schemas.ViewErrorResponse',
                        'Elixir.Dynamic.Schemas.ViewRequest',
                        'Elixir.Dynamic.Schemas.ViewResponse',
                        'Elixir.Dynamic.Search.SearchHandler',
                        'Elixir.Dynamic.Search.SearchRouter',
                        'Elixir.Dynamic.SetPermissions',
                        'Elixir.Dynamic.SetSchemas',
                        'Elixir.Dynamic.SocketHandler',
                        'Elixir.Dynamic.Structure.ColumnDefinitions',
                        'Elixir.Dynamic.Structure.StructureHandler',
                        'Elixir.Dynamic.Structure.StructureHandler.Job',
                        'Elixir.Dynamic.Structure.StructureHandler.Request',
                        'Elixir.Dynamic.Structure.StructureRouter',
                        'Elixir.Dynamic.Structures.Avatar',
                        'Elixir.Dynamic.Structures.Base',
                        'Elixir.Dynamic.Structures.Config',
                        'Elixir.Dynamic.Structures.Document',
                        'Elixir.Dynamic.Structures.Endpoint',
                        'Elixir.Dynamic.Structures.File',
                        'Elixir.Dynamic.Structures.Group',
                        'Elixir.Dynamic.Structures.GroupRole',
                        'Elixir.Dynamic.Structures.Job',
                        'Elixir.Dynamic.Structures.Record',
                        'Elixir.Dynamic.Structures.RequestLog',
                        'Elixir.Dynamic.Structures.Role',
                        'Elixir.Dynamic.Structures.Table',
                        'Elixir.Dynamic.Structures.User',
                        'Elixir.Dynamic.Structures.UserGroup',
                        'Elixir.Dynamic.Structures.UserRole',
                        'Elixir.Dynamic.Structures.View',
                        'Elixir.Dynamic.SubqueryParser',
                        'Elixir.Dynamic.Users.UsersRouter',
                        'Elixir.Dynamic.Utils',
                        'Elixir.Dynamic.Validations.BaseTable',
                        'Elixir.Dynamic.View.ViewHandler',
                        'Elixir.Dynamic.View.ViewHandler.Request',
                        'Elixir.Dynamic.View.ViewRouter',
                        'Elixir.Dynamic.ViewParser',
                        'Elixir.Dynamic.Views.AccessControlsView',
                        'Elixir.Dynamic.Views.ConfigView',
                        'Elixir.Dynamic.Views.EndpointView',
                        'Elixir.Dynamic.Views.ErrorView',
                        'Elixir.Dynamic.Views.GroupView',
                        'Elixir.Dynamic.Views.JobsView',
                        'Elixir.Dynamic.Views.RecordView',
                        'Elixir.Dynamic.Views.RoleView',
                        'Elixir.Dynamic.Views.TableView',
                        'Elixir.Dynamic.Views.UserView',
                        'Elixir.Dynamic.Views.ViewView',
                        'Elixir.Dynamic.Workflows',
                        'Elixir.Dynamic.Workflows.Action',
                        'Elixir.Dynamic.Workflows.Condition',
                        'Elixir.Dynamic.Workflows.Step',
                        'Elixir.Dynamic.Workflows.Workflow',
                        'Elixir.Elasticsearch.Document.Dynamic.Structures.Document',
                        'Elixir.Elasticsearch.Document.Dynamic.Structures.Record',
                        'Elixir.Elasticsearch.Document.Dynamic.Structures.Table',
                        'Elixir.Elasticsearch.Document.Dynamic.Structures.View',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.AuthRequest',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.AuthResponse',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.BadRequestError',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ConflictError',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.CreateData',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.CreateDataResponce',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.CreateStructure',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.CreateStructureBody',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.CreateStructureBodySchema',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.CreateView',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.CreateViewBody',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.CreateViewBodySchema',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.DataObject',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.DataRequest',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.DataResponse',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.DeleteData',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.DeleteDataResponce',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.DeleteStructure',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.DeleteStructureBody',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.DeleteViewBody',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.Files',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ForbiddenError',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.GetStructureColumnSchema',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.GetStructureResponse',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.GetStructureTableSchema',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.GroupRoles',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.Groups',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.InternalServerError',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.NotFoundError',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ReadData',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ReadDataResponce',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ReadStructure',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ReadStructureBody',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ReadStructureBodySchema',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ReadStructureResponse',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ReadView',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ReadViewBody',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ReadViewResponse',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.RequestLogs',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.Roles',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.RolesGetRequest',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.RolesPostRequest',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.RolesResponse',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.StructureData',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.StructureErrorNotFoundResponse',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.StructureObject',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.StructureRequest',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.UnauthorizedError',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.UnprocessableEntityError',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.UpdateData',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.UpdateDataResponce',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.UpdateStructure',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.UpdateStructureBody',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.UpdateStructureBodySchema',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.UpdateView',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.UpdateViewBody',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.UpdateViewBodySchema',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.UserGroups',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.UserRequest',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.UserResponse',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.UserRoles',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.Users',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ViewData',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ViewErrorInvalidResponse',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ViewErrorNotFoundResponse',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ViewErrorResponse',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ViewRequest',
                        'Elixir.Jason.Encoder.Dynamic.Schemas.ViewResponse',
                        'Elixir.Jason.Encoder.Dynamic.Structures.Endpoint',
                        'Elixir.Jason.Encoder.Dynamic.Structures.File',
                        'Elixir.Jason.Encoder.Dynamic.Structures.Role',
                        'Elixir.Jason.Encoder.Dynamic.Structures.User',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.AuthRequest',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.AuthResponse',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.BadRequestError',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ConflictError',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.CreateData',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.CreateDataResponce',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.CreateStructure',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.CreateStructureBody',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.CreateStructureBodySchema',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.CreateView',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.CreateViewBody',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.CreateViewBodySchema',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.DataObject',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.DataRequest',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.DataResponse',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.DeleteData',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.DeleteDataResponce',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.DeleteStructure',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.DeleteStructureBody',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.DeleteViewBody',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.Files',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ForbiddenError',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.GetStructureColumnSchema',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.GetStructureResponse',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.GetStructureTableSchema',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.GroupRoles',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.Groups',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.InternalServerError',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.NotFoundError',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ReadData',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ReadDataResponce',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ReadStructure',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ReadStructureBody',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ReadStructureBodySchema',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ReadStructureResponse',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ReadView',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ReadViewBody',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ReadViewResponse',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.RequestLogs',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.Roles',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.RolesGetRequest',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.RolesPostRequest',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.RolesResponse',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.StructureData',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.StructureErrorNotFoundResponse',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.StructureObject',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.StructureRequest',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.UnauthorizedError',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.UnprocessableEntityError',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.UpdateData',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.UpdateDataResponce',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.UpdateStructure',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.UpdateStructureBody',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.UpdateStructureBodySchema',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.UpdateView',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.UpdateViewBody',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.UpdateViewBodySchema',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.UserGroups',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.UserRequest',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.UserResponse',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.UserRoles',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.Users',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ViewData',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ViewErrorInvalidResponse',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ViewErrorNotFoundResponse',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ViewErrorResponse',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ViewRequest',
                        'Elixir.Poison.Encoder.Dynamic.Schemas.ViewResponse']},
                   {registered,[]},
                   {applications,
                       [kernel,stdlib,elixir,runtime_tools,logger,bamboo,
                        bcrypt_elixir,corsica,distillery,ecto,ecto_sql,
                        elasticsearch,ex_json_schema,ex_machina,execjs,finch,
                        google_api_storage,goth,guardian,guardian_db,inflex,
                        jason,json_schema,json_view,nested_filter,
                        nimble_parsec,oban,open_api_spex,pbkdf2_elixir,
                        phoenix_html,plug_cowboy,plug_socket,postgrex,prom_ex,
                        reverse_proxy_plug,scrivener,scrivener_ecto,
                        scrivener_list,slugify,snap,timex,toml,tzdata,
                        ueberauth,ueberauth_identity,waffle,waffle_ecto,
                        waffle_gcs]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Dynamic.Application',[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{'Elixir.Config.Provider',boot,[]}},
     {apply,{application,start_boot,[compiler,permanent]}},
     {apply,{application,start_boot,[elixir,permanent]}},
     {apply,{application,start_boot,[sasl,permanent]}},
     {apply,{application,start_boot,[runtime_tools,permanent]}},
     {apply,{application,start_boot,[logger,permanent]}},
     {apply,{application,start_boot,[eex,permanent]}},
     {apply,{application,start_boot,[asn1,permanent]}},
     {apply,{application,start_boot,[certifi,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[unicode_util_compat,permanent]}},
     {apply,{application,start_boot,[idna,permanent]}},
     {apply,{application,start_boot,[metrics,permanent]}},
     {apply,{application,start_boot,[mimerl,permanent]}},
     {apply,{application,start_boot,[syntax_tools,permanent]}},
     {apply,{application,start_boot,[parse_trans,permanent]}},
     {apply,{application,start_boot,[public_key,permanent]}},
     {apply,{application,start_boot,[ssl,permanent]}},
     {apply,{application,start_boot,[ssl_verify_fun,permanent]}},
     {apply,{application,start_boot,[hackney,permanent]}},
     {apply,{application,start_boot,[mime,permanent]}},
     {apply,{application,start_boot,[plug_crypto,permanent]}},
     {apply,{application,start_boot,[telemetry,permanent]}},
     {apply,{application,start_boot,[plug,permanent]}},
     {apply,{application,start_boot,[bamboo,permanent]}},
     {apply,{application,start_boot,[comeonin,permanent]}},
     {apply,{application,start_boot,[bcrypt_elixir,permanent]}},
     {apply,{application,start_boot,[corsica,permanent]}},
     {apply,{application,start_boot,[artificery,permanent]}},
     {apply,{application,start_boot,[distillery,permanent]}},
     {apply,{application,start_boot,[decimal,permanent]}},
     {apply,{application,start_boot,[ecto,permanent]}},
     {apply,{application,start_boot,[db_connection,permanent]}},
     {apply,{application,start_boot,[ecto_sql,permanent]}},
     {apply,{application,start_boot,[httpoison,permanent]}},
     {apply,{application,start_boot,[vex,permanent]}},
     {apply,{application,start_boot,[elasticsearch,permanent]}},
     {apply,{application,start_boot,[ex_json_schema,permanent]}},
     {apply,{application,start_boot,[ex_machina,permanent]}},
     {apply,{application,start_boot,[poison,permanent]}},
     {apply,{application,start_boot,[execjs,permanent]}},
     {apply,{application,start_boot,[hpax,permanent]}},
     {apply,{application,start_boot,[mint,permanent]}},
     {apply,{application,start_boot,[nimble_options,permanent]}},
     {apply,{application,start_boot,[nimble_pool,permanent]}},
     {apply,{application,start_boot,[finch,permanent]}},
     {apply,{application,start_boot,[inets,permanent]}},
     {apply,{application,start_boot,[tesla,permanent]}},
     {apply,{application,start_boot,[google_gax,permanent]}},
     {apply,{application,start_boot,[google_api_storage,permanent]}},
     {apply,{application,start_boot,[jason,permanent]}},
     {apply,{application,start_boot,[jose,permanent]}},
     {apply,{application,start_boot,[goth,permanent]}},
     {apply,{application,start_boot,[guardian,permanent]}},
     {apply,{application,start_boot,[guardian_db,permanent]}},
     {apply,{application,start_boot,[inflex,permanent]}},
     {apply,{application,start_boot,[typed_struct,permanent]}},
     {apply,{application,start_boot,[json_schema,permanent]}},
     {apply,{application,start_boot,[json_view,permanent]}},
     {apply,{application,start_boot,[nested_filter,permanent]}},
     {apply,{application,start_boot,[nimble_parsec,permanent]}},
     {apply,{application,start_boot,[oban,permanent]}},
     {apply,{application,start_boot,[open_api_spex,permanent]}},
     {apply,{application,start_boot,[pbkdf2_elixir,permanent]}},
     {apply,{application,start_boot,[phoenix_html,permanent]}},
     {apply,{application,start_boot,[cowlib,permanent]}},
     {apply,{application,start_boot,[ranch,permanent]}},
     {apply,{application,start_boot,[cowboy,permanent]}},
     {apply,{application,start_boot,[cowboy_telemetry,permanent]}},
     {apply,{application,start_boot,[plug_cowboy,permanent]}},
     {apply,{application,start_boot,[plug_socket,permanent]}},
     {apply,{application,start_boot,[postgrex,permanent]}},
     {apply,{application,start_boot,[castore,permanent]}},
     {apply,{application,start_boot,[octo_fetch,permanent]}},
     {apply,{application,start_boot,[telemetry_metrics,permanent]}},
     {apply,
         {application,start_boot,
             [telemetry_metrics_prometheus_core,permanent]}},
     {apply,{application,start_boot,[telemetry_poller,permanent]}},
     {apply,{application,start_boot,[prom_ex,permanent]}},
     {apply,{application,start_boot,[reverse_proxy_plug,permanent]}},
     {apply,{application,start_boot,[scrivener,permanent]}},
     {apply,{application,start_boot,[scrivener_ecto,permanent]}},
     {apply,{application,start_boot,[scrivener_list,permanent]}},
     {apply,{application,start_boot,[slugify,permanent]}},
     {apply,{application,start_boot,[snap,permanent]}},
     {apply,{application,start_boot,[combine,permanent]}},
     {apply,{application,start_boot,[expo,permanent]}},
     {apply,{application,start_boot,[gettext,permanent]}},
     {apply,{application,start_boot,[tzdata,permanent]}},
     {apply,{application,start_boot,[timex,permanent]}},
     {apply,{application,start_boot,[toml,permanent]}},
     {apply,{application,start_boot,[ueberauth,permanent]}},
     {apply,{application,start_boot,[ueberauth_identity,permanent]}},
     {apply,{application,start_boot,[waffle,permanent]}},
     {apply,{application,start_boot,[waffle_ecto,permanent]}},
     {apply,{application,start_boot,[waffle_gcs,permanent]}},
     {apply,{application,start_boot,[dynamic,permanent]}},
     {progress,started}]}.
